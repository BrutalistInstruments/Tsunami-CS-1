
TsunamiCS1Master.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000170  00800200  0000216c  00002200  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000216c  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000041e  00800370  00800370  00002370  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00002370  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000023a0  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000002a8  00000000  00000000  000023e0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00005230  00000000  00000000  00002688  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00001952  00000000  00000000  000078b8  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00001e92  00000000  00000000  0000920a  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  0000065c  00000000  00000000  0000b09c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000010fc  00000000  00000000  0000b6f8  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000023a7  00000000  00000000  0000c7f4  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000200  00000000  00000000  0000eb9b  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	71 c0       	rjmp	.+226    	; 0xe4 <__ctors_end>
       2:	00 00       	nop
       4:	8f c0       	rjmp	.+286    	; 0x124 <__bad_interrupt>
       6:	00 00       	nop
       8:	8d c0       	rjmp	.+282    	; 0x124 <__bad_interrupt>
       a:	00 00       	nop
       c:	8b c0       	rjmp	.+278    	; 0x124 <__bad_interrupt>
       e:	00 00       	nop
      10:	89 c0       	rjmp	.+274    	; 0x124 <__bad_interrupt>
      12:	00 00       	nop
      14:	87 c0       	rjmp	.+270    	; 0x124 <__bad_interrupt>
      16:	00 00       	nop
      18:	85 c0       	rjmp	.+266    	; 0x124 <__bad_interrupt>
      1a:	00 00       	nop
      1c:	83 c0       	rjmp	.+262    	; 0x124 <__bad_interrupt>
      1e:	00 00       	nop
      20:	81 c0       	rjmp	.+258    	; 0x124 <__bad_interrupt>
      22:	00 00       	nop
      24:	7f c0       	rjmp	.+254    	; 0x124 <__bad_interrupt>
      26:	00 00       	nop
      28:	7d c0       	rjmp	.+250    	; 0x124 <__bad_interrupt>
      2a:	00 00       	nop
      2c:	7b c0       	rjmp	.+246    	; 0x124 <__bad_interrupt>
      2e:	00 00       	nop
      30:	79 c0       	rjmp	.+242    	; 0x124 <__bad_interrupt>
      32:	00 00       	nop
      34:	77 c0       	rjmp	.+238    	; 0x124 <__bad_interrupt>
      36:	00 00       	nop
      38:	75 c0       	rjmp	.+234    	; 0x124 <__bad_interrupt>
      3a:	00 00       	nop
      3c:	73 c0       	rjmp	.+230    	; 0x124 <__bad_interrupt>
      3e:	00 00       	nop
      40:	71 c0       	rjmp	.+226    	; 0x124 <__bad_interrupt>
      42:	00 00       	nop
      44:	6f c0       	rjmp	.+222    	; 0x124 <__bad_interrupt>
      46:	00 00       	nop
      48:	6d c0       	rjmp	.+218    	; 0x124 <__bad_interrupt>
      4a:	00 00       	nop
      4c:	6b c0       	rjmp	.+214    	; 0x124 <__bad_interrupt>
      4e:	00 00       	nop
      50:	69 c0       	rjmp	.+210    	; 0x124 <__bad_interrupt>
      52:	00 00       	nop
      54:	67 c0       	rjmp	.+206    	; 0x124 <__bad_interrupt>
      56:	00 00       	nop
      58:	65 c0       	rjmp	.+202    	; 0x124 <__bad_interrupt>
      5a:	00 00       	nop
      5c:	5b c6       	rjmp	.+3254   	; 0xd14 <__vector_23>
      5e:	00 00       	nop
      60:	61 c0       	rjmp	.+194    	; 0x124 <__bad_interrupt>
      62:	00 00       	nop
      64:	5f c0       	rjmp	.+190    	; 0x124 <__bad_interrupt>
      66:	00 00       	nop
      68:	5d c0       	rjmp	.+186    	; 0x124 <__bad_interrupt>
      6a:	00 00       	nop
      6c:	0c 94 a8 0d 	jmp	0x1b50	; 0x1b50 <__vector_27>
      70:	59 c0       	rjmp	.+178    	; 0x124 <__bad_interrupt>
      72:	00 00       	nop
      74:	57 c0       	rjmp	.+174    	; 0x124 <__bad_interrupt>
      76:	00 00       	nop
      78:	55 c0       	rjmp	.+170    	; 0x124 <__bad_interrupt>
      7a:	00 00       	nop
      7c:	53 c0       	rjmp	.+166    	; 0x124 <__bad_interrupt>
      7e:	00 00       	nop
      80:	51 c0       	rjmp	.+162    	; 0x124 <__bad_interrupt>
      82:	00 00       	nop
      84:	4f c0       	rjmp	.+158    	; 0x124 <__bad_interrupt>
      86:	00 00       	nop
      88:	4d c0       	rjmp	.+154    	; 0x124 <__bad_interrupt>
      8a:	00 00       	nop
      8c:	4b c0       	rjmp	.+150    	; 0x124 <__bad_interrupt>
      8e:	00 00       	nop
      90:	0c 94 e4 0d 	jmp	0x1bc8	; 0x1bc8 <__vector_36>
      94:	47 c0       	rjmp	.+142    	; 0x124 <__bad_interrupt>
      96:	00 00       	nop
      98:	45 c0       	rjmp	.+138    	; 0x124 <__bad_interrupt>
      9a:	00 00       	nop
      9c:	43 c0       	rjmp	.+134    	; 0x124 <__bad_interrupt>
      9e:	00 00       	nop
      a0:	41 c0       	rjmp	.+130    	; 0x124 <__bad_interrupt>
      a2:	00 00       	nop
      a4:	3f c0       	rjmp	.+126    	; 0x124 <__bad_interrupt>
      a6:	00 00       	nop
      a8:	3d c0       	rjmp	.+122    	; 0x124 <__bad_interrupt>
      aa:	00 00       	nop
      ac:	3b c0       	rjmp	.+118    	; 0x124 <__bad_interrupt>
      ae:	00 00       	nop
      b0:	39 c0       	rjmp	.+114    	; 0x124 <__bad_interrupt>
      b2:	00 00       	nop
      b4:	37 c0       	rjmp	.+110    	; 0x124 <__bad_interrupt>
      b6:	00 00       	nop
      b8:	35 c0       	rjmp	.+106    	; 0x124 <__bad_interrupt>
      ba:	00 00       	nop
      bc:	33 c0       	rjmp	.+102    	; 0x124 <__bad_interrupt>
      be:	00 00       	nop
      c0:	31 c0       	rjmp	.+98     	; 0x124 <__bad_interrupt>
      c2:	00 00       	nop
      c4:	2f c0       	rjmp	.+94     	; 0x124 <__bad_interrupt>
      c6:	00 00       	nop
      c8:	2d c0       	rjmp	.+90     	; 0x124 <__bad_interrupt>
      ca:	00 00       	nop
      cc:	2b c0       	rjmp	.+86     	; 0x124 <__bad_interrupt>
      ce:	00 00       	nop
      d0:	29 c0       	rjmp	.+82     	; 0x124 <__bad_interrupt>
      d2:	00 00       	nop
      d4:	27 c0       	rjmp	.+78     	; 0x124 <__bad_interrupt>
      d6:	00 00       	nop
      d8:	25 c0       	rjmp	.+74     	; 0x124 <__bad_interrupt>
      da:	00 00       	nop
      dc:	23 c0       	rjmp	.+70     	; 0x124 <__bad_interrupt>
      de:	00 00       	nop
      e0:	21 c0       	rjmp	.+66     	; 0x124 <__bad_interrupt>
	...

000000e4 <__ctors_end>:
      e4:	11 24       	eor	r1, r1
      e6:	1f be       	out	0x3f, r1	; 63
      e8:	cf ef       	ldi	r28, 0xFF	; 255
      ea:	d1 e2       	ldi	r29, 0x21	; 33
      ec:	de bf       	out	0x3e, r29	; 62
      ee:	cd bf       	out	0x3d, r28	; 61
      f0:	00 e0       	ldi	r16, 0x00	; 0
      f2:	0c bf       	out	0x3c, r16	; 60

000000f4 <__do_copy_data>:
      f4:	13 e0       	ldi	r17, 0x03	; 3
      f6:	a0 e0       	ldi	r26, 0x00	; 0
      f8:	b2 e0       	ldi	r27, 0x02	; 2
      fa:	ec e6       	ldi	r30, 0x6C	; 108
      fc:	f1 e2       	ldi	r31, 0x21	; 33
      fe:	00 e0       	ldi	r16, 0x00	; 0
     100:	0b bf       	out	0x3b, r16	; 59
     102:	02 c0       	rjmp	.+4      	; 0x108 <__do_copy_data+0x14>
     104:	07 90       	elpm	r0, Z+
     106:	0d 92       	st	X+, r0
     108:	a0 37       	cpi	r26, 0x70	; 112
     10a:	b1 07       	cpc	r27, r17
     10c:	d9 f7       	brne	.-10     	; 0x104 <__do_copy_data+0x10>

0000010e <__do_clear_bss>:
     10e:	27 e0       	ldi	r18, 0x07	; 7
     110:	a0 e7       	ldi	r26, 0x70	; 112
     112:	b3 e0       	ldi	r27, 0x03	; 3
     114:	01 c0       	rjmp	.+2      	; 0x118 <.do_clear_bss_start>

00000116 <.do_clear_bss_loop>:
     116:	1d 92       	st	X+, r1

00000118 <.do_clear_bss_start>:
     118:	ae 38       	cpi	r26, 0x8E	; 142
     11a:	b2 07       	cpc	r27, r18
     11c:	e1 f7       	brne	.-8      	; 0x116 <.do_clear_bss_loop>
     11e:	2b d6       	rcall	.+3158   	; 0xd76 <main>
     120:	0c 94 b4 10 	jmp	0x2168	; 0x2168 <_exit>

00000124 <__bad_interrupt>:
     124:	6d cf       	rjmp	.-294    	; 0x0 <__vectors>

00000126 <initButtons>:

void initButtons()
{
	//this will initialize all of the buttons on the front panel
	//main trigger buttons
	PORTA = 0xFF;
     126:	8f ef       	ldi	r24, 0xFF	; 255
     128:	82 b9       	out	0x02, r24	; 2
	PORTL = 0xFF;
     12a:	80 93 0b 01 	sts	0x010B, r24	; 0x80010b <__TEXT_REGION_LENGTH__+0x70010b>

	//GPButtons and Encoder buttons
	PORTB = 0B01111111;
     12e:	8f e7       	ldi	r24, 0x7F	; 127
     130:	85 b9       	out	0x05, r24	; 5
     132:	08 95       	ret

00000134 <listenTrigButtons>:
	
}


void listenTrigButtons()
{
     134:	2f 92       	push	r2
     136:	3f 92       	push	r3
     138:	4f 92       	push	r4
     13a:	5f 92       	push	r5
     13c:	6f 92       	push	r6
     13e:	7f 92       	push	r7
     140:	8f 92       	push	r8
     142:	9f 92       	push	r9
     144:	af 92       	push	r10
     146:	bf 92       	push	r11
     148:	cf 92       	push	r12
     14a:	df 92       	push	r13
     14c:	ef 92       	push	r14
     14e:	ff 92       	push	r15
     150:	0f 93       	push	r16
     152:	1f 93       	push	r17
     154:	cf 93       	push	r28
     156:	df 93       	push	r29
	buttonsCurrentCycle = (PINL^255); //^ = bitwise XOR operation.
     158:	00 91 09 01 	lds	r16, 0x0109	; 0x800109 <__TEXT_REGION_LENGTH__+0x700109>
     15c:	00 95       	com	r16
     15e:	00 93 e2 04 	sts	0x04E2, r16	; 0x8004e2 <buttonsCurrentCycle>
	currentTrigButtons = (buttonsCurrentCycle << 8) | (PINA^255);
     162:	80 b1       	in	r24, 0x00	; 0
     164:	10 e0       	ldi	r17, 0x00	; 0
     166:	10 2f       	mov	r17, r16
     168:	00 27       	eor	r16, r16
     16a:	80 95       	com	r24
     16c:	08 2b       	or	r16, r24
     16e:	10 93 b1 05 	sts	0x05B1, r17	; 0x8005b1 <currentTrigButtons+0x1>
     172:	00 93 b0 05 	sts	0x05B0, r16	; 0x8005b0 <currentTrigButtons>
	if(currentTrigButtons!=lastFullBits) //we do read the buttons every cycle, but we don't need to update everything base on the buttons if they haven't changed.
     176:	80 91 70 03 	lds	r24, 0x0370	; 0x800370 <__data_end>
     17a:	90 91 71 03 	lds	r25, 0x0371	; 0x800371 <__data_end+0x1>
     17e:	08 17       	cp	r16, r24
     180:	19 07       	cpc	r17, r25
     182:	09 f4       	brne	.+2      	; 0x186 <listenTrigButtons+0x52>
     184:	d6 c0       	rjmp	.+428    	; 0x332 <listenTrigButtons+0x1fe>
	{
		lastFullBits = currentTrigButtons;
     186:	10 93 71 03 	sts	0x0371, r17	; 0x800371 <__data_end+0x1>
     18a:	00 93 70 03 	sts	0x0370, r16	; 0x800370 <__data_end>
     18e:	0f 2e       	mov	r0, r31
     190:	ff e9       	ldi	r31, 0x9F	; 159
     192:	cf 2e       	mov	r12, r31
     194:	f3 e0       	ldi	r31, 0x03	; 3
     196:	df 2e       	mov	r13, r31
     198:	f0 2d       	mov	r31, r0
     19a:	0f 2e       	mov	r0, r31
     19c:	ff e0       	ldi	r31, 0x0F	; 15
     19e:	ef 2e       	mov	r14, r31
     1a0:	f4 e0       	ldi	r31, 0x04	; 4
     1a2:	ff 2e       	mov	r15, r31
     1a4:	f0 2d       	mov	r31, r0
     1a6:	c0 e0       	ldi	r28, 0x00	; 0
     1a8:	d0 e0       	ldi	r29, 0x00	; 0
				numPrinter(screen2[1], 10, 4, currentSample);
				outputS(screen2[1], 1);
				switch (currentPattern.trackPlayMode[bc])
				{
					case 0:
					screen2[2][10] = 'P';
     1aa:	0f 2e       	mov	r0, r31
     1ac:	f4 eb       	ldi	r31, 0xB4	; 180
     1ae:	8f 2e       	mov	r8, r31
     1b0:	f5 e0       	ldi	r31, 0x05	; 5
     1b2:	9f 2e       	mov	r9, r31
     1b4:	f0 2d       	mov	r31, r0
     1b6:	0f 2e       	mov	r0, r31
     1b8:	f0 e5       	ldi	r31, 0x50	; 80
     1ba:	3f 2e       	mov	r3, r31
     1bc:	f0 2d       	mov	r31, r0
					screen2[2][11] = 'o';
     1be:	0f 2e       	mov	r0, r31
     1c0:	ff e6       	ldi	r31, 0x6F	; 111
     1c2:	5f 2e       	mov	r5, r31
     1c4:	f0 2d       	mov	r31, r0
					screen2[2][12] = 'l';
     1c6:	0f 2e       	mov	r0, r31
     1c8:	fc e6       	ldi	r31, 0x6C	; 108
     1ca:	4f 2e       	mov	r4, r31
     1cc:	f0 2d       	mov	r31, r0
					screen2[2][13] = 'y';
     1ce:	0f 2e       	mov	r0, r31
     1d0:	f9 e7       	ldi	r31, 0x79	; 121
     1d2:	2f 2e       	mov	r2, r31
     1d4:	f0 2d       	mov	r31, r0
		uint16_t fullBitsParse = currentTrigButtons;
		//play sounds, if that is the switch case on the encoder
	//updateLEDs
	for(uint8_t bc = 0; bc<16; bc++)//bc for buttonCounter
	{
		currentTrig = (fullBitsParse&1);
     1d6:	80 2f       	mov	r24, r16
     1d8:	81 70       	andi	r24, 0x01	; 1
     1da:	80 93 08 06 	sts	0x0608, r24	; 0x800608 <currentTrig>
		if(currentTrig)
     1de:	88 23       	and	r24, r24
     1e0:	09 f4       	brne	.+2      	; 0x1e4 <listenTrigButtons+0xb0>
     1e2:	9a c0       	rjmp	.+308    	; 0x318 <listenTrigButtons+0x1e4>
		{
			switch (encoderAValue)
     1e4:	80 91 86 03 	lds	r24, 0x0386	; 0x800386 <encoderAValue>
     1e8:	81 30       	cpi	r24, 0x01	; 1
     1ea:	99 f0       	breq	.+38     	; 0x212 <listenTrigButtons+0xde>
     1ec:	30 f0       	brcs	.+12     	; 0x1fa <listenTrigButtons+0xc6>
     1ee:	82 30       	cpi	r24, 0x02	; 2
     1f0:	11 f1       	breq	.+68     	; 0x236 <listenTrigButtons+0x102>
     1f2:	83 30       	cpi	r24, 0x03	; 3
     1f4:	09 f4       	brne	.+2      	; 0x1f8 <listenTrigButtons+0xc4>
     1f6:	75 c0       	rjmp	.+234    	; 0x2e2 <listenTrigButtons+0x1ae>
     1f8:	8f c0       	rjmp	.+286    	; 0x318 <listenTrigButtons+0x1e4>
			{
				
				//for "perfrmance mode", we should just use the default case, and only have code for the cases where things are outside of that use case.
				case 0: //performance mode
				//we trigger a sound here based on the location of bc
				trackControl(currentPattern.trackSampleLSB[bc], currentPattern.trackSampleMSB[bc], currentPattern.trackOutputRoute[bc], currentPattern.trackOutputRoute[bc]);
     1fa:	f6 01       	movw	r30, r12
     1fc:	40 81       	ld	r20, Z
     1fe:	50 e0       	ldi	r21, 0x00	; 0
     200:	f7 01       	movw	r30, r14
     202:	60 89       	ldd	r22, Z+16	; 0x10
     204:	70 e0       	ldi	r23, 0x00	; 0
     206:	80 a1       	ldd	r24, Z+32	; 0x20
     208:	9a 01       	movw	r18, r20
     20a:	90 e0       	ldi	r25, 0x00	; 0
     20c:	0e 94 63 0e 	call	0x1cc6	; 0x1cc6 <trackControl>
				break;
     210:	83 c0       	rjmp	.+262    	; 0x318 <listenTrigButtons+0x1e4>
				
				case 1:
				currentPattern.trackSequence[currentStep] ^=currentTrigButtons;
     212:	e0 91 8c 06 	lds	r30, 0x068C	; 0x80068c <currentStep>
     216:	f0 e0       	ldi	r31, 0x00	; 0
     218:	ee 0f       	add	r30, r30
     21a:	ff 1f       	adc	r31, r31
     21c:	e1 5b       	subi	r30, 0xB1	; 177
     21e:	fb 4f       	sbci	r31, 0xFB	; 251
     220:	20 81       	ld	r18, Z
     222:	31 81       	ldd	r19, Z+1	; 0x01
     224:	80 91 b0 05 	lds	r24, 0x05B0	; 0x8005b0 <currentTrigButtons>
     228:	90 91 b1 05 	lds	r25, 0x05B1	; 0x8005b1 <currentTrigButtons+0x1>
     22c:	82 27       	eor	r24, r18
     22e:	93 27       	eor	r25, r19
     230:	91 83       	std	Z+1, r25	; 0x01
     232:	80 83       	st	Z, r24
				//turn on step number, or turn off step number.
				//step sequencer mode.
				break;
     234:	71 c0       	rjmp	.+226    	; 0x318 <listenTrigButtons+0x1e4>
     236:	37 01       	movw	r6, r14
				
				case 2: ;
				//select track for sample assignment
				uint16_t currentSample = (currentPattern.trackSampleMSB[bc]<<8)|(currentPattern.trackSampleLSB[bc]);
     238:	f7 01       	movw	r30, r14
     23a:	a0 88       	ldd	r10, Z+16	; 0x10
     23c:	b1 2c       	mov	r11, r1
     23e:	ba 2c       	mov	r11, r10
     240:	aa 24       	eor	r10, r10
     242:	80 a1       	ldd	r24, Z+32	; 0x20
     244:	a8 2a       	or	r10, r24
				currentTrack = bc;
     246:	c0 93 37 06 	sts	0x0637, r28	; 0x800637 <currentTrack>
				numPrinter(screen2[1], 7, 2, (bc+1));
     24a:	9e 01       	movw	r18, r28
     24c:	2f 5f       	subi	r18, 0xFF	; 255
     24e:	3f 4f       	sbci	r19, 0xFF	; 255
     250:	42 e0       	ldi	r20, 0x02	; 2
     252:	67 e0       	ldi	r22, 0x07	; 7
     254:	88 ec       	ldi	r24, 0xC8	; 200
     256:	95 e0       	ldi	r25, 0x05	; 5
     258:	0e 94 f7 0b 	call	0x17ee	; 0x17ee <numPrinter>
				numPrinter(screen2[1], 10, 4, currentSample);
     25c:	95 01       	movw	r18, r10
     25e:	44 e0       	ldi	r20, 0x04	; 4
     260:	6a e0       	ldi	r22, 0x0A	; 10
     262:	88 ec       	ldi	r24, 0xC8	; 200
     264:	95 e0       	ldi	r25, 0x05	; 5
     266:	0e 94 f7 0b 	call	0x17ee	; 0x17ee <numPrinter>
				outputS(screen2[1], 1);
     26a:	61 e0       	ldi	r22, 0x01	; 1
     26c:	70 e0       	ldi	r23, 0x00	; 0
     26e:	88 ec       	ldi	r24, 0xC8	; 200
     270:	95 e0       	ldi	r25, 0x05	; 5
     272:	0e 94 df 0b 	call	0x17be	; 0x17be <outputS>
				switch (currentPattern.trackPlayMode[bc])
     276:	f7 01       	movw	r30, r14
     278:	80 81       	ld	r24, Z
     27a:	88 23       	and	r24, r24
     27c:	19 f0       	breq	.+6      	; 0x284 <listenTrigButtons+0x150>
     27e:	81 30       	cpi	r24, 0x01	; 1
     280:	39 f0       	breq	.+14     	; 0x290 <listenTrigButtons+0x15c>
     282:	0c c0       	rjmp	.+24     	; 0x29c <listenTrigButtons+0x168>
				{
					case 0:
					screen2[2][10] = 'P';
     284:	f4 01       	movw	r30, r8
     286:	32 aa       	std	Z+50, r3	; 0x32
					screen2[2][11] = 'o';
     288:	53 aa       	std	Z+51, r5	; 0x33
					screen2[2][12] = 'l';
     28a:	44 aa       	std	Z+52, r4	; 0x34
					screen2[2][13] = 'y';
     28c:	25 aa       	std	Z+53, r2	; 0x35
					break;
     28e:	06 c0       	rjmp	.+12     	; 0x29c <listenTrigButtons+0x168>
					
					case 1:
					screen2[2][10] = 'S';
     290:	83 e5       	ldi	r24, 0x53	; 83
     292:	f4 01       	movw	r30, r8
     294:	82 ab       	std	Z+50, r24	; 0x32
					screen2[2][11] = 'o';
     296:	53 aa       	std	Z+51, r5	; 0x33
					screen2[2][12] = 'l';
     298:	44 aa       	std	Z+52, r4	; 0x34
					screen2[2][13] = 'o';
     29a:	55 aa       	std	Z+53, r5	; 0x35
					break;
					
					case 3:
					break;
				}
				outputS(screen2[2], 2);
     29c:	62 e0       	ldi	r22, 0x02	; 2
     29e:	70 e0       	ldi	r23, 0x00	; 0
     2a0:	8c ed       	ldi	r24, 0xDC	; 220
     2a2:	95 e0       	ldi	r25, 0x05	; 5
     2a4:	0e 94 df 0b 	call	0x17be	; 0x17be <outputS>
				numPrinter(screen2[3], 10, 2, (currentPattern.trackOutputRoute[bc]+1));
     2a8:	f6 01       	movw	r30, r12
     2aa:	20 81       	ld	r18, Z
     2ac:	30 e0       	ldi	r19, 0x00	; 0
     2ae:	2f 5f       	subi	r18, 0xFF	; 255
     2b0:	3f 4f       	sbci	r19, 0xFF	; 255
     2b2:	42 e0       	ldi	r20, 0x02	; 2
     2b4:	6a e0       	ldi	r22, 0x0A	; 10
     2b6:	80 ef       	ldi	r24, 0xF0	; 240
     2b8:	95 e0       	ldi	r25, 0x05	; 5
     2ba:	0e 94 f7 0b 	call	0x17ee	; 0x17ee <numPrinter>
				outputS(screen2[3], 3);
     2be:	63 e0       	ldi	r22, 0x03	; 3
     2c0:	70 e0       	ldi	r23, 0x00	; 0
     2c2:	80 ef       	ldi	r24, 0xF0	; 240
     2c4:	95 e0       	ldi	r25, 0x05	; 5
     2c6:	0e 94 df 0b 	call	0x17be	; 0x17be <outputS>
				
				
				trackControl(currentPattern.trackSampleLSB[bc], currentPattern.trackSampleMSB[bc], currentPattern.trackOutputRoute[bc], currentPattern.trackOutputRoute[bc]);
     2ca:	f6 01       	movw	r30, r12
     2cc:	40 81       	ld	r20, Z
     2ce:	50 e0       	ldi	r21, 0x00	; 0
     2d0:	f3 01       	movw	r30, r6
     2d2:	60 89       	ldd	r22, Z+16	; 0x10
     2d4:	70 e0       	ldi	r23, 0x00	; 0
     2d6:	80 a1       	ldd	r24, Z+32	; 0x20
     2d8:	9a 01       	movw	r18, r20
     2da:	90 e0       	ldi	r25, 0x00	; 0
     2dc:	0e 94 63 0e 	call	0x1cc6	; 0x1cc6 <trackControl>
				break;
     2e0:	1b c0       	rjmp	.+54     	; 0x318 <listenTrigButtons+0x1e4>
				
				case 3:; 
				//should these be assignable per pattern? maybe should take them out of global settings, or change that
				uint16_t currentMidiNote = currentPattern.midiTrackNote[bc];
     2e2:	f7 01       	movw	r30, r14
     2e4:	e0 54       	subi	r30, 0x40	; 64
     2e6:	ff 4f       	sbci	r31, 0xFF	; 255
     2e8:	a0 80       	ld	r10, Z
     2ea:	b1 2c       	mov	r11, r1
				currentTrack = bc;
     2ec:	c0 93 37 06 	sts	0x0637, r28	; 0x800637 <currentTrack>
				numPrinter(screen3[2], 11, 2, currentTrack);
     2f0:	9e 01       	movw	r18, r28
     2f2:	42 e0       	ldi	r20, 0x02	; 2
     2f4:	6b e0       	ldi	r22, 0x0B	; 11
     2f6:	80 e6       	ldi	r24, 0x60	; 96
     2f8:	96 e0       	ldi	r25, 0x06	; 6
     2fa:	0e 94 f7 0b 	call	0x17ee	; 0x17ee <numPrinter>
				numPrinter(screen3[2], 14, 2, currentMidiNote);
     2fe:	95 01       	movw	r18, r10
     300:	42 e0       	ldi	r20, 0x02	; 2
     302:	6e e0       	ldi	r22, 0x0E	; 14
     304:	80 e6       	ldi	r24, 0x60	; 96
     306:	96 e0       	ldi	r25, 0x06	; 6
     308:	0e 94 f7 0b 	call	0x17ee	; 0x17ee <numPrinter>
				outputS(screen3[2], 2);
     30c:	62 e0       	ldi	r22, 0x02	; 2
     30e:	70 e0       	ldi	r23, 0x00	; 0
     310:	80 e6       	ldi	r24, 0x60	; 96
     312:	96 e0       	ldi	r25, 0x06	; 6
     314:	0e 94 df 0b 	call	0x17be	; 0x17be <outputS>
			}
		
		
		}
		
		fullBitsParse = fullBitsParse>>1;
     318:	16 95       	lsr	r17
     31a:	07 95       	ror	r16
     31c:	21 96       	adiw	r28, 0x01	; 1
     31e:	ff ef       	ldi	r31, 0xFF	; 255
     320:	cf 1a       	sub	r12, r31
     322:	df 0a       	sbc	r13, r31
     324:	8f ef       	ldi	r24, 0xFF	; 255
     326:	e8 1a       	sub	r14, r24
     328:	f8 0a       	sbc	r15, r24
	{
		lastFullBits = currentTrigButtons;
		uint16_t fullBitsParse = currentTrigButtons;
		//play sounds, if that is the switch case on the encoder
	//updateLEDs
	for(uint8_t bc = 0; bc<16; bc++)//bc for buttonCounter
     32a:	c0 31       	cpi	r28, 0x10	; 16
     32c:	d1 05       	cpc	r29, r1
     32e:	09 f0       	breq	.+2      	; 0x332 <listenTrigButtons+0x1fe>
     330:	52 cf       	rjmp	.-348    	; 0x1d6 <listenTrigButtons+0xa2>
		fullBitsParse = fullBitsParse>>1;
	}
	}


}
     332:	df 91       	pop	r29
     334:	cf 91       	pop	r28
     336:	1f 91       	pop	r17
     338:	0f 91       	pop	r16
     33a:	ff 90       	pop	r15
     33c:	ef 90       	pop	r14
     33e:	df 90       	pop	r13
     340:	cf 90       	pop	r12
     342:	bf 90       	pop	r11
     344:	af 90       	pop	r10
     346:	9f 90       	pop	r9
     348:	8f 90       	pop	r8
     34a:	7f 90       	pop	r7
     34c:	6f 90       	pop	r6
     34e:	5f 90       	pop	r5
     350:	4f 90       	pop	r4
     352:	3f 90       	pop	r3
     354:	2f 90       	pop	r2
     356:	08 95       	ret

00000358 <listenGPButtons>:

void listenGPButtons() // are the encoder buttons here also?
{

	if(button_down(1 << PB5))
     358:	80 e2       	ldi	r24, 0x20	; 32
     35a:	11 d0       	rcall	.+34     	; 0x37e <button_down>
     35c:	88 23       	and	r24, r24
     35e:	29 f0       	breq	.+10     	; 0x36a <listenGPButtons+0x12>
	{ //top encoder button
	encoderAFlag = ~encoderAFlag;
     360:	80 91 04 06 	lds	r24, 0x0604	; 0x800604 <encoderAFlag>
     364:	80 95       	com	r24
     366:	80 93 04 06 	sts	0x0604, r24	; 0x800604 <encoderAFlag>
		
	}
	
	if(button_down(1<<PB6))
     36a:	80 e4       	ldi	r24, 0x40	; 64
     36c:	08 d0       	rcall	.+16     	; 0x37e <button_down>
     36e:	88 23       	and	r24, r24
     370:	29 f0       	breq	.+10     	; 0x37c <listenGPButtons+0x24>
	{//bottom encoder button
		encoderBFlag = ~encoderBFlag;
     372:	80 91 05 06 	lds	r24, 0x0605	; 0x800605 <encoderBFlag>
     376:	80 95       	com	r24
     378:	80 93 05 06 	sts	0x0605, r24	; 0x800605 <encoderBFlag>
     37c:	08 95       	ret

0000037e <button_down>:

volatile uint8_t buttons_down;
uint8_t button_down(uint8_t button_mask)
{
	//I should probably check out what this is.
	ATOMIC_BLOCK(ATOMIC_RESTORESTATE)
     37e:	2f b7       	in	r18, 0x3f	; 63
    return 1;
}

static __inline__ uint8_t __iCliRetVal(void)
{
    cli();
     380:	f8 94       	cli
	{
		button_mask &= buttons_down;
     382:	90 91 8d 06 	lds	r25, 0x068D	; 0x80068d <buttons_down>
     386:	89 23       	and	r24, r25
		buttons_down ^= button_mask;
     388:	90 91 8d 06 	lds	r25, 0x068D	; 0x80068d <buttons_down>
     38c:	98 27       	eor	r25, r24
     38e:	90 93 8d 06 	sts	0x068D, r25	; 0x80068d <buttons_down>
    (void)__s;
}

static __inline__ void __iRestore(const  uint8_t *__s)
{
    SREG = *__s;
     392:	2f bf       	out	0x3f, r18	; 63
	}
	
	return button_mask;
     394:	08 95       	ret

00000396 <initEncoders>:
static int8_t rotEncoderTable[] = {0,1,1,0,1,0,0,1,1,0,0,1,0,1,1,0};
	
void initEncoders()
{
	//this is where we set the encoder pins to where they need to be
PORTH = 0B01111000; // enable internal pullup resistors.
     396:	88 e7       	ldi	r24, 0x78	; 120
     398:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <__TEXT_REGION_LENGTH__+0x700102>
     39c:	08 95       	ret

0000039e <pollEncoder0>:

}

void pollEncoder0(uint8_t *encoderC0)
{
     39e:	dc 01       	movw	r26, r24
	
		prevNextCodeA <<=2;
     3a0:	90 91 77 03 	lds	r25, 0x0377	; 0x800377 <prevNextCodeA>
     3a4:	99 0f       	add	r25, r25
     3a6:	99 0f       	add	r25, r25
     3a8:	90 93 77 03 	sts	0x0377, r25	; 0x800377 <prevNextCodeA>
		if(~PINH&(1<<PH6))
     3ac:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__TEXT_REGION_LENGTH__+0x700100>
     3b0:	86 fd       	sbrc	r24, 6
     3b2:	03 c0       	rjmp	.+6      	; 0x3ba <pollEncoder0+0x1c>
		{
			prevNextCodeA |= 0x02;
     3b4:	92 60       	ori	r25, 0x02	; 2
     3b6:	90 93 77 03 	sts	0x0377, r25	; 0x800377 <prevNextCodeA>
		}
		if(~PINH&(1<<PH5))
     3ba:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__TEXT_REGION_LENGTH__+0x700100>
     3be:	85 fd       	sbrc	r24, 5
     3c0:	05 c0       	rjmp	.+10     	; 0x3cc <pollEncoder0+0x2e>
		{
			prevNextCodeA |= 0x01;
     3c2:	80 91 77 03 	lds	r24, 0x0377	; 0x800377 <prevNextCodeA>
     3c6:	81 60       	ori	r24, 0x01	; 1
     3c8:	80 93 77 03 	sts	0x0377, r24	; 0x800377 <prevNextCodeA>
		}
		prevNextCodeA &= 0x0f;
     3cc:	90 91 77 03 	lds	r25, 0x0377	; 0x800377 <prevNextCodeA>
     3d0:	9f 70       	andi	r25, 0x0F	; 15
     3d2:	90 93 77 03 	sts	0x0377, r25	; 0x800377 <prevNextCodeA>
		
		if(rotEncoderTable[prevNextCodeA])
     3d6:	e9 2f       	mov	r30, r25
     3d8:	f0 e0       	ldi	r31, 0x00	; 0
     3da:	ea 55       	subi	r30, 0x5A	; 90
     3dc:	fd 4f       	sbci	r31, 0xFD	; 253
     3de:	80 81       	ld	r24, Z
     3e0:	88 23       	and	r24, r24
     3e2:	e9 f0       	breq	.+58     	; 0x41e <__LOCK_REGION_LENGTH__+0x1e>
		{
			storeA <<=4;
			storeA |= prevNextCodeA;
     3e4:	20 91 74 03 	lds	r18, 0x0374	; 0x800374 <storeA>
     3e8:	30 91 75 03 	lds	r19, 0x0375	; 0x800375 <storeA+0x1>
     3ec:	22 95       	swap	r18
     3ee:	32 95       	swap	r19
     3f0:	30 7f       	andi	r19, 0xF0	; 240
     3f2:	32 27       	eor	r19, r18
     3f4:	20 7f       	andi	r18, 0xF0	; 240
     3f6:	32 27       	eor	r19, r18
     3f8:	29 2b       	or	r18, r25
     3fa:	30 93 75 03 	sts	0x0375, r19	; 0x800375 <storeA+0x1>
     3fe:	20 93 74 03 	sts	0x0374, r18	; 0x800374 <storeA>
			if((storeA&255)==0x2b)
     402:	33 27       	eor	r19, r19
     404:	2b 32       	cpi	r18, 0x2B	; 43
     406:	31 05       	cpc	r19, r1
     408:	21 f4       	brne	.+8      	; 0x412 <__LOCK_REGION_LENGTH__+0x12>
			{
				*encoderC0 = (*encoderC0)-1;
     40a:	8c 91       	ld	r24, X
     40c:	81 50       	subi	r24, 0x01	; 1
     40e:	8c 93       	st	X, r24
     410:	08 95       	ret
			}
			if((storeA&255)==0x17)
     412:	27 31       	cpi	r18, 0x17	; 23
     414:	31 05       	cpc	r19, r1
     416:	19 f4       	brne	.+6      	; 0x41e <__LOCK_REGION_LENGTH__+0x1e>
			{
				*encoderC0 = (*encoderC0)+1;
     418:	8c 91       	ld	r24, X
     41a:	8f 5f       	subi	r24, 0xFF	; 255
     41c:	8c 93       	st	X, r24
     41e:	08 95       	ret

00000420 <pollEncoder1>:
			}			
		}
}

void pollEncoder1(uint8_t *encoderC1)
{
     420:	dc 01       	movw	r26, r24
	
	prevNextCodeB <<=2;
     422:	90 91 76 03 	lds	r25, 0x0376	; 0x800376 <prevNextCodeB>
     426:	99 0f       	add	r25, r25
     428:	99 0f       	add	r25, r25
     42a:	90 93 76 03 	sts	0x0376, r25	; 0x800376 <prevNextCodeB>
	if(~PINH&(1<<PH4))
     42e:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__TEXT_REGION_LENGTH__+0x700100>
     432:	84 fd       	sbrc	r24, 4
     434:	03 c0       	rjmp	.+6      	; 0x43c <pollEncoder1+0x1c>
	{
		prevNextCodeB |= 0x02;
     436:	92 60       	ori	r25, 0x02	; 2
     438:	90 93 76 03 	sts	0x0376, r25	; 0x800376 <prevNextCodeB>
	}
	if(~PINH&(1<<PH3))
     43c:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__TEXT_REGION_LENGTH__+0x700100>
     440:	83 fd       	sbrc	r24, 3
     442:	05 c0       	rjmp	.+10     	; 0x44e <pollEncoder1+0x2e>
	{
		prevNextCodeB |= 0x01;
     444:	80 91 76 03 	lds	r24, 0x0376	; 0x800376 <prevNextCodeB>
     448:	81 60       	ori	r24, 0x01	; 1
     44a:	80 93 76 03 	sts	0x0376, r24	; 0x800376 <prevNextCodeB>
	}
	prevNextCodeB &= 0x0f;
     44e:	90 91 76 03 	lds	r25, 0x0376	; 0x800376 <prevNextCodeB>
     452:	9f 70       	andi	r25, 0x0F	; 15
     454:	90 93 76 03 	sts	0x0376, r25	; 0x800376 <prevNextCodeB>
	
	if(rotEncoderTable[prevNextCodeB])
     458:	e9 2f       	mov	r30, r25
     45a:	f0 e0       	ldi	r31, 0x00	; 0
     45c:	ea 55       	subi	r30, 0x5A	; 90
     45e:	fd 4f       	sbci	r31, 0xFD	; 253
     460:	80 81       	ld	r24, Z
     462:	88 23       	and	r24, r24
     464:	e9 f0       	breq	.+58     	; 0x4a0 <pollEncoder1+0x80>
	{
		storeB <<=4;
		storeB |= prevNextCodeB;
     466:	20 91 72 03 	lds	r18, 0x0372	; 0x800372 <storeB>
     46a:	30 91 73 03 	lds	r19, 0x0373	; 0x800373 <storeB+0x1>
     46e:	22 95       	swap	r18
     470:	32 95       	swap	r19
     472:	30 7f       	andi	r19, 0xF0	; 240
     474:	32 27       	eor	r19, r18
     476:	20 7f       	andi	r18, 0xF0	; 240
     478:	32 27       	eor	r19, r18
     47a:	29 2b       	or	r18, r25
     47c:	30 93 73 03 	sts	0x0373, r19	; 0x800373 <storeB+0x1>
     480:	20 93 72 03 	sts	0x0372, r18	; 0x800372 <storeB>
		if((storeB&255)==0x2b)
     484:	33 27       	eor	r19, r19
     486:	2b 32       	cpi	r18, 0x2B	; 43
     488:	31 05       	cpc	r19, r1
     48a:	21 f4       	brne	.+8      	; 0x494 <pollEncoder1+0x74>
		{
			*encoderC1 = (*encoderC1)-1;
     48c:	8c 91       	ld	r24, X
     48e:	81 50       	subi	r24, 0x01	; 1
     490:	8c 93       	st	X, r24
     492:	08 95       	ret
		}
		if((storeB&255)==0x17)
     494:	27 31       	cpi	r18, 0x17	; 23
     496:	31 05       	cpc	r19, r1
     498:	19 f4       	brne	.+6      	; 0x4a0 <pollEncoder1+0x80>
		{
			*encoderC1 = (*encoderC1)+1;
     49a:	8c 91       	ld	r24, X
     49c:	8f 5f       	subi	r24, 0xFF	; 255
     49e:	8c 93       	st	X, r24
     4a0:	08 95       	ret

000004a2 <listenEncoders>:


void listenEncoders()
{
	//this is where we update the encoder variables.
	pollEncoder0(&encoderAValue); //testing out this lookup table method
     4a2:	86 e8       	ldi	r24, 0x86	; 134
     4a4:	93 e0       	ldi	r25, 0x03	; 3
     4a6:	7b df       	rcall	.-266    	; 0x39e <pollEncoder0>
	pollEncoder1(&encoderBValue);
     4a8:	8b e8       	ldi	r24, 0x8B	; 139
     4aa:	96 e0       	ldi	r25, 0x06	; 6
     4ac:	b9 cf       	rjmp	.-142    	; 0x420 <pollEncoder1>
     4ae:	08 95       	ret

000004b0 <initArrays>:
     4b0:	ef 92       	push	r14
     4b2:	ff 92       	push	r15
     4b4:	0f 93       	push	r16
     4b6:	1f 93       	push	r17
     4b8:	cf 93       	push	r28
     4ba:	df 93       	push	r29
     4bc:	8c 01       	movw	r16, r24
     4be:	7a 01       	movw	r14, r20
     4c0:	94 e1       	ldi	r25, 0x14	; 20
     4c2:	59 2f       	mov	r21, r25
     4c4:	56 1b       	sub	r21, r22
     4c6:	66 23       	and	r22, r22
     4c8:	a1 f0       	breq	.+40     	; 0x4f2 <initArrays+0x42>
     4ca:	f9 01       	movw	r30, r18
     4cc:	84 e1       	ldi	r24, 0x14	; 20
     4ce:	8e 9d       	mul	r24, r14
     4d0:	d0 01       	movw	r26, r0
     4d2:	8f 9d       	mul	r24, r15
     4d4:	b0 0d       	add	r27, r0
     4d6:	11 24       	eor	r1, r1
     4d8:	a0 0f       	add	r26, r16
     4da:	b1 1f       	adc	r27, r17
     4dc:	cf ef       	ldi	r28, 0xFF	; 255
     4de:	c6 0f       	add	r28, r22
     4e0:	d0 e0       	ldi	r29, 0x00	; 0
     4e2:	21 96       	adiw	r28, 0x01	; 1
     4e4:	2c 0f       	add	r18, r28
     4e6:	3d 1f       	adc	r19, r29
     4e8:	91 91       	ld	r25, Z+
     4ea:	9d 93       	st	X+, r25
     4ec:	e2 17       	cp	r30, r18
     4ee:	f3 07       	cpc	r31, r19
     4f0:	d9 f7       	brne	.-10     	; 0x4e8 <initArrays+0x38>
     4f2:	55 23       	and	r21, r21
     4f4:	91 f0       	breq	.+36     	; 0x51a <initArrays+0x6a>
     4f6:	24 e1       	ldi	r18, 0x14	; 20
     4f8:	2e 9d       	mul	r18, r14
     4fa:	c0 01       	movw	r24, r0
     4fc:	2f 9d       	mul	r18, r15
     4fe:	90 0d       	add	r25, r0
     500:	11 24       	eor	r1, r1
     502:	08 0f       	add	r16, r24
     504:	19 1f       	adc	r17, r25
     506:	95 2f       	mov	r25, r21
     508:	96 0f       	add	r25, r22
     50a:	80 e2       	ldi	r24, 0x20	; 32
     50c:	f8 01       	movw	r30, r16
     50e:	e6 0f       	add	r30, r22
     510:	f1 1d       	adc	r31, r1
     512:	80 83       	st	Z, r24
     514:	6f 5f       	subi	r22, 0xFF	; 255
     516:	69 13       	cpse	r22, r25
     518:	f9 cf       	rjmp	.-14     	; 0x50c <initArrays+0x5c>
     51a:	df 91       	pop	r29
     51c:	cf 91       	pop	r28
     51e:	1f 91       	pop	r17
     520:	0f 91       	pop	r16
     522:	ff 90       	pop	r15
     524:	ef 90       	pop	r14
     526:	08 95       	ret

00000528 <initBank>:
     528:	ef e2       	ldi	r30, 0x2F	; 47
     52a:	f4 e0       	ldi	r31, 0x04	; 4
     52c:	80 e0       	ldi	r24, 0x00	; 0
     52e:	8f 5f       	subi	r24, 0xFF	; 255
     530:	81 93       	st	Z+, r24
     532:	80 31       	cpi	r24, 0x10	; 16
     534:	e1 f7       	brne	.-8      	; 0x52e <initBank+0x6>
     536:	80 e3       	ldi	r24, 0x30	; 48
     538:	80 93 cf 04 	sts	0x04CF, r24	; 0x8004cf <currentPattern+0x148>
     53c:	81 e3       	ldi	r24, 0x31	; 49
     53e:	80 93 d0 04 	sts	0x04D0, r24	; 0x8004d0 <currentPattern+0x149>
     542:	82 e3       	ldi	r24, 0x32	; 50
     544:	80 93 d1 04 	sts	0x04D1, r24	; 0x8004d1 <currentPattern+0x14a>
     548:	83 e3       	ldi	r24, 0x33	; 51
     54a:	80 93 d2 04 	sts	0x04D2, r24	; 0x8004d2 <currentPattern+0x14b>
     54e:	84 e3       	ldi	r24, 0x34	; 52
     550:	80 93 d3 04 	sts	0x04D3, r24	; 0x8004d3 <currentPattern+0x14c>
     554:	85 e3       	ldi	r24, 0x35	; 53
     556:	80 93 d4 04 	sts	0x04D4, r24	; 0x8004d4 <currentPattern+0x14d>
     55a:	86 e3       	ldi	r24, 0x36	; 54
     55c:	80 93 d5 04 	sts	0x04D5, r24	; 0x8004d5 <currentPattern+0x14e>
     560:	87 e3       	ldi	r24, 0x37	; 55
     562:	80 93 d6 04 	sts	0x04D6, r24	; 0x8004d6 <currentPattern+0x14f>
     566:	88 e3       	ldi	r24, 0x38	; 56
     568:	80 93 d7 04 	sts	0x04D7, r24	; 0x8004d7 <currentPattern+0x150>
     56c:	89 e3       	ldi	r24, 0x39	; 57
     56e:	80 93 d8 04 	sts	0x04D8, r24	; 0x8004d8 <currentPattern+0x151>
     572:	8a e3       	ldi	r24, 0x3A	; 58
     574:	80 93 d9 04 	sts	0x04D9, r24	; 0x8004d9 <currentPattern+0x152>
     578:	8b e3       	ldi	r24, 0x3B	; 59
     57a:	80 93 da 04 	sts	0x04DA, r24	; 0x8004da <currentPattern+0x153>
     57e:	8c e3       	ldi	r24, 0x3C	; 60
     580:	80 93 db 04 	sts	0x04DB, r24	; 0x8004db <currentPattern+0x154>
     584:	8d e3       	ldi	r24, 0x3D	; 61
     586:	80 93 dc 04 	sts	0x04DC, r24	; 0x8004dc <currentPattern+0x155>
     58a:	8e e3       	ldi	r24, 0x3E	; 62
     58c:	80 93 dd 04 	sts	0x04DD, r24	; 0x8004dd <currentPattern+0x156>
     590:	8f e3       	ldi	r24, 0x3F	; 63
     592:	80 93 de 04 	sts	0x04DE, r24	; 0x8004de <currentPattern+0x157>
     596:	88 e7       	ldi	r24, 0x78	; 120
     598:	90 e0       	ldi	r25, 0x00	; 0
     59a:	90 93 e0 04 	sts	0x04E0, r25	; 0x8004e0 <currentPattern+0x159>
     59e:	80 93 df 04 	sts	0x04DF, r24	; 0x8004df <currentPattern+0x158>
     5a2:	81 e0       	ldi	r24, 0x01	; 1
     5a4:	80 93 36 06 	sts	0x0636, r24	; 0x800636 <currentPatternNumber>
     5a8:	10 92 8c 06 	sts	0x068C, r1	; 0x80068c <currentStep>
     5ac:	80 e1       	ldi	r24, 0x10	; 16
     5ae:	80 93 e1 04 	sts	0x04E1, r24	; 0x8004e1 <currentPattern+0x15a>
     5b2:	26 eb       	ldi	r18, 0xB6	; 182
     5b4:	32 e0       	ldi	r19, 0x02	; 2
     5b6:	41 e0       	ldi	r20, 0x01	; 1
     5b8:	50 e0       	ldi	r21, 0x00	; 0
     5ba:	68 e0       	ldi	r22, 0x08	; 8
     5bc:	80 e6       	ldi	r24, 0x60	; 96
     5be:	95 e0       	ldi	r25, 0x05	; 5
     5c0:	77 df       	rcall	.-274    	; 0x4b0 <initArrays>
     5c2:	2f eb       	ldi	r18, 0xBF	; 191
     5c4:	32 e0       	ldi	r19, 0x02	; 2
     5c6:	42 e0       	ldi	r20, 0x02	; 2
     5c8:	50 e0       	ldi	r21, 0x00	; 0
     5ca:	64 e0       	ldi	r22, 0x04	; 4
     5cc:	80 e6       	ldi	r24, 0x60	; 96
     5ce:	95 e0       	ldi	r25, 0x05	; 5
     5d0:	6f df       	rcall	.-290    	; 0x4b0 <initArrays>
     5d2:	24 ec       	ldi	r18, 0xC4	; 196
     5d4:	32 e0       	ldi	r19, 0x02	; 2
     5d6:	43 e0       	ldi	r20, 0x03	; 3
     5d8:	50 e0       	ldi	r21, 0x00	; 0
     5da:	64 e0       	ldi	r22, 0x04	; 4
     5dc:	80 e6       	ldi	r24, 0x60	; 96
     5de:	95 e0       	ldi	r25, 0x05	; 5
     5e0:	67 df       	rcall	.-306    	; 0x4b0 <initArrays>
     5e2:	29 ec       	ldi	r18, 0xC9	; 201
     5e4:	32 e0       	ldi	r19, 0x02	; 2
     5e6:	40 e0       	ldi	r20, 0x00	; 0
     5e8:	50 e0       	ldi	r21, 0x00	; 0
     5ea:	60 e1       	ldi	r22, 0x10	; 16
     5ec:	80 e6       	ldi	r24, 0x60	; 96
     5ee:	95 e0       	ldi	r25, 0x05	; 5
     5f0:	5f df       	rcall	.-322    	; 0x4b0 <initArrays>
     5f2:	26 eb       	ldi	r18, 0xB6	; 182
     5f4:	32 e0       	ldi	r19, 0x02	; 2
     5f6:	41 e0       	ldi	r20, 0x01	; 1
     5f8:	50 e0       	ldi	r21, 0x00	; 0
     5fa:	68 e0       	ldi	r22, 0x08	; 8
     5fc:	84 ee       	ldi	r24, 0xE4	; 228
     5fe:	94 e0       	ldi	r25, 0x04	; 4
     600:	57 df       	rcall	.-338    	; 0x4b0 <initArrays>
     602:	2a ed       	ldi	r18, 0xDA	; 218
     604:	32 e0       	ldi	r19, 0x02	; 2
     606:	42 e0       	ldi	r20, 0x02	; 2
     608:	50 e0       	ldi	r21, 0x00	; 0
     60a:	66 e0       	ldi	r22, 0x06	; 6
     60c:	84 ee       	ldi	r24, 0xE4	; 228
     60e:	94 e0       	ldi	r25, 0x04	; 4
     610:	4f df       	rcall	.-354    	; 0x4b0 <initArrays>
     612:	21 ee       	ldi	r18, 0xE1	; 225
     614:	32 e0       	ldi	r19, 0x02	; 2
     616:	43 e0       	ldi	r20, 0x03	; 3
     618:	50 e0       	ldi	r21, 0x00	; 0
     61a:	6c e0       	ldi	r22, 0x0C	; 12
     61c:	84 ee       	ldi	r24, 0xE4	; 228
     61e:	94 e0       	ldi	r25, 0x04	; 4
     620:	47 df       	rcall	.-370    	; 0x4b0 <initArrays>
     622:	2e ee       	ldi	r18, 0xEE	; 238
     624:	32 e0       	ldi	r19, 0x02	; 2
     626:	40 e0       	ldi	r20, 0x00	; 0
     628:	50 e0       	ldi	r21, 0x00	; 0
     62a:	6d e0       	ldi	r22, 0x0D	; 13
     62c:	84 ee       	ldi	r24, 0xE4	; 228
     62e:	94 e0       	ldi	r25, 0x04	; 4
     630:	3f df       	rcall	.-386    	; 0x4b0 <initArrays>
     632:	2c ef       	ldi	r18, 0xFC	; 252
     634:	32 e0       	ldi	r19, 0x02	; 2
     636:	41 e0       	ldi	r20, 0x01	; 1
     638:	50 e0       	ldi	r21, 0x00	; 0
     63a:	66 e0       	ldi	r22, 0x06	; 6
     63c:	84 eb       	ldi	r24, 0xB4	; 180
     63e:	95 e0       	ldi	r25, 0x05	; 5
     640:	37 df       	rcall	.-402    	; 0x4b0 <initArrays>
     642:	23 e0       	ldi	r18, 0x03	; 3
     644:	33 e0       	ldi	r19, 0x03	; 3
     646:	42 e0       	ldi	r20, 0x02	; 2
     648:	50 e0       	ldi	r21, 0x00	; 0
     64a:	69 e0       	ldi	r22, 0x09	; 9
     64c:	84 eb       	ldi	r24, 0xB4	; 180
     64e:	95 e0       	ldi	r25, 0x05	; 5
     650:	2f df       	rcall	.-418    	; 0x4b0 <initArrays>
     652:	2d e0       	ldi	r18, 0x0D	; 13
     654:	33 e0       	ldi	r19, 0x03	; 3
     656:	43 e0       	ldi	r20, 0x03	; 3
     658:	50 e0       	ldi	r21, 0x00	; 0
     65a:	69 e0       	ldi	r22, 0x09	; 9
     65c:	84 eb       	ldi	r24, 0xB4	; 180
     65e:	95 e0       	ldi	r25, 0x05	; 5
     660:	27 df       	rcall	.-434    	; 0x4b0 <initArrays>
     662:	27 e1       	ldi	r18, 0x17	; 23
     664:	33 e0       	ldi	r19, 0x03	; 3
     666:	40 e0       	ldi	r20, 0x00	; 0
     668:	50 e0       	ldi	r21, 0x00	; 0
     66a:	6e e0       	ldi	r22, 0x0E	; 14
     66c:	84 eb       	ldi	r24, 0xB4	; 180
     66e:	95 e0       	ldi	r25, 0x05	; 5
     670:	1f df       	rcall	.-450    	; 0x4b0 <initArrays>
     672:	26 e2       	ldi	r18, 0x26	; 38
     674:	33 e0       	ldi	r19, 0x03	; 3
     676:	41 e0       	ldi	r20, 0x01	; 1
     678:	50 e0       	ldi	r21, 0x00	; 0
     67a:	6d e0       	ldi	r22, 0x0D	; 13
     67c:	88 e3       	ldi	r24, 0x38	; 56
     67e:	96 e0       	ldi	r25, 0x06	; 6
     680:	17 df       	rcall	.-466    	; 0x4b0 <initArrays>
     682:	24 e3       	ldi	r18, 0x34	; 52
     684:	33 e0       	ldi	r19, 0x03	; 3
     686:	42 e0       	ldi	r20, 0x02	; 2
     688:	50 e0       	ldi	r21, 0x00	; 0
     68a:	62 e1       	ldi	r22, 0x12	; 18
     68c:	88 e3       	ldi	r24, 0x38	; 56
     68e:	96 e0       	ldi	r25, 0x06	; 6
     690:	0f df       	rcall	.-482    	; 0x4b0 <initArrays>
     692:	2a e4       	ldi	r18, 0x4A	; 74
     694:	33 e0       	ldi	r19, 0x03	; 3
     696:	43 e0       	ldi	r20, 0x03	; 3
     698:	50 e0       	ldi	r21, 0x00	; 0
     69a:	64 e1       	ldi	r22, 0x14	; 20
     69c:	88 e3       	ldi	r24, 0x38	; 56
     69e:	96 e0       	ldi	r25, 0x06	; 6
     6a0:	07 df       	rcall	.-498    	; 0x4b0 <initArrays>
     6a2:	20 e6       	ldi	r18, 0x60	; 96
     6a4:	33 e0       	ldi	r19, 0x03	; 3
     6a6:	40 e0       	ldi	r20, 0x00	; 0
     6a8:	50 e0       	ldi	r21, 0x00	; 0
     6aa:	6f e0       	ldi	r22, 0x0F	; 15
     6ac:	88 e3       	ldi	r24, 0x38	; 56
     6ae:	96 e0       	ldi	r25, 0x06	; 6
     6b0:	ff ce       	rjmp	.-514    	; 0x4b0 <initArrays>
     6b2:	08 95       	ret

000006b4 <startADCConversion>:
     6b4:	ea e7       	ldi	r30, 0x7A	; 122
     6b6:	f0 e0       	ldi	r31, 0x00	; 0
     6b8:	80 81       	ld	r24, Z
     6ba:	80 64       	ori	r24, 0x40	; 64
     6bc:	80 83       	st	Z, r24
     6be:	80 81       	ld	r24, Z
     6c0:	86 fd       	sbrc	r24, 6
     6c2:	fd cf       	rjmp	.-6      	; 0x6be <startADCConversion+0xa>
     6c4:	80 91 79 00 	lds	r24, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x700079>
     6c8:	08 95       	ret

000006ca <initADC>:
     6ca:	88 e3       	ldi	r24, 0x38	; 56
     6cc:	8d b9       	out	0x0d, r24	; 13
     6ce:	80 e2       	ldi	r24, 0x20	; 32
     6d0:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__TEXT_REGION_LENGTH__+0x70007c>
     6d4:	87 e8       	ldi	r24, 0x87	; 135
     6d6:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x70007a>
     6da:	88 e0       	ldi	r24, 0x08	; 8
     6dc:	80 93 7b 00 	sts	0x007B, r24	; 0x80007b <__TEXT_REGION_LENGTH__+0x70007b>
     6e0:	8f ef       	ldi	r24, 0xFF	; 255
     6e2:	80 93 7e 00 	sts	0x007E, r24	; 0x80007e <__TEXT_REGION_LENGTH__+0x70007e>
     6e6:	80 93 7d 00 	sts	0x007D, r24	; 0x80007d <__TEXT_REGION_LENGTH__+0x70007d>
     6ea:	10 92 09 06 	sts	0x0609, r1	; 0x800609 <knobBufferCounter>
     6ee:	e2 cf       	rjmp	.-60     	; 0x6b4 <startADCConversion>
     6f0:	08 95       	ret

000006f2 <selectKnob>:
     6f2:	cf 93       	push	r28
     6f4:	98 2f       	mov	r25, r24
     6f6:	96 95       	lsr	r25
     6f8:	96 95       	lsr	r25
     6fa:	2f e2       	ldi	r18, 0x2F	; 47
     6fc:	92 9f       	mul	r25, r18
     6fe:	91 2d       	mov	r25, r1
     700:	11 24       	eor	r1, r1
     702:	96 95       	lsr	r25
     704:	2c e2       	ldi	r18, 0x2C	; 44
     706:	92 9f       	mul	r25, r18
     708:	80 19       	sub	r24, r0
     70a:	11 24       	eor	r1, r1
     70c:	98 2f       	mov	r25, r24
     70e:	88 32       	cpi	r24, 0x28	; 40
     710:	18 f5       	brcc	.+70     	; 0x758 <selectKnob+0x66>
     712:	88 e0       	ldi	r24, 0x08	; 8
     714:	80 93 7b 00 	sts	0x007B, r24	; 0x80007b <__TEXT_REGION_LENGTH__+0x70007b>
     718:	c9 2f       	mov	r28, r25
     71a:	c7 70       	andi	r28, 0x07	; 7
     71c:	96 95       	lsr	r25
     71e:	96 95       	lsr	r25
     720:	96 95       	lsr	r25
     722:	90 62       	ori	r25, 0x20	; 32
     724:	90 93 7c 00 	sts	0x007C, r25	; 0x80007c <__TEXT_REGION_LENGTH__+0x70007c>
     728:	c5 df       	rcall	.-118    	; 0x6b4 <startADCConversion>
     72a:	c3 30       	cpi	r28, 0x03	; 3
     72c:	59 f0       	breq	.+22     	; 0x744 <selectKnob+0x52>
     72e:	18 f4       	brcc	.+6      	; 0x736 <selectKnob+0x44>
     730:	c1 30       	cpi	r28, 0x01	; 1
     732:	31 f0       	breq	.+12     	; 0x740 <selectKnob+0x4e>
     734:	0c c0       	rjmp	.+24     	; 0x74e <selectKnob+0x5c>
     736:	c4 30       	cpi	r28, 0x04	; 4
     738:	39 f0       	breq	.+14     	; 0x748 <selectKnob+0x56>
     73a:	c6 30       	cpi	r28, 0x06	; 6
     73c:	39 f0       	breq	.+14     	; 0x74c <selectKnob+0x5a>
     73e:	07 c0       	rjmp	.+14     	; 0x74e <selectKnob+0x5c>
     740:	c4 e0       	ldi	r28, 0x04	; 4
     742:	05 c0       	rjmp	.+10     	; 0x74e <selectKnob+0x5c>
     744:	c6 e0       	ldi	r28, 0x06	; 6
     746:	03 c0       	rjmp	.+6      	; 0x74e <selectKnob+0x5c>
     748:	c1 e0       	ldi	r28, 0x01	; 1
     74a:	01 c0       	rjmp	.+2      	; 0x74e <selectKnob+0x5c>
     74c:	c3 e0       	ldi	r28, 0x03	; 3
     74e:	cc 0f       	add	r28, r28
     750:	cc 0f       	add	r28, r28
     752:	cc 0f       	add	r28, r28
     754:	ce b9       	out	0x0e, r28	; 14
     756:	20 c0       	rjmp	.+64     	; 0x798 <selectKnob+0xa6>
     758:	89 32       	cpi	r24, 0x29	; 41
     75a:	71 f0       	breq	.+28     	; 0x778 <selectKnob+0x86>
     75c:	18 f4       	brcc	.+6      	; 0x764 <selectKnob+0x72>
     75e:	88 32       	cpi	r24, 0x28	; 40
     760:	31 f0       	breq	.+12     	; 0x76e <selectKnob+0x7c>
     762:	1a c0       	rjmp	.+52     	; 0x798 <selectKnob+0xa6>
     764:	8a 32       	cpi	r24, 0x2A	; 42
     766:	69 f0       	breq	.+26     	; 0x782 <selectKnob+0x90>
     768:	8b 32       	cpi	r24, 0x2B	; 43
     76a:	81 f0       	breq	.+32     	; 0x78c <selectKnob+0x9a>
     76c:	15 c0       	rjmp	.+42     	; 0x798 <selectKnob+0xa6>
     76e:	85 e2       	ldi	r24, 0x25	; 37
     770:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__TEXT_REGION_LENGTH__+0x70007c>
     774:	9f df       	rcall	.-194    	; 0x6b4 <startADCConversion>
     776:	10 c0       	rjmp	.+32     	; 0x798 <selectKnob+0xa6>
     778:	86 e2       	ldi	r24, 0x26	; 38
     77a:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__TEXT_REGION_LENGTH__+0x70007c>
     77e:	9a df       	rcall	.-204    	; 0x6b4 <startADCConversion>
     780:	0b c0       	rjmp	.+22     	; 0x798 <selectKnob+0xa6>
     782:	87 e2       	ldi	r24, 0x27	; 39
     784:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__TEXT_REGION_LENGTH__+0x70007c>
     788:	95 df       	rcall	.-214    	; 0x6b4 <startADCConversion>
     78a:	06 c0       	rjmp	.+12     	; 0x798 <selectKnob+0xa6>
     78c:	80 e2       	ldi	r24, 0x20	; 32
     78e:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__TEXT_REGION_LENGTH__+0x70007c>
     792:	10 92 7b 00 	sts	0x007B, r1	; 0x80007b <__TEXT_REGION_LENGTH__+0x70007b>
     796:	8e df       	rcall	.-228    	; 0x6b4 <startADCConversion>
     798:	cf 91       	pop	r28
     79a:	08 95       	ret

0000079c <updateKnob>:
     79c:	cf 93       	push	r28
     79e:	c8 2f       	mov	r28, r24
     7a0:	89 df       	rcall	.-238    	; 0x6b4 <startADCConversion>
     7a2:	ec 2f       	mov	r30, r28
     7a4:	f0 e0       	ldi	r31, 0x00	; 0
     7a6:	ec 5c       	subi	r30, 0xCC	; 204
     7a8:	fa 4f       	sbci	r31, 0xFA	; 250
     7aa:	80 83       	st	Z, r24
     7ac:	cf 91       	pop	r28
     7ae:	08 95       	ret

000007b0 <interperetKnob>:
     7b0:	ef 92       	push	r14
     7b2:	ff 92       	push	r15
     7b4:	0f 93       	push	r16
     7b6:	1f 93       	push	r17
     7b8:	cf 93       	push	r28
     7ba:	98 2f       	mov	r25, r24
     7bc:	96 95       	lsr	r25
     7be:	96 95       	lsr	r25
     7c0:	2f e2       	ldi	r18, 0x2F	; 47
     7c2:	92 9f       	mul	r25, r18
     7c4:	91 2d       	mov	r25, r1
     7c6:	11 24       	eor	r1, r1
     7c8:	96 95       	lsr	r25
     7ca:	2c e2       	ldi	r18, 0x2C	; 44
     7cc:	92 9f       	mul	r25, r18
     7ce:	80 19       	sub	r24, r0
     7d0:	11 24       	eor	r1, r1
     7d2:	98 2f       	mov	r25, r24
     7d4:	a8 2f       	mov	r26, r24
     7d6:	b0 e0       	ldi	r27, 0x00	; 0
     7d8:	fd 01       	movw	r30, r26
     7da:	e6 5f       	subi	r30, 0xF6	; 246
     7dc:	f9 4f       	sbci	r31, 0xF9	; 249
     7de:	60 81       	ld	r22, Z
     7e0:	fd 01       	movw	r30, r26
     7e2:	ec 5c       	subi	r30, 0xCC	; 204
     7e4:	fa 4f       	sbci	r31, 0xFA	; 250
     7e6:	e0 81       	ld	r30, Z
     7e8:	f0 e0       	ldi	r31, 0x00	; 0
     7ea:	e6 1b       	sub	r30, r22
     7ec:	f1 09       	sbc	r31, r1
     7ee:	af 01       	movw	r20, r30
     7f0:	12 f4       	brpl	.+4      	; 0x7f6 <interperetKnob+0x46>
     7f2:	4f 5f       	subi	r20, 0xFF	; 255
     7f4:	5f 4f       	sbci	r21, 0xFF	; 255
     7f6:	55 95       	asr	r21
     7f8:	47 95       	ror	r20
     7fa:	46 0f       	add	r20, r22
     7fc:	a6 5f       	subi	r26, 0xF6	; 246
     7fe:	b9 4f       	sbci	r27, 0xF9	; 249
     800:	4c 93       	st	X, r20
     802:	98 32       	cpi	r25, 0x28	; 40
     804:	08 f0       	brcs	.+2      	; 0x808 <interperetKnob+0x58>
     806:	1a c2       	rjmp	.+1076   	; 0xc3c <interperetKnob+0x48c>
     808:	c9 2f       	mov	r28, r25
     80a:	c7 70       	andi	r28, 0x07	; 7
     80c:	96 95       	lsr	r25
     80e:	96 95       	lsr	r25
     810:	96 95       	lsr	r25
     812:	92 30       	cpi	r25, 0x02	; 2
     814:	09 f4       	brne	.+2      	; 0x818 <interperetKnob+0x68>
     816:	da c0       	rjmp	.+436    	; 0x9cc <interperetKnob+0x21c>
     818:	30 f4       	brcc	.+12     	; 0x826 <interperetKnob+0x76>
     81a:	99 23       	and	r25, r25
     81c:	59 f0       	breq	.+22     	; 0x834 <interperetKnob+0x84>
     81e:	91 30       	cpi	r25, 0x01	; 1
     820:	09 f4       	brne	.+2      	; 0x824 <interperetKnob+0x74>
     822:	96 c0       	rjmp	.+300    	; 0x950 <interperetKnob+0x1a0>
     824:	2a c2       	rjmp	.+1108   	; 0xc7a <interperetKnob+0x4ca>
     826:	93 30       	cpi	r25, 0x03	; 3
     828:	09 f4       	brne	.+2      	; 0x82c <interperetKnob+0x7c>
     82a:	55 c1       	rjmp	.+682    	; 0xad6 <interperetKnob+0x326>
     82c:	94 30       	cpi	r25, 0x04	; 4
     82e:	09 f4       	brne	.+2      	; 0x832 <interperetKnob+0x82>
     830:	6f c1       	rjmp	.+734    	; 0xb10 <interperetKnob+0x360>
     832:	23 c2       	rjmp	.+1094   	; 0xc7a <interperetKnob+0x4ca>
     834:	0c 2f       	mov	r16, r28
     836:	10 e0       	ldi	r17, 0x00	; 0
     838:	64 2f       	mov	r22, r20
     83a:	70 e0       	ldi	r23, 0x00	; 0
     83c:	80 e0       	ldi	r24, 0x00	; 0
     83e:	90 e0       	ldi	r25, 0x00	; 0
     840:	0e 94 f2 0f 	call	0x1fe4	; 0x1fe4 <__floatsisf>
     844:	20 e0       	ldi	r18, 0x00	; 0
     846:	30 e0       	ldi	r19, 0x00	; 0
     848:	4c e4       	ldi	r20, 0x4C	; 76
     84a:	50 e4       	ldi	r21, 0x40	; 64
     84c:	0e 94 57 0f 	call	0x1eae	; 0x1eae <__divsf3>
     850:	20 e0       	ldi	r18, 0x00	; 0
     852:	30 e0       	ldi	r19, 0x00	; 0
     854:	4c e8       	ldi	r20, 0x8C	; 140
     856:	52 e4       	ldi	r21, 0x42	; 66
     858:	0e 94 f2 0e 	call	0x1de4	; 0x1de4 <__subsf3>
     85c:	0e 94 bf 0f 	call	0x1f7e	; 0x1f7e <__fixsfsi>
     860:	86 2f       	mov	r24, r22
     862:	97 2f       	mov	r25, r23
     864:	9c 01       	movw	r18, r24
     866:	f8 01       	movw	r30, r16
     868:	e9 57       	subi	r30, 0x79	; 121
     86a:	fc 4f       	sbci	r31, 0xFC	; 252
     86c:	80 81       	ld	r24, Z
     86e:	90 e0       	ldi	r25, 0x00	; 0
     870:	98 2f       	mov	r25, r24
     872:	88 27       	eor	r24, r24
     874:	40 85       	ldd	r20, Z+8	; 0x08
     876:	84 2b       	or	r24, r20
     878:	82 17       	cp	r24, r18
     87a:	93 07       	cpc	r25, r19
     87c:	09 f4       	brne	.+2      	; 0x880 <interperetKnob+0xd0>
     87e:	fd c1       	rjmp	.+1018   	; 0xc7a <interperetKnob+0x4ca>
     880:	f8 01       	movw	r30, r16
     882:	e9 57       	subi	r30, 0x79	; 121
     884:	fc 4f       	sbci	r31, 0xFC	; 252
     886:	60 87       	std	Z+8, r22	; 0x08
     888:	33 23       	and	r19, r19
     88a:	64 f1       	brlt	.+88     	; 0x8e4 <interperetKnob+0x134>
     88c:	f8 01       	movw	r30, r16
     88e:	e9 57       	subi	r30, 0x79	; 121
     890:	fc 4f       	sbci	r31, 0xFC	; 252
     892:	10 82       	st	Z, r1
     894:	ec e3       	ldi	r30, 0x3C	; 60
     896:	f2 e0       	ldi	r31, 0x02	; 2
     898:	80 e3       	ldi	r24, 0x30	; 48
     89a:	86 87       	std	Z+14, r24	; 0x0e
     89c:	2d ec       	ldi	r18, 0xCD	; 205
     89e:	62 9f       	mul	r22, r18
     8a0:	81 2d       	mov	r24, r1
     8a2:	11 24       	eor	r1, r1
     8a4:	86 95       	lsr	r24
     8a6:	86 95       	lsr	r24
     8a8:	86 95       	lsr	r24
     8aa:	88 0f       	add	r24, r24
     8ac:	98 2f       	mov	r25, r24
     8ae:	99 0f       	add	r25, r25
     8b0:	99 0f       	add	r25, r25
     8b2:	89 0f       	add	r24, r25
     8b4:	96 2f       	mov	r25, r22
     8b6:	98 1b       	sub	r25, r24
     8b8:	89 2f       	mov	r24, r25
     8ba:	80 5d       	subi	r24, 0xD0	; 208
     8bc:	80 8b       	std	Z+16, r24	; 0x10
     8be:	89 e2       	ldi	r24, 0x29	; 41
     8c0:	68 9f       	mul	r22, r24
     8c2:	81 2d       	mov	r24, r1
     8c4:	11 24       	eor	r1, r1
     8c6:	82 95       	swap	r24
     8c8:	8f 70       	andi	r24, 0x0F	; 15
     8ca:	94 e6       	ldi	r25, 0x64	; 100
     8cc:	89 9f       	mul	r24, r25
     8ce:	60 19       	sub	r22, r0
     8d0:	11 24       	eor	r1, r1
     8d2:	62 9f       	mul	r22, r18
     8d4:	61 2d       	mov	r22, r1
     8d6:	11 24       	eor	r1, r1
     8d8:	66 95       	lsr	r22
     8da:	66 95       	lsr	r22
     8dc:	66 95       	lsr	r22
     8de:	60 5d       	subi	r22, 0xD0	; 208
     8e0:	67 87       	std	Z+15, r22	; 0x0f
     8e2:	23 c0       	rjmp	.+70     	; 0x92a <interperetKnob+0x17a>
     8e4:	8f ef       	ldi	r24, 0xFF	; 255
     8e6:	f8 01       	movw	r30, r16
     8e8:	e9 57       	subi	r30, 0x79	; 121
     8ea:	fc 4f       	sbci	r31, 0xFC	; 252
     8ec:	80 83       	st	Z, r24
     8ee:	ec e3       	ldi	r30, 0x3C	; 60
     8f0:	f2 e0       	ldi	r31, 0x02	; 2
     8f2:	8d e2       	ldi	r24, 0x2D	; 45
     8f4:	86 87       	std	Z+14, r24	; 0x0e
     8f6:	60 95       	com	r22
     8f8:	26 2f       	mov	r18, r22
     8fa:	30 e0       	ldi	r19, 0x00	; 0
     8fc:	2f 5f       	subi	r18, 0xFF	; 255
     8fe:	3f 4f       	sbci	r19, 0xFF	; 255
     900:	c9 01       	movw	r24, r18
     902:	64 e6       	ldi	r22, 0x64	; 100
     904:	70 e0       	ldi	r23, 0x00	; 0
     906:	0e 94 7e 10 	call	0x20fc	; 0x20fc <__divmodhi4>
     90a:	0f 2e       	mov	r0, r31
     90c:	fa e0       	ldi	r31, 0x0A	; 10
     90e:	ef 2e       	mov	r14, r31
     910:	f1 2c       	mov	r15, r1
     912:	f0 2d       	mov	r31, r0
     914:	b7 01       	movw	r22, r14
     916:	0e 94 7e 10 	call	0x20fc	; 0x20fc <__divmodhi4>
     91a:	60 5d       	subi	r22, 0xD0	; 208
     91c:	67 87       	std	Z+15, r22	; 0x0f
     91e:	c9 01       	movw	r24, r18
     920:	b7 01       	movw	r22, r14
     922:	0e 94 7e 10 	call	0x20fc	; 0x20fc <__divmodhi4>
     926:	80 5d       	subi	r24, 0xD0	; 208
     928:	80 8b       	std	Z+16, r24	; 0x10
     92a:	cf 5c       	subi	r28, 0xCF	; 207
     92c:	c0 93 46 02 	sts	0x0246, r28	; 0x800246 <outVolumePrint+0xa>
     930:	63 e0       	ldi	r22, 0x03	; 3
     932:	70 e0       	ldi	r23, 0x00	; 0
     934:	8c e3       	ldi	r24, 0x3C	; 60
     936:	92 e0       	ldi	r25, 0x02	; 2
     938:	42 d7       	rcall	.+3716   	; 0x17be <outputS>
     93a:	f8 01       	movw	r30, r16
     93c:	e9 57       	subi	r30, 0x79	; 121
     93e:	fc 4f       	sbci	r31, 0xFC	; 252
     940:	60 81       	ld	r22, Z
     942:	70 e0       	ldi	r23, 0x00	; 0
     944:	80 85       	ldd	r24, Z+8	; 0x08
     946:	a8 01       	movw	r20, r16
     948:	90 e0       	ldi	r25, 0x00	; 0
     94a:	0e 94 88 0e 	call	0x1d10	; 0x1d10 <setOutputVolume>
     94e:	95 c1       	rjmp	.+810    	; 0xc7a <interperetKnob+0x4ca>
     950:	0c 2f       	mov	r16, r28
     952:	10 e0       	ldi	r17, 0x00	; 0
     954:	60 e8       	ldi	r22, 0x80	; 128
     956:	64 0f       	add	r22, r20
     958:	f8 01       	movw	r30, r16
     95a:	e9 57       	subi	r30, 0x79	; 121
     95c:	fc 4f       	sbci	r31, 0xFC	; 252
     95e:	80 89       	ldd	r24, Z+16	; 0x10
     960:	86 17       	cp	r24, r22
     962:	09 f4       	brne	.+2      	; 0x966 <interperetKnob+0x1b6>
     964:	8a c1       	rjmp	.+788    	; 0xc7a <interperetKnob+0x4ca>
     966:	f8 01       	movw	r30, r16
     968:	e9 57       	subi	r30, 0x79	; 121
     96a:	fc 4f       	sbci	r31, 0xFC	; 252
     96c:	60 8b       	std	Z+16, r22	; 0x10
     96e:	80 91 86 03 	lds	r24, 0x0386	; 0x800386 <encoderAValue>
     972:	81 11       	cpse	r24, r1
     974:	20 c0       	rjmp	.+64     	; 0x9b6 <interperetKnob+0x206>
     976:	cf 5c       	subi	r28, 0xCF	; 207
     978:	c0 93 55 02 	sts	0x0255, r28	; 0x800255 <pitchPrint+0x5>
     97c:	66 23       	and	r22, r22
     97e:	64 f4       	brge	.+24     	; 0x998 <interperetKnob+0x1e8>
     980:	8d e2       	ldi	r24, 0x2D	; 45
     982:	80 93 57 02 	sts	0x0257, r24	; 0x800257 <pitchPrint+0x7>
     986:	26 2f       	mov	r18, r22
     988:	20 95       	com	r18
     98a:	30 e0       	ldi	r19, 0x00	; 0
     98c:	43 e0       	ldi	r20, 0x03	; 3
     98e:	68 e0       	ldi	r22, 0x08	; 8
     990:	80 e5       	ldi	r24, 0x50	; 80
     992:	92 e0       	ldi	r25, 0x02	; 2
     994:	2c d7       	rcall	.+3672   	; 0x17ee <numPrinter>
     996:	0a c0       	rjmp	.+20     	; 0x9ac <interperetKnob+0x1fc>
     998:	8b e2       	ldi	r24, 0x2B	; 43
     99a:	80 93 57 02 	sts	0x0257, r24	; 0x800257 <pitchPrint+0x7>
     99e:	26 2f       	mov	r18, r22
     9a0:	30 e0       	ldi	r19, 0x00	; 0
     9a2:	43 e0       	ldi	r20, 0x03	; 3
     9a4:	68 e0       	ldi	r22, 0x08	; 8
     9a6:	80 e5       	ldi	r24, 0x50	; 80
     9a8:	92 e0       	ldi	r25, 0x02	; 2
     9aa:	21 d7       	rcall	.+3650   	; 0x17ee <numPrinter>
     9ac:	63 e0       	ldi	r22, 0x03	; 3
     9ae:	70 e0       	ldi	r23, 0x00	; 0
     9b0:	80 e5       	ldi	r24, 0x50	; 80
     9b2:	92 e0       	ldi	r25, 0x02	; 2
     9b4:	04 d7       	rcall	.+3592   	; 0x17be <outputS>
     9b6:	f8 01       	movw	r30, r16
     9b8:	e9 57       	subi	r30, 0x79	; 121
     9ba:	fc 4f       	sbci	r31, 0xFC	; 252
     9bc:	40 89       	ldd	r20, Z+16	; 0x10
     9be:	50 e0       	ldi	r21, 0x00	; 0
     9c0:	60 e0       	ldi	r22, 0x00	; 0
     9c2:	70 e0       	ldi	r23, 0x00	; 0
     9c4:	c8 01       	movw	r24, r16
     9c6:	0e 94 cf 0e 	call	0x1d9e	; 0x1d9e <outputSampleRate>
     9ca:	57 c1       	rjmp	.+686    	; 0xc7a <interperetKnob+0x4ca>
     9cc:	0c 2f       	mov	r16, r28
     9ce:	10 e0       	ldi	r17, 0x00	; 0
     9d0:	64 2f       	mov	r22, r20
     9d2:	70 e0       	ldi	r23, 0x00	; 0
     9d4:	80 e0       	ldi	r24, 0x00	; 0
     9d6:	90 e0       	ldi	r25, 0x00	; 0
     9d8:	0e 94 f2 0f 	call	0x1fe4	; 0x1fe4 <__floatsisf>
     9dc:	20 e0       	ldi	r18, 0x00	; 0
     9de:	30 e0       	ldi	r19, 0x00	; 0
     9e0:	4c e4       	ldi	r20, 0x4C	; 76
     9e2:	50 e4       	ldi	r21, 0x40	; 64
     9e4:	0e 94 57 0f 	call	0x1eae	; 0x1eae <__divsf3>
     9e8:	20 e0       	ldi	r18, 0x00	; 0
     9ea:	30 e0       	ldi	r19, 0x00	; 0
     9ec:	4c e8       	ldi	r20, 0x8C	; 140
     9ee:	52 e4       	ldi	r21, 0x42	; 66
     9f0:	0e 94 f2 0e 	call	0x1de4	; 0x1de4 <__subsf3>
     9f4:	0e 94 bf 0f 	call	0x1f7e	; 0x1f7e <__fixsfsi>
     9f8:	86 2f       	mov	r24, r22
     9fa:	97 2f       	mov	r25, r23
     9fc:	9c 01       	movw	r18, r24
     9fe:	a8 01       	movw	r20, r16
     a00:	49 57       	subi	r20, 0x79	; 121
     a02:	5c 4f       	sbci	r21, 0xFC	; 252
     a04:	fa 01       	movw	r30, r20
     a06:	e8 5b       	subi	r30, 0xB8	; 184
     a08:	ff 4f       	sbci	r31, 0xFF	; 255
     a0a:	80 81       	ld	r24, Z
     a0c:	90 e0       	ldi	r25, 0x00	; 0
     a0e:	98 2f       	mov	r25, r24
     a10:	88 27       	eor	r24, r24
     a12:	70 96       	adiw	r30, 0x10	; 16
     a14:	40 81       	ld	r20, Z
     a16:	84 2b       	or	r24, r20
     a18:	82 17       	cp	r24, r18
     a1a:	93 07       	cpc	r25, r19
     a1c:	09 f4       	brne	.+2      	; 0xa20 <interperetKnob+0x270>
     a1e:	2d c1       	rjmp	.+602    	; 0xc7a <interperetKnob+0x4ca>
     a20:	f8 01       	movw	r30, r16
     a22:	e1 52       	subi	r30, 0x21	; 33
     a24:	fc 4f       	sbci	r31, 0xFC	; 252
     a26:	60 83       	st	Z, r22
     a28:	33 23       	and	r19, r19
     a2a:	64 f1       	brlt	.+88     	; 0xa84 <interperetKnob+0x2d4>
     a2c:	f8 01       	movw	r30, r16
     a2e:	e1 53       	subi	r30, 0x31	; 49
     a30:	fc 4f       	sbci	r31, 0xFC	; 252
     a32:	10 82       	st	Z, r1
     a34:	e4 e1       	ldi	r30, 0x14	; 20
     a36:	f2 e0       	ldi	r31, 0x02	; 2
     a38:	80 e3       	ldi	r24, 0x30	; 48
     a3a:	87 87       	std	Z+15, r24	; 0x0f
     a3c:	2d ec       	ldi	r18, 0xCD	; 205
     a3e:	62 9f       	mul	r22, r18
     a40:	81 2d       	mov	r24, r1
     a42:	11 24       	eor	r1, r1
     a44:	86 95       	lsr	r24
     a46:	86 95       	lsr	r24
     a48:	86 95       	lsr	r24
     a4a:	88 0f       	add	r24, r24
     a4c:	98 2f       	mov	r25, r24
     a4e:	99 0f       	add	r25, r25
     a50:	99 0f       	add	r25, r25
     a52:	89 0f       	add	r24, r25
     a54:	96 2f       	mov	r25, r22
     a56:	98 1b       	sub	r25, r24
     a58:	89 2f       	mov	r24, r25
     a5a:	80 5d       	subi	r24, 0xD0	; 208
     a5c:	81 8b       	std	Z+17, r24	; 0x11
     a5e:	89 e2       	ldi	r24, 0x29	; 41
     a60:	68 9f       	mul	r22, r24
     a62:	81 2d       	mov	r24, r1
     a64:	11 24       	eor	r1, r1
     a66:	82 95       	swap	r24
     a68:	8f 70       	andi	r24, 0x0F	; 15
     a6a:	94 e6       	ldi	r25, 0x64	; 100
     a6c:	89 9f       	mul	r24, r25
     a6e:	60 19       	sub	r22, r0
     a70:	11 24       	eor	r1, r1
     a72:	62 9f       	mul	r22, r18
     a74:	61 2d       	mov	r22, r1
     a76:	11 24       	eor	r1, r1
     a78:	66 95       	lsr	r22
     a7a:	66 95       	lsr	r22
     a7c:	66 95       	lsr	r22
     a7e:	60 5d       	subi	r22, 0xD0	; 208
     a80:	60 8b       	std	Z+16, r22	; 0x10
     a82:	20 c0       	rjmp	.+64     	; 0xac4 <interperetKnob+0x314>
     a84:	f8 01       	movw	r30, r16
     a86:	e1 53       	subi	r30, 0x31	; 49
     a88:	fc 4f       	sbci	r31, 0xFC	; 252
     a8a:	8f ef       	ldi	r24, 0xFF	; 255
     a8c:	80 83       	st	Z, r24
     a8e:	e4 e1       	ldi	r30, 0x14	; 20
     a90:	f2 e0       	ldi	r31, 0x02	; 2
     a92:	8d e2       	ldi	r24, 0x2D	; 45
     a94:	87 87       	std	Z+15, r24	; 0x0f
     a96:	60 95       	com	r22
     a98:	26 2f       	mov	r18, r22
     a9a:	30 e0       	ldi	r19, 0x00	; 0
     a9c:	2f 5f       	subi	r18, 0xFF	; 255
     a9e:	3f 4f       	sbci	r19, 0xFF	; 255
     aa0:	c9 01       	movw	r24, r18
     aa2:	64 e6       	ldi	r22, 0x64	; 100
     aa4:	70 e0       	ldi	r23, 0x00	; 0
     aa6:	0e 94 7e 10 	call	0x20fc	; 0x20fc <__divmodhi4>
     aaa:	0a e0       	ldi	r16, 0x0A	; 10
     aac:	10 e0       	ldi	r17, 0x00	; 0
     aae:	b8 01       	movw	r22, r16
     ab0:	0e 94 7e 10 	call	0x20fc	; 0x20fc <__divmodhi4>
     ab4:	60 5d       	subi	r22, 0xD0	; 208
     ab6:	60 8b       	std	Z+16, r22	; 0x10
     ab8:	c9 01       	movw	r24, r18
     aba:	b8 01       	movw	r22, r16
     abc:	0e 94 7e 10 	call	0x20fc	; 0x20fc <__divmodhi4>
     ac0:	80 5d       	subi	r24, 0xD0	; 208
     ac2:	81 8b       	std	Z+17, r24	; 0x11
     ac4:	cf 5c       	subi	r28, 0xCF	; 207
     ac6:	c0 93 21 02 	sts	0x0221, r28	; 0x800221 <envelopeLevelPrint+0xd>
     aca:	63 e0       	ldi	r22, 0x03	; 3
     acc:	70 e0       	ldi	r23, 0x00	; 0
     ace:	84 e1       	ldi	r24, 0x14	; 20
     ad0:	92 e0       	ldi	r25, 0x02	; 2
     ad2:	75 d6       	rcall	.+3306   	; 0x17be <outputS>
     ad4:	d2 c0       	rjmp	.+420    	; 0xc7a <interperetKnob+0x4ca>
     ad6:	8c 2f       	mov	r24, r28
     ad8:	90 e0       	ldi	r25, 0x00	; 0
     ada:	fc 01       	movw	r30, r24
     adc:	e1 51       	subi	r30, 0x11	; 17
     ade:	fc 4f       	sbci	r31, 0xFC	; 252
     ae0:	20 81       	ld	r18, Z
     ae2:	42 17       	cp	r20, r18
     ae4:	09 f4       	brne	.+2      	; 0xae8 <interperetKnob+0x338>
     ae6:	c9 c0       	rjmp	.+402    	; 0xc7a <interperetKnob+0x4ca>
     ae8:	fc 01       	movw	r30, r24
     aea:	e1 51       	subi	r30, 0x11	; 17
     aec:	fc 4f       	sbci	r31, 0xFC	; 252
     aee:	40 83       	st	Z, r20
     af0:	24 2f       	mov	r18, r20
     af2:	30 e0       	ldi	r19, 0x00	; 0
     af4:	44 e0       	ldi	r20, 0x04	; 4
     af6:	6e e0       	ldi	r22, 0x0E	; 14
     af8:	80 e0       	ldi	r24, 0x00	; 0
     afa:	92 e0       	ldi	r25, 0x02	; 2
     afc:	78 d6       	rcall	.+3312   	; 0x17ee <numPrinter>
     afe:	cf 5c       	subi	r28, 0xCF	; 207
     b00:	c0 93 0c 02 	sts	0x020C, r28	; 0x80020c <__data_start+0xc>
     b04:	63 e0       	ldi	r22, 0x03	; 3
     b06:	70 e0       	ldi	r23, 0x00	; 0
     b08:	80 e0       	ldi	r24, 0x00	; 0
     b0a:	92 e0       	ldi	r25, 0x02	; 2
     b0c:	58 d6       	rcall	.+3248   	; 0x17be <outputS>
     b0e:	b5 c0       	rjmp	.+362    	; 0xc7a <interperetKnob+0x4ca>
     b10:	0c 2f       	mov	r16, r28
     b12:	10 e0       	ldi	r17, 0x00	; 0
     b14:	64 2f       	mov	r22, r20
     b16:	70 e0       	ldi	r23, 0x00	; 0
     b18:	80 e0       	ldi	r24, 0x00	; 0
     b1a:	90 e0       	ldi	r25, 0x00	; 0
     b1c:	0e 94 f2 0f 	call	0x1fe4	; 0x1fe4 <__floatsisf>
     b20:	20 e0       	ldi	r18, 0x00	; 0
     b22:	30 e0       	ldi	r19, 0x00	; 0
     b24:	4c e4       	ldi	r20, 0x4C	; 76
     b26:	50 e4       	ldi	r21, 0x40	; 64
     b28:	0e 94 57 0f 	call	0x1eae	; 0x1eae <__divsf3>
     b2c:	20 e0       	ldi	r18, 0x00	; 0
     b2e:	30 e0       	ldi	r19, 0x00	; 0
     b30:	4c e8       	ldi	r20, 0x8C	; 140
     b32:	52 e4       	ldi	r21, 0x42	; 66
     b34:	0e 94 f2 0e 	call	0x1de4	; 0x1de4 <__subsf3>
     b38:	0e 94 bf 0f 	call	0x1f7e	; 0x1f7e <__fixsfsi>
     b3c:	86 2f       	mov	r24, r22
     b3e:	97 2f       	mov	r25, r23
     b40:	9c 01       	movw	r18, r24
     b42:	f8 01       	movw	r30, r16
     b44:	e9 57       	subi	r30, 0x79	; 121
     b46:	fc 4f       	sbci	r31, 0xFC	; 252
     b48:	80 a5       	ldd	r24, Z+40	; 0x28
     b4a:	90 e0       	ldi	r25, 0x00	; 0
     b4c:	98 2f       	mov	r25, r24
     b4e:	88 27       	eor	r24, r24
     b50:	40 ad       	ldd	r20, Z+56	; 0x38
     b52:	84 2b       	or	r24, r20
     b54:	82 17       	cp	r24, r18
     b56:	93 07       	cpc	r25, r19
     b58:	09 f4       	brne	.+2      	; 0xb5c <interperetKnob+0x3ac>
     b5a:	8f c0       	rjmp	.+286    	; 0xc7a <interperetKnob+0x4ca>
     b5c:	f8 01       	movw	r30, r16
     b5e:	e9 57       	subi	r30, 0x79	; 121
     b60:	fc 4f       	sbci	r31, 0xFC	; 252
     b62:	60 af       	std	Z+56, r22	; 0x38
     b64:	33 23       	and	r19, r19
     b66:	64 f1       	brlt	.+88     	; 0xbc0 <interperetKnob+0x410>
     b68:	f8 01       	movw	r30, r16
     b6a:	e9 57       	subi	r30, 0x79	; 121
     b6c:	fc 4f       	sbci	r31, 0xFC	; 252
     b6e:	10 a6       	std	Z+40, r1	; 0x28
     b70:	e8 e2       	ldi	r30, 0x28	; 40
     b72:	f2 e0       	ldi	r31, 0x02	; 2
     b74:	80 e3       	ldi	r24, 0x30	; 48
     b76:	87 87       	std	Z+15, r24	; 0x0f
     b78:	2d ec       	ldi	r18, 0xCD	; 205
     b7a:	62 9f       	mul	r22, r18
     b7c:	81 2d       	mov	r24, r1
     b7e:	11 24       	eor	r1, r1
     b80:	86 95       	lsr	r24
     b82:	86 95       	lsr	r24
     b84:	86 95       	lsr	r24
     b86:	88 0f       	add	r24, r24
     b88:	98 2f       	mov	r25, r24
     b8a:	99 0f       	add	r25, r25
     b8c:	99 0f       	add	r25, r25
     b8e:	89 0f       	add	r24, r25
     b90:	96 2f       	mov	r25, r22
     b92:	98 1b       	sub	r25, r24
     b94:	89 2f       	mov	r24, r25
     b96:	80 5d       	subi	r24, 0xD0	; 208
     b98:	81 8b       	std	Z+17, r24	; 0x11
     b9a:	89 e2       	ldi	r24, 0x29	; 41
     b9c:	68 9f       	mul	r22, r24
     b9e:	81 2d       	mov	r24, r1
     ba0:	11 24       	eor	r1, r1
     ba2:	82 95       	swap	r24
     ba4:	8f 70       	andi	r24, 0x0F	; 15
     ba6:	94 e6       	ldi	r25, 0x64	; 100
     ba8:	89 9f       	mul	r24, r25
     baa:	60 19       	sub	r22, r0
     bac:	11 24       	eor	r1, r1
     bae:	62 9f       	mul	r22, r18
     bb0:	61 2d       	mov	r22, r1
     bb2:	11 24       	eor	r1, r1
     bb4:	66 95       	lsr	r22
     bb6:	66 95       	lsr	r22
     bb8:	66 95       	lsr	r22
     bba:	60 5d       	subi	r22, 0xD0	; 208
     bbc:	60 8b       	std	Z+16, r22	; 0x10
     bbe:	23 c0       	rjmp	.+70     	; 0xc06 <interperetKnob+0x456>
     bc0:	8f ef       	ldi	r24, 0xFF	; 255
     bc2:	f8 01       	movw	r30, r16
     bc4:	e9 57       	subi	r30, 0x79	; 121
     bc6:	fc 4f       	sbci	r31, 0xFC	; 252
     bc8:	80 a7       	std	Z+40, r24	; 0x28
     bca:	e8 e2       	ldi	r30, 0x28	; 40
     bcc:	f2 e0       	ldi	r31, 0x02	; 2
     bce:	8d e2       	ldi	r24, 0x2D	; 45
     bd0:	87 87       	std	Z+15, r24	; 0x0f
     bd2:	60 95       	com	r22
     bd4:	26 2f       	mov	r18, r22
     bd6:	30 e0       	ldi	r19, 0x00	; 0
     bd8:	2f 5f       	subi	r18, 0xFF	; 255
     bda:	3f 4f       	sbci	r19, 0xFF	; 255
     bdc:	c9 01       	movw	r24, r18
     bde:	64 e6       	ldi	r22, 0x64	; 100
     be0:	70 e0       	ldi	r23, 0x00	; 0
     be2:	0e 94 7e 10 	call	0x20fc	; 0x20fc <__divmodhi4>
     be6:	0f 2e       	mov	r0, r31
     be8:	fa e0       	ldi	r31, 0x0A	; 10
     bea:	ef 2e       	mov	r14, r31
     bec:	f1 2c       	mov	r15, r1
     bee:	f0 2d       	mov	r31, r0
     bf0:	b7 01       	movw	r22, r14
     bf2:	0e 94 7e 10 	call	0x20fc	; 0x20fc <__divmodhi4>
     bf6:	60 5d       	subi	r22, 0xD0	; 208
     bf8:	60 8b       	std	Z+16, r22	; 0x10
     bfa:	c9 01       	movw	r24, r18
     bfc:	b7 01       	movw	r22, r14
     bfe:	0e 94 7e 10 	call	0x20fc	; 0x20fc <__divmodhi4>
     c02:	80 5d       	subi	r24, 0xD0	; 208
     c04:	81 8b       	std	Z+17, r24	; 0x11
     c06:	cf 5c       	subi	r28, 0xCF	; 207
     c08:	c0 93 33 02 	sts	0x0233, r28	; 0x800233 <trackVolumePrint+0xb>
     c0c:	63 e0       	ldi	r22, 0x03	; 3
     c0e:	70 e0       	ldi	r23, 0x00	; 0
     c10:	88 e2       	ldi	r24, 0x28	; 40
     c12:	92 e0       	ldi	r25, 0x02	; 2
     c14:	d4 d5       	rcall	.+2984   	; 0x17be <outputS>
     c16:	f8 01       	movw	r30, r16
     c18:	e9 57       	subi	r30, 0x79	; 121
     c1a:	fc 4f       	sbci	r31, 0xFC	; 252
     c1c:	20 a5       	ldd	r18, Z+40	; 0x28
     c1e:	30 e0       	ldi	r19, 0x00	; 0
     c20:	40 ad       	ldd	r20, Z+56	; 0x38
     c22:	50 e0       	ldi	r21, 0x00	; 0
     c24:	df 01       	movw	r26, r30
     c26:	a8 56       	subi	r26, 0x68	; 104
     c28:	bf 4f       	sbci	r27, 0xFF	; 255
     c2a:	6c 91       	ld	r22, X
     c2c:	70 e0       	ldi	r23, 0x00	; 0
     c2e:	e8 55       	subi	r30, 0x58	; 88
     c30:	ff 4f       	sbci	r31, 0xFF	; 255
     c32:	80 81       	ld	r24, Z
     c34:	90 e0       	ldi	r25, 0x00	; 0
     c36:	0e 94 ab 0e 	call	0x1d56	; 0x1d56 <setTrackVolume>
     c3a:	1f c0       	rjmp	.+62     	; 0xc7a <interperetKnob+0x4ca>
     c3c:	9a 32       	cpi	r25, 0x2A	; 42
     c3e:	e9 f4       	brne	.+58     	; 0xc7a <interperetKnob+0x4ca>
     c40:	24 2f       	mov	r18, r20
     c42:	30 e0       	ldi	r19, 0x00	; 0
     c44:	22 5e       	subi	r18, 0xE2	; 226
     c46:	3f 4f       	sbci	r19, 0xFF	; 255
     c48:	80 91 df 04 	lds	r24, 0x04DF	; 0x8004df <currentPattern+0x158>
     c4c:	90 91 e0 04 	lds	r25, 0x04E0	; 0x8004e0 <currentPattern+0x159>
     c50:	82 17       	cp	r24, r18
     c52:	93 07       	cpc	r25, r19
     c54:	91 f0       	breq	.+36     	; 0xc7a <interperetKnob+0x4ca>
     c56:	30 93 e0 04 	sts	0x04E0, r19	; 0x8004e0 <currentPattern+0x159>
     c5a:	20 93 df 04 	sts	0x04DF, r18	; 0x8004df <currentPattern+0x158>
     c5e:	80 91 86 03 	lds	r24, 0x0386	; 0x800386 <encoderAValue>
     c62:	81 11       	cpse	r24, r1
     c64:	0a c0       	rjmp	.+20     	; 0xc7a <interperetKnob+0x4ca>
     c66:	43 e0       	ldi	r20, 0x03	; 3
     c68:	65 e0       	ldi	r22, 0x05	; 5
     c6a:	88 e8       	ldi	r24, 0x88	; 136
     c6c:	95 e0       	ldi	r25, 0x05	; 5
     c6e:	bf d5       	rcall	.+2942   	; 0x17ee <numPrinter>
     c70:	62 e0       	ldi	r22, 0x02	; 2
     c72:	70 e0       	ldi	r23, 0x00	; 0
     c74:	88 e8       	ldi	r24, 0x88	; 136
     c76:	95 e0       	ldi	r25, 0x05	; 5
     c78:	a2 d5       	rcall	.+2884   	; 0x17be <outputS>
     c7a:	cf 91       	pop	r28
     c7c:	1f 91       	pop	r17
     c7e:	0f 91       	pop	r16
     c80:	ff 90       	pop	r15
     c82:	ef 90       	pop	r14
     c84:	08 95       	ret

00000c86 <listenKnobs>:
     c86:	cf 93       	push	r28
     c88:	c0 e0       	ldi	r28, 0x00	; 0
     c8a:	8c 2f       	mov	r24, r28
     c8c:	32 dd       	rcall	.-1436   	; 0x6f2 <selectKnob>
     c8e:	8c 2f       	mov	r24, r28
     c90:	85 dd       	rcall	.-1270   	; 0x79c <updateKnob>
     c92:	8c 2f       	mov	r24, r28
     c94:	8d dd       	rcall	.-1254   	; 0x7b0 <interperetKnob>
     c96:	cf 5f       	subi	r28, 0xFF	; 255
     c98:	cc 32       	cpi	r28, 0x2C	; 44
     c9a:	b9 f7       	brne	.-18     	; 0xc8a <listenKnobs+0x4>
     c9c:	cf 91       	pop	r28
     c9e:	08 95       	ret

00000ca0 <initLEDs>:
     ca0:	85 e2       	ldi	r24, 0x25	; 37
     ca2:	83 bb       	out	0x13, r24	; 19
     ca4:	08 95       	ret

00000ca6 <parseLEDs>:
     ca6:	9c 01       	movw	r18, r24
     ca8:	a2 98       	cbi	0x14, 2	; 20
     caa:	91 e1       	ldi	r25, 0x11	; 17
     cac:	a0 9a       	sbi	0x14, 0	; 20
     cae:	33 23       	and	r19, r19
     cb0:	14 f4       	brge	.+4      	; 0xcb6 <parseLEDs+0x10>
     cb2:	a5 9a       	sbi	0x14, 5	; 20
     cb4:	01 c0       	rjmp	.+2      	; 0xcb8 <parseLEDs+0x12>
     cb6:	a5 98       	cbi	0x14, 5	; 20
     cb8:	a0 98       	cbi	0x14, 0	; 20
     cba:	22 0f       	add	r18, r18
     cbc:	33 1f       	adc	r19, r19
     cbe:	91 50       	subi	r25, 0x01	; 1
     cc0:	a9 f7       	brne	.-22     	; 0xcac <parseLEDs+0x6>
     cc2:	a2 9a       	sbi	0x14, 2	; 20
     cc4:	08 95       	ret

00000cc6 <updateLEDs>:
     cc6:	80 91 86 03 	lds	r24, 0x0386	; 0x800386 <encoderAValue>
     cca:	81 30       	cpi	r24, 0x01	; 1
     ccc:	61 f0       	breq	.+24     	; 0xce6 <updateLEDs+0x20>
     cce:	28 f0       	brcs	.+10     	; 0xcda <updateLEDs+0x14>
     cd0:	82 30       	cpi	r24, 0x02	; 2
     cd2:	a1 f0       	breq	.+40     	; 0xcfc <updateLEDs+0x36>
     cd4:	83 30       	cpi	r24, 0x03	; 3
     cd6:	c1 f0       	breq	.+48     	; 0xd08 <updateLEDs+0x42>
     cd8:	08 95       	ret
     cda:	80 91 b0 05 	lds	r24, 0x05B0	; 0x8005b0 <currentTrigButtons>
     cde:	90 91 b1 05 	lds	r25, 0x05B1	; 0x8005b1 <currentTrigButtons+0x1>
     ce2:	e1 cf       	rjmp	.-62     	; 0xca6 <parseLEDs>
     ce4:	08 95       	ret
     ce6:	e0 91 8c 06 	lds	r30, 0x068C	; 0x80068c <currentStep>
     cea:	f0 e0       	ldi	r31, 0x00	; 0
     cec:	ee 0f       	add	r30, r30
     cee:	ff 1f       	adc	r31, r31
     cf0:	e1 5b       	subi	r30, 0xB1	; 177
     cf2:	fb 4f       	sbci	r31, 0xFB	; 251
     cf4:	80 81       	ld	r24, Z
     cf6:	91 81       	ldd	r25, Z+1	; 0x01
     cf8:	d6 cf       	rjmp	.-84     	; 0xca6 <parseLEDs>
     cfa:	08 95       	ret
     cfc:	80 91 b0 05 	lds	r24, 0x05B0	; 0x8005b0 <currentTrigButtons>
     d00:	90 91 b1 05 	lds	r25, 0x05B1	; 0x8005b1 <currentTrigButtons+0x1>
     d04:	d0 cf       	rjmp	.-96     	; 0xca6 <parseLEDs>
     d06:	08 95       	ret
     d08:	80 91 b0 05 	lds	r24, 0x05B0	; 0x8005b0 <currentTrigButtons>
     d0c:	90 91 b1 05 	lds	r25, 0x05B1	; 0x8005b1 <currentTrigButtons+0x1>
     d10:	ca cf       	rjmp	.-108    	; 0xca6 <parseLEDs>
     d12:	08 95       	ret

00000d14 <__vector_23>:
#include <util/delay.h>
#include <avr/interrupt.h>
//test, can I push from a different PC?

ISR(TIMER0_OVF_vect)
{
     d14:	1f 92       	push	r1
     d16:	0f 92       	push	r0
     d18:	0f b6       	in	r0, 0x3f	; 63
     d1a:	0f 92       	push	r0
     d1c:	11 24       	eor	r1, r1
     d1e:	2f 93       	push	r18
     d20:	3f 93       	push	r19
     d22:	8f 93       	push	r24
     d24:	9f 93       	push	r25

static inline void debounce()
{
	static uint8_t vcount_low = 0xFF, vcount_high = 0xFF;
	static uint8_t button_state = 0;
	uint8_t state_changed = ~BUTTON_PIN ^ button_state;
     d26:	83 b1       	in	r24, 0x03	; 3
     d28:	20 91 78 03 	lds	r18, 0x0378	; 0x800378 <button_state.1721>
     d2c:	80 95       	com	r24
     d2e:	38 2f       	mov	r19, r24
     d30:	32 27       	eor	r19, r18
	VC_DEC_OR_SET(vcount_high, vcount_low, state_changed);
     d32:	90 91 65 02 	lds	r25, 0x0265	; 0x800265 <vcount_low.1719>
     d36:	93 23       	and	r25, r19
     d38:	89 2f       	mov	r24, r25
     d3a:	80 95       	com	r24
     d3c:	80 93 65 02 	sts	0x0265, r24	; 0x800265 <vcount_low.1719>
     d40:	90 91 64 02 	lds	r25, 0x0264	; 0x800264 <vcount_high.1720>
     d44:	93 23       	and	r25, r19
     d46:	98 27       	eor	r25, r24
     d48:	90 93 64 02 	sts	0x0264, r25	; 0x800264 <vcount_high.1720>
     d4c:	83 23       	and	r24, r19
	state_changed &= vcount_low & vcount_high;
     d4e:	89 23       	and	r24, r25
	button_state ^= state_changed;
     d50:	92 2f       	mov	r25, r18
     d52:	98 27       	eor	r25, r24
     d54:	90 93 78 03 	sts	0x0378, r25	; 0x800378 <button_state.1721>
	buttons_down |= button_state&state_changed;
     d58:	20 91 8d 06 	lds	r18, 0x068D	; 0x80068d <buttons_down>
     d5c:	89 23       	and	r24, r25
     d5e:	82 2b       	or	r24, r18
     d60:	80 93 8d 06 	sts	0x068D, r24	; 0x80068d <buttons_down>
	debounce();
}
     d64:	9f 91       	pop	r25
     d66:	8f 91       	pop	r24
     d68:	3f 91       	pop	r19
     d6a:	2f 91       	pop	r18
     d6c:	0f 90       	pop	r0
     d6e:	0f be       	out	0x3f, r0	; 63
     d70:	0f 90       	pop	r0
     d72:	1f 90       	pop	r1
     d74:	18 95       	reti

00000d76 <main>:

int main(void)
{
	midiChannel = 0; //for now, need to change this from load memory
     d76:	10 92 b2 05 	sts	0x05B2, r1	; 0x8005b2 <midiChannel>
	initBank();
     d7a:	d6 db       	rcall	.-2132   	; 0x528 <initBank>
	initScreen();
     d7c:	c3 d4       	rcall	.+2438   	; 0x1704 <initScreen>
	initButtons();
     d7e:	d3 d9       	rcall	.-3162   	; 0x126 <initButtons>
	initLEDs();
     d80:	8f df       	rcall	.-226    	; 0xca0 <initLEDs>
	initEncoders();
     d82:	09 db       	rcall	.-2542   	; 0x396 <initEncoders>
     d84:	15 d0       	rcall	.+42     	; 0xdb0 <initMenu>
	initMenu();
     d86:	a1 dc       	rcall	.-1726   	; 0x6ca <initADC>
     d88:	73 d7       	rcall	.+3814   	; 0x1c70 <serialInit0>
	initADC();
     d8a:	84 e0       	ldi	r24, 0x04	; 4
     d8c:	85 bd       	out	0x25, r24	; 37
	serialInit0();
     d8e:	81 e0       	ldi	r24, 0x01	; 1
	TCCR0B = 1<<CS02;
     d90:	80 93 6e 00 	sts	0x006E, r24	; 0x80006e <__TEXT_REGION_LENGTH__+0x70006e>
	sei();
	 //this will be necessary on first startup, but maybe not in the actual program? maybe just something handy to have.
	//loadMemory(); //we need to load in the first struct in locarion 0 of our eeprom.
	while (1)
	{
		listenTrigButtons();
     d94:	78 94       	sei
		listenMidi();
     d96:	ce d9       	rcall	.-3172   	; 0x134 <listenTrigButtons>
		listenGPButtons();
     d98:	12 d4       	rcall	.+2084   	; 0x15be <listenMidi>
		listenMidi();
     d9a:	de da       	rcall	.-2628   	; 0x358 <listenGPButtons>
     d9c:	10 d4       	rcall	.+2080   	; 0x15be <listenMidi>
		updateLEDs();
     d9e:	93 df       	rcall	.-218    	; 0xcc6 <updateLEDs>
     da0:	0e d4       	rcall	.+2076   	; 0x15be <listenMidi>
		listenMidi();
     da2:	7f db       	rcall	.-2306   	; 0x4a2 <listenEncoders>
     da4:	0c d4       	rcall	.+2072   	; 0x15be <listenMidi>
		listenEncoders();
     da6:	6f df       	rcall	.-290    	; 0xc86 <listenKnobs>
     da8:	0a d4       	rcall	.+2068   	; 0x15be <listenMidi>
		listenMidi();
     daa:	42 d0       	rcall	.+132    	; 0xe30 <updateScreen>
     dac:	08 d4       	rcall	.+2064   	; 0x15be <listenMidi>
		listenKnobs();
     dae:	f3 cf       	rjmp	.-26     	; 0xd96 <main+0x20>

00000db0 <initMenu>:
     db0:	0f 93       	push	r16
		listenMidi();
     db2:	1f 93       	push	r17
     db4:	cf 93       	push	r28
		//updateSequence();
		updateScreen();
     db6:	df 93       	push	r29
     db8:	cf ed       	ldi	r28, 0xDF	; 223
		listenMidi();
     dba:	d4 e0       	ldi	r29, 0x04	; 4
     dbc:	28 81       	ld	r18, Y
     dbe:	39 81       	ldd	r19, Y+1	; 0x01
     dc0:	43 e0       	ldi	r20, 0x03	; 3
     dc2:	65 e0       	ldi	r22, 0x05	; 5
     dc4:	88 e8       	ldi	r24, 0x88	; 136
     dc6:	95 e0       	ldi	r25, 0x05	; 5
     dc8:	12 d5       	rcall	.+2596   	; 0x17ee <numPrinter>
     dca:	20 91 b2 05 	lds	r18, 0x05B2	; 0x8005b2 <midiChannel>
     dce:	30 e0       	ldi	r19, 0x00	; 0
     dd0:	2f 5f       	subi	r18, 0xFF	; 255
     dd2:	3f 4f       	sbci	r19, 0xFF	; 255
     dd4:	42 e0       	ldi	r20, 0x02	; 2
     dd6:	6e e0       	ldi	r22, 0x0E	; 14
     dd8:	8c e4       	ldi	r24, 0x4C	; 76
     dda:	96 e0       	ldi	r25, 0x06	; 6
     ddc:	08 d5       	rcall	.+2576   	; 0x17ee <numPrinter>
     dde:	20 91 36 06 	lds	r18, 0x0636	; 0x800636 <currentPatternNumber>
     de2:	30 e0       	ldi	r19, 0x00	; 0
     de4:	43 e0       	ldi	r20, 0x03	; 3
     de6:	69 e0       	ldi	r22, 0x09	; 9
     de8:	84 e7       	ldi	r24, 0x74	; 116
     dea:	95 e0       	ldi	r25, 0x05	; 5
     dec:	00 d5       	rcall	.+2560   	; 0x17ee <numPrinter>
     dee:	20 91 36 06 	lds	r18, 0x0636	; 0x800636 <currentPatternNumber>
     df2:	30 e0       	ldi	r19, 0x00	; 0
     df4:	43 e0       	ldi	r20, 0x03	; 3
     df6:	69 e0       	ldi	r22, 0x09	; 9
     df8:	88 ef       	ldi	r24, 0xF8	; 248
     dfa:	94 e0       	ldi	r25, 0x04	; 4
     dfc:	f8 d4       	rcall	.+2544   	; 0x17ee <numPrinter>
     dfe:	28 81       	ld	r18, Y
     e00:	39 81       	ldd	r19, Y+1	; 0x01
     e02:	43 e0       	ldi	r20, 0x03	; 3
     e04:	65 e0       	ldi	r22, 0x05	; 5
     e06:	88 e8       	ldi	r24, 0x88	; 136
     e08:	95 e0       	ldi	r25, 0x05	; 5
     e0a:	f1 d4       	rcall	.+2530   	; 0x17ee <numPrinter>
     e0c:	00 e6       	ldi	r16, 0x60	; 96
     e0e:	15 e0       	ldi	r17, 0x05	; 5
     e10:	c0 e0       	ldi	r28, 0x00	; 0
     e12:	d0 e0       	ldi	r29, 0x00	; 0
     e14:	be 01       	movw	r22, r28
     e16:	c8 01       	movw	r24, r16
     e18:	d2 d4       	rcall	.+2468   	; 0x17be <outputS>
     e1a:	21 96       	adiw	r28, 0x01	; 1
     e1c:	0c 5e       	subi	r16, 0xEC	; 236
     e1e:	1f 4f       	sbci	r17, 0xFF	; 255
     e20:	c4 30       	cpi	r28, 0x04	; 4
     e22:	d1 05       	cpc	r29, r1
     e24:	b9 f7       	brne	.-18     	; 0xe14 <initMenu+0x64>
     e26:	df 91       	pop	r29
     e28:	cf 91       	pop	r28
     e2a:	1f 91       	pop	r17
     e2c:	0f 91       	pop	r16
     e2e:	08 95       	ret

00000e30 <updateScreen>:
     e30:	0f 93       	push	r16
     e32:	1f 93       	push	r17
     e34:	cf 93       	push	r28
     e36:	df 93       	push	r29
     e38:	90 91 06 06 	lds	r25, 0x0606	; 0x800606 <prevEncoderBValue>
     e3c:	80 91 8b 06 	lds	r24, 0x068B	; 0x80068b <encoderBValue>
     e40:	98 17       	cp	r25, r24
     e42:	09 f4       	brne	.+2      	; 0xe46 <updateScreen+0x16>
     e44:	45 c3       	rjmp	.+1674   	; 0x14d0 <updateScreen+0x6a0>
     e46:	83 70       	andi	r24, 0x03	; 3
     e48:	80 93 8b 06 	sts	0x068B, r24	; 0x80068b <encoderBValue>
     e4c:	89 1b       	sub	r24, r25
     e4e:	90 91 86 03 	lds	r25, 0x0386	; 0x800386 <encoderAValue>
     e52:	92 30       	cpi	r25, 0x02	; 2
     e54:	09 f4       	brne	.+2      	; 0xe58 <updateScreen+0x28>
     e56:	15 c1       	rjmp	.+554    	; 0x1082 <updateScreen+0x252>
     e58:	93 30       	cpi	r25, 0x03	; 3
     e5a:	09 f4       	brne	.+2      	; 0xe5e <updateScreen+0x2e>
     e5c:	57 c2       	rjmp	.+1198   	; 0x130c <updateScreen+0x4dc>
     e5e:	91 30       	cpi	r25, 0x01	; 1
     e60:	09 f0       	breq	.+2      	; 0xe64 <updateScreen+0x34>
     e62:	32 c3       	rjmp	.+1636   	; 0x14c8 <updateScreen+0x698>
     e64:	90 91 05 06 	lds	r25, 0x0605	; 0x800605 <encoderBFlag>
     e68:	99 23       	and	r25, r25
     e6a:	09 f4       	brne	.+2      	; 0xe6e <updateScreen+0x3e>
     e6c:	9e c0       	rjmp	.+316    	; 0xfaa <updateScreen+0x17a>
     e6e:	90 91 b3 05 	lds	r25, 0x05B3	; 0x8005b3 <screen1Index>
     e72:	92 30       	cpi	r25, 0x02	; 2
     e74:	51 f1       	breq	.+84     	; 0xeca <updateScreen+0x9a>
     e76:	93 30       	cpi	r25, 0x03	; 3
     e78:	09 f4       	brne	.+2      	; 0xe7c <updateScreen+0x4c>
     e7a:	5a c0       	rjmp	.+180    	; 0xf30 <updateScreen+0x100>
     e7c:	91 30       	cpi	r25, 0x01	; 1
     e7e:	09 f0       	breq	.+2      	; 0xe82 <updateScreen+0x52>
     e80:	23 c3       	rjmp	.+1606   	; 0x14c8 <updateScreen+0x698>
     e82:	81 30       	cpi	r24, 0x01	; 1
     e84:	89 f4       	brne	.+34     	; 0xea8 <updateScreen+0x78>
     e86:	20 91 36 06 	lds	r18, 0x0636	; 0x800636 <currentPatternNumber>
     e8a:	2f 5f       	subi	r18, 0xFF	; 255
     e8c:	20 93 36 06 	sts	0x0636, r18	; 0x800636 <currentPatternNumber>
     e90:	30 e0       	ldi	r19, 0x00	; 0
     e92:	43 e0       	ldi	r20, 0x03	; 3
     e94:	69 e0       	ldi	r22, 0x09	; 9
     e96:	88 ef       	ldi	r24, 0xF8	; 248
     e98:	94 e0       	ldi	r25, 0x04	; 4
     e9a:	a9 d4       	rcall	.+2386   	; 0x17ee <numPrinter>
     e9c:	61 e0       	ldi	r22, 0x01	; 1
     e9e:	70 e0       	ldi	r23, 0x00	; 0
     ea0:	88 ef       	ldi	r24, 0xF8	; 248
     ea2:	94 e0       	ldi	r25, 0x04	; 4
     ea4:	8c d4       	rcall	.+2328   	; 0x17be <outputS>
     ea6:	10 c3       	rjmp	.+1568   	; 0x14c8 <updateScreen+0x698>
     ea8:	20 91 36 06 	lds	r18, 0x0636	; 0x800636 <currentPatternNumber>
     eac:	21 50       	subi	r18, 0x01	; 1
     eae:	20 93 36 06 	sts	0x0636, r18	; 0x800636 <currentPatternNumber>
     eb2:	30 e0       	ldi	r19, 0x00	; 0
     eb4:	43 e0       	ldi	r20, 0x03	; 3
     eb6:	69 e0       	ldi	r22, 0x09	; 9
     eb8:	88 ef       	ldi	r24, 0xF8	; 248
     eba:	94 e0       	ldi	r25, 0x04	; 4
     ebc:	98 d4       	rcall	.+2352   	; 0x17ee <numPrinter>
     ebe:	61 e0       	ldi	r22, 0x01	; 1
     ec0:	70 e0       	ldi	r23, 0x00	; 0
     ec2:	88 ef       	ldi	r24, 0xF8	; 248
     ec4:	94 e0       	ldi	r25, 0x04	; 4
     ec6:	7b d4       	rcall	.+2294   	; 0x17be <outputS>
     ec8:	ff c2       	rjmp	.+1534   	; 0x14c8 <updateScreen+0x698>
     eca:	81 30       	cpi	r24, 0x01	; 1
     ecc:	c9 f4       	brne	.+50     	; 0xf00 <updateScreen+0xd0>
     ece:	80 91 e1 04 	lds	r24, 0x04E1	; 0x8004e1 <currentPattern+0x15a>
     ed2:	8f 5f       	subi	r24, 0xFF	; 255
     ed4:	81 34       	cpi	r24, 0x41	; 65
     ed6:	18 f4       	brcc	.+6      	; 0xede <updateScreen+0xae>
     ed8:	80 93 e1 04 	sts	0x04E1, r24	; 0x8004e1 <currentPattern+0x15a>
     edc:	03 c0       	rjmp	.+6      	; 0xee4 <updateScreen+0xb4>
     ede:	80 e4       	ldi	r24, 0x40	; 64
     ee0:	80 93 e1 04 	sts	0x04E1, r24	; 0x8004e1 <currentPattern+0x15a>
     ee4:	20 91 e1 04 	lds	r18, 0x04E1	; 0x8004e1 <currentPattern+0x15a>
     ee8:	30 e0       	ldi	r19, 0x00	; 0
     eea:	42 e0       	ldi	r20, 0x02	; 2
     eec:	66 e0       	ldi	r22, 0x06	; 6
     eee:	8c e0       	ldi	r24, 0x0C	; 12
     ef0:	95 e0       	ldi	r25, 0x05	; 5
     ef2:	7d d4       	rcall	.+2298   	; 0x17ee <numPrinter>
     ef4:	62 e0       	ldi	r22, 0x02	; 2
     ef6:	70 e0       	ldi	r23, 0x00	; 0
     ef8:	8c e0       	ldi	r24, 0x0C	; 12
     efa:	95 e0       	ldi	r25, 0x05	; 5
     efc:	60 d4       	rcall	.+2240   	; 0x17be <outputS>
     efe:	e4 c2       	rjmp	.+1480   	; 0x14c8 <updateScreen+0x698>
     f00:	80 91 e1 04 	lds	r24, 0x04E1	; 0x8004e1 <currentPattern+0x15a>
     f04:	81 50       	subi	r24, 0x01	; 1
     f06:	19 f0       	breq	.+6      	; 0xf0e <updateScreen+0xde>
     f08:	80 93 e1 04 	sts	0x04E1, r24	; 0x8004e1 <currentPattern+0x15a>
     f0c:	03 c0       	rjmp	.+6      	; 0xf14 <updateScreen+0xe4>
     f0e:	81 e0       	ldi	r24, 0x01	; 1
     f10:	80 93 e1 04 	sts	0x04E1, r24	; 0x8004e1 <currentPattern+0x15a>
     f14:	20 91 e1 04 	lds	r18, 0x04E1	; 0x8004e1 <currentPattern+0x15a>
     f18:	30 e0       	ldi	r19, 0x00	; 0
     f1a:	42 e0       	ldi	r20, 0x02	; 2
     f1c:	66 e0       	ldi	r22, 0x06	; 6
     f1e:	8c e0       	ldi	r24, 0x0C	; 12
     f20:	95 e0       	ldi	r25, 0x05	; 5
     f22:	65 d4       	rcall	.+2250   	; 0x17ee <numPrinter>
     f24:	62 e0       	ldi	r22, 0x02	; 2
     f26:	70 e0       	ldi	r23, 0x00	; 0
     f28:	8c e0       	ldi	r24, 0x0C	; 12
     f2a:	95 e0       	ldi	r25, 0x05	; 5
     f2c:	48 d4       	rcall	.+2192   	; 0x17be <outputS>
     f2e:	cc c2       	rjmp	.+1432   	; 0x14c8 <updateScreen+0x698>
     f30:	81 30       	cpi	r24, 0x01	; 1
     f32:	11 f5       	brne	.+68     	; 0xf78 <updateScreen+0x148>
     f34:	80 91 8c 06 	lds	r24, 0x068C	; 0x80068c <currentStep>
     f38:	8f 5f       	subi	r24, 0xFF	; 255
     f3a:	80 93 8c 06 	sts	0x068C, r24	; 0x80068c <currentStep>
     f3e:	40 91 e1 04 	lds	r20, 0x04E1	; 0x8004e1 <currentPattern+0x15a>
     f42:	90 e0       	ldi	r25, 0x00	; 0
     f44:	24 2f       	mov	r18, r20
     f46:	30 e0       	ldi	r19, 0x00	; 0
     f48:	21 50       	subi	r18, 0x01	; 1
     f4a:	31 09       	sbc	r19, r1
     f4c:	28 17       	cp	r18, r24
     f4e:	39 07       	cpc	r19, r25
     f50:	1c f4       	brge	.+6      	; 0xf58 <updateScreen+0x128>
     f52:	41 50       	subi	r20, 0x01	; 1
     f54:	40 93 8c 06 	sts	0x068C, r20	; 0x80068c <currentStep>
     f58:	20 91 8c 06 	lds	r18, 0x068C	; 0x80068c <currentStep>
     f5c:	30 e0       	ldi	r19, 0x00	; 0
     f5e:	2f 5f       	subi	r18, 0xFF	; 255
     f60:	3f 4f       	sbci	r19, 0xFF	; 255
     f62:	42 e0       	ldi	r20, 0x02	; 2
     f64:	6d e0       	ldi	r22, 0x0D	; 13
     f66:	80 e2       	ldi	r24, 0x20	; 32
     f68:	95 e0       	ldi	r25, 0x05	; 5
     f6a:	41 d4       	rcall	.+2178   	; 0x17ee <numPrinter>
     f6c:	63 e0       	ldi	r22, 0x03	; 3
     f6e:	70 e0       	ldi	r23, 0x00	; 0
     f70:	80 e2       	ldi	r24, 0x20	; 32
     f72:	95 e0       	ldi	r25, 0x05	; 5
     f74:	24 d4       	rcall	.+2120   	; 0x17be <outputS>
     f76:	a8 c2       	rjmp	.+1360   	; 0x14c8 <updateScreen+0x698>
     f78:	80 91 8c 06 	lds	r24, 0x068C	; 0x80068c <currentStep>
     f7c:	81 50       	subi	r24, 0x01	; 1
     f7e:	18 f0       	brcs	.+6      	; 0xf86 <updateScreen+0x156>
     f80:	80 93 8c 06 	sts	0x068C, r24	; 0x80068c <currentStep>
     f84:	02 c0       	rjmp	.+4      	; 0xf8a <updateScreen+0x15a>
     f86:	10 92 8c 06 	sts	0x068C, r1	; 0x80068c <currentStep>
     f8a:	20 91 8c 06 	lds	r18, 0x068C	; 0x80068c <currentStep>
     f8e:	30 e0       	ldi	r19, 0x00	; 0
     f90:	2f 5f       	subi	r18, 0xFF	; 255
     f92:	3f 4f       	sbci	r19, 0xFF	; 255
     f94:	42 e0       	ldi	r20, 0x02	; 2
     f96:	6d e0       	ldi	r22, 0x0D	; 13
     f98:	80 e2       	ldi	r24, 0x20	; 32
     f9a:	95 e0       	ldi	r25, 0x05	; 5
     f9c:	28 d4       	rcall	.+2128   	; 0x17ee <numPrinter>
     f9e:	63 e0       	ldi	r22, 0x03	; 3
     fa0:	70 e0       	ldi	r23, 0x00	; 0
     fa2:	80 e2       	ldi	r24, 0x20	; 32
     fa4:	95 e0       	ldi	r25, 0x05	; 5
     fa6:	0b d4       	rcall	.+2070   	; 0x17be <outputS>
     fa8:	8f c2       	rjmp	.+1310   	; 0x14c8 <updateScreen+0x698>
     faa:	81 30       	cpi	r24, 0x01	; 1
     fac:	a1 f5       	brne	.+104    	; 0x1016 <updateScreen+0x1e6>
     fae:	80 91 b3 05 	lds	r24, 0x05B3	; 0x8005b3 <screen1Index>
     fb2:	8f 5f       	subi	r24, 0xFF	; 255
     fb4:	84 30       	cpi	r24, 0x04	; 4
     fb6:	18 f4       	brcc	.+6      	; 0xfbe <updateScreen+0x18e>
     fb8:	80 93 b3 05 	sts	0x05B3, r24	; 0x8005b3 <screen1Index>
     fbc:	03 c0       	rjmp	.+6      	; 0xfc4 <updateScreen+0x194>
     fbe:	83 e0       	ldi	r24, 0x03	; 3
     fc0:	80 93 b3 05 	sts	0x05B3, r24	; 0x8005b3 <screen1Index>
     fc4:	60 91 b3 05 	lds	r22, 0x05B3	; 0x8005b3 <screen1Index>
     fc8:	70 e0       	ldi	r23, 0x00	; 0
     fca:	c4 e1       	ldi	r28, 0x14	; 20
     fcc:	c6 9f       	mul	r28, r22
     fce:	c0 01       	movw	r24, r0
     fd0:	c7 9f       	mul	r28, r23
     fd2:	90 0d       	add	r25, r0
     fd4:	11 24       	eor	r1, r1
     fd6:	8c 51       	subi	r24, 0x1C	; 28
     fd8:	9b 4f       	sbci	r25, 0xFB	; 251
     fda:	2c e3       	ldi	r18, 0x3C	; 60
     fdc:	fc 01       	movw	r30, r24
     fde:	23 8b       	std	Z+19, r18	; 0x13
     fe0:	9b 01       	movw	r18, r22
     fe2:	21 50       	subi	r18, 0x01	; 1
     fe4:	31 09       	sbc	r19, r1
     fe6:	c2 9f       	mul	r28, r18
     fe8:	f0 01       	movw	r30, r0
     fea:	c3 9f       	mul	r28, r19
     fec:	f0 0d       	add	r31, r0
     fee:	11 24       	eor	r1, r1
     ff0:	ec 51       	subi	r30, 0x1C	; 28
     ff2:	fb 4f       	sbci	r31, 0xFB	; 251
     ff4:	20 e2       	ldi	r18, 0x20	; 32
     ff6:	23 8b       	std	Z+19, r18	; 0x13
     ff8:	e2 d3       	rcall	.+1988   	; 0x17be <outputS>
     ffa:	60 91 b3 05 	lds	r22, 0x05B3	; 0x8005b3 <screen1Index>
     ffe:	70 e0       	ldi	r23, 0x00	; 0
    1000:	61 50       	subi	r22, 0x01	; 1
    1002:	71 09       	sbc	r23, r1
    1004:	c6 9f       	mul	r28, r22
    1006:	c0 01       	movw	r24, r0
    1008:	c7 9f       	mul	r28, r23
    100a:	90 0d       	add	r25, r0
    100c:	11 24       	eor	r1, r1
    100e:	8c 51       	subi	r24, 0x1C	; 28
    1010:	9b 4f       	sbci	r25, 0xFB	; 251
    1012:	d5 d3       	rcall	.+1962   	; 0x17be <outputS>
    1014:	59 c2       	rjmp	.+1202   	; 0x14c8 <updateScreen+0x698>
    1016:	80 91 b3 05 	lds	r24, 0x05B3	; 0x8005b3 <screen1Index>
    101a:	9e ef       	ldi	r25, 0xFE	; 254
    101c:	98 0f       	add	r25, r24
    101e:	9a 3f       	cpi	r25, 0xFA	; 250
    1020:	20 f4       	brcc	.+8      	; 0x102a <updateScreen+0x1fa>
    1022:	81 50       	subi	r24, 0x01	; 1
    1024:	80 93 b3 05 	sts	0x05B3, r24	; 0x8005b3 <screen1Index>
    1028:	03 c0       	rjmp	.+6      	; 0x1030 <updateScreen+0x200>
    102a:	81 e0       	ldi	r24, 0x01	; 1
    102c:	80 93 b3 05 	sts	0x05B3, r24	; 0x8005b3 <screen1Index>
    1030:	60 91 b3 05 	lds	r22, 0x05B3	; 0x8005b3 <screen1Index>
    1034:	70 e0       	ldi	r23, 0x00	; 0
    1036:	c4 e1       	ldi	r28, 0x14	; 20
    1038:	c6 9f       	mul	r28, r22
    103a:	c0 01       	movw	r24, r0
    103c:	c7 9f       	mul	r28, r23
    103e:	90 0d       	add	r25, r0
    1040:	11 24       	eor	r1, r1
    1042:	8c 51       	subi	r24, 0x1C	; 28
    1044:	9b 4f       	sbci	r25, 0xFB	; 251
    1046:	2c e3       	ldi	r18, 0x3C	; 60
    1048:	fc 01       	movw	r30, r24
    104a:	23 8b       	std	Z+19, r18	; 0x13
    104c:	9b 01       	movw	r18, r22
    104e:	2f 5f       	subi	r18, 0xFF	; 255
    1050:	3f 4f       	sbci	r19, 0xFF	; 255
    1052:	c2 9f       	mul	r28, r18
    1054:	f0 01       	movw	r30, r0
    1056:	c3 9f       	mul	r28, r19
    1058:	f0 0d       	add	r31, r0
    105a:	11 24       	eor	r1, r1
    105c:	ec 51       	subi	r30, 0x1C	; 28
    105e:	fb 4f       	sbci	r31, 0xFB	; 251
    1060:	20 e2       	ldi	r18, 0x20	; 32
    1062:	23 8b       	std	Z+19, r18	; 0x13
    1064:	ac d3       	rcall	.+1880   	; 0x17be <outputS>
    1066:	60 91 b3 05 	lds	r22, 0x05B3	; 0x8005b3 <screen1Index>
    106a:	70 e0       	ldi	r23, 0x00	; 0
    106c:	6f 5f       	subi	r22, 0xFF	; 255
    106e:	7f 4f       	sbci	r23, 0xFF	; 255
    1070:	c6 9f       	mul	r28, r22
    1072:	c0 01       	movw	r24, r0
    1074:	c7 9f       	mul	r28, r23
    1076:	90 0d       	add	r25, r0
    1078:	11 24       	eor	r1, r1
    107a:	8c 51       	subi	r24, 0x1C	; 28
    107c:	9b 4f       	sbci	r25, 0xFB	; 251
    107e:	9f d3       	rcall	.+1854   	; 0x17be <outputS>
    1080:	23 c2       	rjmp	.+1094   	; 0x14c8 <updateScreen+0x698>
    1082:	90 91 05 06 	lds	r25, 0x0605	; 0x800605 <encoderBFlag>
    1086:	99 23       	and	r25, r25
    1088:	09 f4       	brne	.+2      	; 0x108c <updateScreen+0x25c>
    108a:	d4 c0       	rjmp	.+424    	; 0x1234 <updateScreen+0x404>
    108c:	90 91 07 06 	lds	r25, 0x0607	; 0x800607 <screen2Index>
    1090:	92 30       	cpi	r25, 0x02	; 2
    1092:	09 f4       	brne	.+2      	; 0x1096 <updateScreen+0x266>
    1094:	4e c0       	rjmp	.+156    	; 0x1132 <updateScreen+0x302>
    1096:	93 30       	cpi	r25, 0x03	; 3
    1098:	09 f4       	brne	.+2      	; 0x109c <updateScreen+0x26c>
    109a:	80 c0       	rjmp	.+256    	; 0x119c <updateScreen+0x36c>
    109c:	91 30       	cpi	r25, 0x01	; 1
    109e:	09 f0       	breq	.+2      	; 0x10a2 <updateScreen+0x272>
    10a0:	13 c2       	rjmp	.+1062   	; 0x14c8 <updateScreen+0x698>
    10a2:	81 30       	cpi	r24, 0x01	; 1
    10a4:	19 f5       	brne	.+70     	; 0x10ec <updateScreen+0x2bc>
    10a6:	20 91 37 06 	lds	r18, 0x0637	; 0x800637 <currentTrack>
    10aa:	30 e0       	ldi	r19, 0x00	; 0
    10ac:	c9 01       	movw	r24, r18
    10ae:	89 57       	subi	r24, 0x79	; 121
    10b0:	9c 4f       	sbci	r25, 0xFC	; 252
    10b2:	fc 01       	movw	r30, r24
    10b4:	e8 55       	subi	r30, 0x58	; 88
    10b6:	ff 4f       	sbci	r31, 0xFF	; 255
    10b8:	c0 81       	ld	r28, Z
    10ba:	cf 5f       	subi	r28, 0xFF	; 255
    10bc:	c0 83       	st	Z, r28
    10be:	70 97       	sbiw	r30, 0x10	; 16
    10c0:	80 81       	ld	r24, Z
    10c2:	d0 e0       	ldi	r29, 0x00	; 0
    10c4:	d8 2b       	or	r29, r24
    10c6:	2f 5f       	subi	r18, 0xFF	; 255
    10c8:	3f 4f       	sbci	r19, 0xFF	; 255
    10ca:	42 e0       	ldi	r20, 0x02	; 2
    10cc:	67 e0       	ldi	r22, 0x07	; 7
    10ce:	88 ec       	ldi	r24, 0xC8	; 200
    10d0:	95 e0       	ldi	r25, 0x05	; 5
    10d2:	8d d3       	rcall	.+1818   	; 0x17ee <numPrinter>
    10d4:	9e 01       	movw	r18, r28
    10d6:	44 e0       	ldi	r20, 0x04	; 4
    10d8:	6a e0       	ldi	r22, 0x0A	; 10
    10da:	88 ec       	ldi	r24, 0xC8	; 200
    10dc:	95 e0       	ldi	r25, 0x05	; 5
    10de:	87 d3       	rcall	.+1806   	; 0x17ee <numPrinter>
    10e0:	61 e0       	ldi	r22, 0x01	; 1
    10e2:	70 e0       	ldi	r23, 0x00	; 0
    10e4:	88 ec       	ldi	r24, 0xC8	; 200
    10e6:	95 e0       	ldi	r25, 0x05	; 5
    10e8:	6a d3       	rcall	.+1748   	; 0x17be <outputS>
    10ea:	ee c1       	rjmp	.+988    	; 0x14c8 <updateScreen+0x698>
    10ec:	20 91 37 06 	lds	r18, 0x0637	; 0x800637 <currentTrack>
    10f0:	30 e0       	ldi	r19, 0x00	; 0
    10f2:	c9 01       	movw	r24, r18
    10f4:	89 57       	subi	r24, 0x79	; 121
    10f6:	9c 4f       	sbci	r25, 0xFC	; 252
    10f8:	fc 01       	movw	r30, r24
    10fa:	e8 55       	subi	r30, 0x58	; 88
    10fc:	ff 4f       	sbci	r31, 0xFF	; 255
    10fe:	c0 81       	ld	r28, Z
    1100:	c1 50       	subi	r28, 0x01	; 1
    1102:	c0 83       	st	Z, r28
    1104:	70 97       	sbiw	r30, 0x10	; 16
    1106:	80 81       	ld	r24, Z
    1108:	d0 e0       	ldi	r29, 0x00	; 0
    110a:	d8 2b       	or	r29, r24
    110c:	2f 5f       	subi	r18, 0xFF	; 255
    110e:	3f 4f       	sbci	r19, 0xFF	; 255
    1110:	42 e0       	ldi	r20, 0x02	; 2
    1112:	67 e0       	ldi	r22, 0x07	; 7
    1114:	88 ec       	ldi	r24, 0xC8	; 200
    1116:	95 e0       	ldi	r25, 0x05	; 5
    1118:	6a d3       	rcall	.+1748   	; 0x17ee <numPrinter>
    111a:	9e 01       	movw	r18, r28
    111c:	44 e0       	ldi	r20, 0x04	; 4
    111e:	6a e0       	ldi	r22, 0x0A	; 10
    1120:	88 ec       	ldi	r24, 0xC8	; 200
    1122:	95 e0       	ldi	r25, 0x05	; 5
    1124:	64 d3       	rcall	.+1736   	; 0x17ee <numPrinter>
    1126:	61 e0       	ldi	r22, 0x01	; 1
    1128:	70 e0       	ldi	r23, 0x00	; 0
    112a:	88 ec       	ldi	r24, 0xC8	; 200
    112c:	95 e0       	ldi	r25, 0x05	; 5
    112e:	47 d3       	rcall	.+1678   	; 0x17be <outputS>
    1130:	cb c1       	rjmp	.+918    	; 0x14c8 <updateScreen+0x698>
    1132:	81 30       	cpi	r24, 0x01	; 1
    1134:	d1 f4       	brne	.+52     	; 0x116a <updateScreen+0x33a>
    1136:	80 91 37 06 	lds	r24, 0x0637	; 0x800637 <currentTrack>
    113a:	90 e0       	ldi	r25, 0x00	; 0
    113c:	fc 01       	movw	r30, r24
    113e:	e1 5f       	subi	r30, 0xF1	; 241
    1140:	fb 4f       	sbci	r31, 0xFB	; 251
    1142:	20 81       	ld	r18, Z
    1144:	2f 5f       	subi	r18, 0xFF	; 255
    1146:	27 30       	cpi	r18, 0x07	; 7
    1148:	28 f4       	brcc	.+10     	; 0x1154 <updateScreen+0x324>
    114a:	fc 01       	movw	r30, r24
    114c:	e1 5f       	subi	r30, 0xF1	; 241
    114e:	fb 4f       	sbci	r31, 0xFB	; 251
    1150:	20 83       	st	Z, r18
    1152:	05 c0       	rjmp	.+10     	; 0x115e <updateScreen+0x32e>
    1154:	fc 01       	movw	r30, r24
    1156:	e1 5f       	subi	r30, 0xF1	; 241
    1158:	fb 4f       	sbci	r31, 0xFB	; 251
    115a:	26 e0       	ldi	r18, 0x06	; 6
    115c:	20 83       	st	Z, r18
    115e:	62 e0       	ldi	r22, 0x02	; 2
    1160:	70 e0       	ldi	r23, 0x00	; 0
    1162:	8c ed       	ldi	r24, 0xDC	; 220
    1164:	95 e0       	ldi	r25, 0x05	; 5
    1166:	2b d3       	rcall	.+1622   	; 0x17be <outputS>
    1168:	af c1       	rjmp	.+862    	; 0x14c8 <updateScreen+0x698>
    116a:	80 91 37 06 	lds	r24, 0x0637	; 0x800637 <currentTrack>
    116e:	90 e0       	ldi	r25, 0x00	; 0
    1170:	fc 01       	movw	r30, r24
    1172:	e1 5f       	subi	r30, 0xF1	; 241
    1174:	fb 4f       	sbci	r31, 0xFB	; 251
    1176:	20 81       	ld	r18, Z
    1178:	2f 5f       	subi	r18, 0xFF	; 255
    117a:	2f 3f       	cpi	r18, 0xFF	; 255
    117c:	29 f0       	breq	.+10     	; 0x1188 <updateScreen+0x358>
    117e:	fc 01       	movw	r30, r24
    1180:	e1 5f       	subi	r30, 0xF1	; 241
    1182:	fb 4f       	sbci	r31, 0xFB	; 251
    1184:	20 83       	st	Z, r18
    1186:	04 c0       	rjmp	.+8      	; 0x1190 <updateScreen+0x360>
    1188:	fc 01       	movw	r30, r24
    118a:	e1 5f       	subi	r30, 0xF1	; 241
    118c:	fb 4f       	sbci	r31, 0xFB	; 251
    118e:	10 82       	st	Z, r1
    1190:	62 e0       	ldi	r22, 0x02	; 2
    1192:	70 e0       	ldi	r23, 0x00	; 0
    1194:	8c ed       	ldi	r24, 0xDC	; 220
    1196:	95 e0       	ldi	r25, 0x05	; 5
    1198:	12 d3       	rcall	.+1572   	; 0x17be <outputS>
    119a:	96 c1       	rjmp	.+812    	; 0x14c8 <updateScreen+0x698>
    119c:	81 30       	cpi	r24, 0x01	; 1
    119e:	31 f5       	brne	.+76     	; 0x11ec <updateScreen+0x3bc>
    11a0:	80 91 37 06 	lds	r24, 0x0637	; 0x800637 <currentTrack>
    11a4:	90 e0       	ldi	r25, 0x00	; 0
    11a6:	fc 01       	movw	r30, r24
    11a8:	e9 57       	subi	r30, 0x79	; 121
    11aa:	fc 4f       	sbci	r31, 0xFC	; 252
    11ac:	20 8d       	ldd	r18, Z+24	; 0x18
    11ae:	2f 5f       	subi	r18, 0xFF	; 255
    11b0:	28 30       	cpi	r18, 0x08	; 8
    11b2:	28 f4       	brcc	.+10     	; 0x11be <updateScreen+0x38e>
    11b4:	fc 01       	movw	r30, r24
    11b6:	e9 57       	subi	r30, 0x79	; 121
    11b8:	fc 4f       	sbci	r31, 0xFC	; 252
    11ba:	20 8f       	std	Z+24, r18	; 0x18
    11bc:	05 c0       	rjmp	.+10     	; 0x11c8 <updateScreen+0x398>
    11be:	27 e0       	ldi	r18, 0x07	; 7
    11c0:	fc 01       	movw	r30, r24
    11c2:	e9 57       	subi	r30, 0x79	; 121
    11c4:	fc 4f       	sbci	r31, 0xFC	; 252
    11c6:	20 8f       	std	Z+24, r18	; 0x18
    11c8:	fc 01       	movw	r30, r24
    11ca:	e9 57       	subi	r30, 0x79	; 121
    11cc:	fc 4f       	sbci	r31, 0xFC	; 252
    11ce:	20 8d       	ldd	r18, Z+24	; 0x18
    11d0:	30 e0       	ldi	r19, 0x00	; 0
    11d2:	2f 5f       	subi	r18, 0xFF	; 255
    11d4:	3f 4f       	sbci	r19, 0xFF	; 255
    11d6:	42 e0       	ldi	r20, 0x02	; 2
    11d8:	6a e0       	ldi	r22, 0x0A	; 10
    11da:	80 ef       	ldi	r24, 0xF0	; 240
    11dc:	95 e0       	ldi	r25, 0x05	; 5
    11de:	07 d3       	rcall	.+1550   	; 0x17ee <numPrinter>
    11e0:	63 e0       	ldi	r22, 0x03	; 3
    11e2:	70 e0       	ldi	r23, 0x00	; 0
    11e4:	80 ef       	ldi	r24, 0xF0	; 240
    11e6:	95 e0       	ldi	r25, 0x05	; 5
    11e8:	ea d2       	rcall	.+1492   	; 0x17be <outputS>
    11ea:	6e c1       	rjmp	.+732    	; 0x14c8 <updateScreen+0x698>
    11ec:	80 91 37 06 	lds	r24, 0x0637	; 0x800637 <currentTrack>
    11f0:	90 e0       	ldi	r25, 0x00	; 0
    11f2:	fc 01       	movw	r30, r24
    11f4:	e9 57       	subi	r30, 0x79	; 121
    11f6:	fc 4f       	sbci	r31, 0xFC	; 252
    11f8:	20 8d       	ldd	r18, Z+24	; 0x18
    11fa:	21 50       	subi	r18, 0x01	; 1
    11fc:	28 f0       	brcs	.+10     	; 0x1208 <updateScreen+0x3d8>
    11fe:	fc 01       	movw	r30, r24
    1200:	e9 57       	subi	r30, 0x79	; 121
    1202:	fc 4f       	sbci	r31, 0xFC	; 252
    1204:	20 8f       	std	Z+24, r18	; 0x18
    1206:	04 c0       	rjmp	.+8      	; 0x1210 <updateScreen+0x3e0>
    1208:	fc 01       	movw	r30, r24
    120a:	e9 57       	subi	r30, 0x79	; 121
    120c:	fc 4f       	sbci	r31, 0xFC	; 252
    120e:	10 8e       	std	Z+24, r1	; 0x18
    1210:	fc 01       	movw	r30, r24
    1212:	e9 57       	subi	r30, 0x79	; 121
    1214:	fc 4f       	sbci	r31, 0xFC	; 252
    1216:	20 8d       	ldd	r18, Z+24	; 0x18
    1218:	30 e0       	ldi	r19, 0x00	; 0
    121a:	2f 5f       	subi	r18, 0xFF	; 255
    121c:	3f 4f       	sbci	r19, 0xFF	; 255
    121e:	42 e0       	ldi	r20, 0x02	; 2
    1220:	6a e0       	ldi	r22, 0x0A	; 10
    1222:	80 ef       	ldi	r24, 0xF0	; 240
    1224:	95 e0       	ldi	r25, 0x05	; 5
    1226:	e3 d2       	rcall	.+1478   	; 0x17ee <numPrinter>
    1228:	63 e0       	ldi	r22, 0x03	; 3
    122a:	70 e0       	ldi	r23, 0x00	; 0
    122c:	80 ef       	ldi	r24, 0xF0	; 240
    122e:	95 e0       	ldi	r25, 0x05	; 5
    1230:	c6 d2       	rcall	.+1420   	; 0x17be <outputS>
    1232:	4a c1       	rjmp	.+660    	; 0x14c8 <updateScreen+0x698>
    1234:	81 30       	cpi	r24, 0x01	; 1
    1236:	a1 f5       	brne	.+104    	; 0x12a0 <updateScreen+0x470>
    1238:	80 91 07 06 	lds	r24, 0x0607	; 0x800607 <screen2Index>
    123c:	8f 5f       	subi	r24, 0xFF	; 255
    123e:	84 30       	cpi	r24, 0x04	; 4
    1240:	18 f4       	brcc	.+6      	; 0x1248 <updateScreen+0x418>
    1242:	80 93 07 06 	sts	0x0607, r24	; 0x800607 <screen2Index>
    1246:	03 c0       	rjmp	.+6      	; 0x124e <updateScreen+0x41e>
    1248:	83 e0       	ldi	r24, 0x03	; 3
    124a:	80 93 07 06 	sts	0x0607, r24	; 0x800607 <screen2Index>
    124e:	60 91 07 06 	lds	r22, 0x0607	; 0x800607 <screen2Index>
    1252:	70 e0       	ldi	r23, 0x00	; 0
    1254:	c4 e1       	ldi	r28, 0x14	; 20
    1256:	c6 9f       	mul	r28, r22
    1258:	c0 01       	movw	r24, r0
    125a:	c7 9f       	mul	r28, r23
    125c:	90 0d       	add	r25, r0
    125e:	11 24       	eor	r1, r1
    1260:	8c 54       	subi	r24, 0x4C	; 76
    1262:	9a 4f       	sbci	r25, 0xFA	; 250
    1264:	2c e3       	ldi	r18, 0x3C	; 60
    1266:	fc 01       	movw	r30, r24
    1268:	23 8b       	std	Z+19, r18	; 0x13
    126a:	9b 01       	movw	r18, r22
    126c:	21 50       	subi	r18, 0x01	; 1
    126e:	31 09       	sbc	r19, r1
    1270:	c2 9f       	mul	r28, r18
    1272:	f0 01       	movw	r30, r0
    1274:	c3 9f       	mul	r28, r19
    1276:	f0 0d       	add	r31, r0
    1278:	11 24       	eor	r1, r1
    127a:	ec 54       	subi	r30, 0x4C	; 76
    127c:	fa 4f       	sbci	r31, 0xFA	; 250
    127e:	20 e2       	ldi	r18, 0x20	; 32
    1280:	23 8b       	std	Z+19, r18	; 0x13
    1282:	9d d2       	rcall	.+1338   	; 0x17be <outputS>
    1284:	60 91 07 06 	lds	r22, 0x0607	; 0x800607 <screen2Index>
    1288:	70 e0       	ldi	r23, 0x00	; 0
    128a:	61 50       	subi	r22, 0x01	; 1
    128c:	71 09       	sbc	r23, r1
    128e:	c6 9f       	mul	r28, r22
    1290:	c0 01       	movw	r24, r0
    1292:	c7 9f       	mul	r28, r23
    1294:	90 0d       	add	r25, r0
    1296:	11 24       	eor	r1, r1
    1298:	8c 54       	subi	r24, 0x4C	; 76
    129a:	9a 4f       	sbci	r25, 0xFA	; 250
    129c:	90 d2       	rcall	.+1312   	; 0x17be <outputS>
    129e:	14 c1       	rjmp	.+552    	; 0x14c8 <updateScreen+0x698>
    12a0:	80 91 07 06 	lds	r24, 0x0607	; 0x800607 <screen2Index>
    12a4:	9e ef       	ldi	r25, 0xFE	; 254
    12a6:	98 0f       	add	r25, r24
    12a8:	9a 3f       	cpi	r25, 0xFA	; 250
    12aa:	20 f4       	brcc	.+8      	; 0x12b4 <updateScreen+0x484>
    12ac:	81 50       	subi	r24, 0x01	; 1
    12ae:	80 93 07 06 	sts	0x0607, r24	; 0x800607 <screen2Index>
    12b2:	03 c0       	rjmp	.+6      	; 0x12ba <updateScreen+0x48a>
    12b4:	81 e0       	ldi	r24, 0x01	; 1
    12b6:	80 93 07 06 	sts	0x0607, r24	; 0x800607 <screen2Index>
    12ba:	60 91 07 06 	lds	r22, 0x0607	; 0x800607 <screen2Index>
    12be:	70 e0       	ldi	r23, 0x00	; 0
    12c0:	c4 e1       	ldi	r28, 0x14	; 20
    12c2:	c6 9f       	mul	r28, r22
    12c4:	c0 01       	movw	r24, r0
    12c6:	c7 9f       	mul	r28, r23
    12c8:	90 0d       	add	r25, r0
    12ca:	11 24       	eor	r1, r1
    12cc:	8c 54       	subi	r24, 0x4C	; 76
    12ce:	9a 4f       	sbci	r25, 0xFA	; 250
    12d0:	2c e3       	ldi	r18, 0x3C	; 60
    12d2:	fc 01       	movw	r30, r24
    12d4:	23 8b       	std	Z+19, r18	; 0x13
    12d6:	9b 01       	movw	r18, r22
    12d8:	2f 5f       	subi	r18, 0xFF	; 255
    12da:	3f 4f       	sbci	r19, 0xFF	; 255
    12dc:	c2 9f       	mul	r28, r18
    12de:	f0 01       	movw	r30, r0
    12e0:	c3 9f       	mul	r28, r19
    12e2:	f0 0d       	add	r31, r0
    12e4:	11 24       	eor	r1, r1
    12e6:	ec 54       	subi	r30, 0x4C	; 76
    12e8:	fa 4f       	sbci	r31, 0xFA	; 250
    12ea:	20 e2       	ldi	r18, 0x20	; 32
    12ec:	23 8b       	std	Z+19, r18	; 0x13
    12ee:	67 d2       	rcall	.+1230   	; 0x17be <outputS>
    12f0:	60 91 07 06 	lds	r22, 0x0607	; 0x800607 <screen2Index>
    12f4:	70 e0       	ldi	r23, 0x00	; 0
    12f6:	6f 5f       	subi	r22, 0xFF	; 255
    12f8:	7f 4f       	sbci	r23, 0xFF	; 255
    12fa:	c6 9f       	mul	r28, r22
    12fc:	c0 01       	movw	r24, r0
    12fe:	c7 9f       	mul	r28, r23
    1300:	90 0d       	add	r25, r0
    1302:	11 24       	eor	r1, r1
    1304:	8c 54       	subi	r24, 0x4C	; 76
    1306:	9a 4f       	sbci	r25, 0xFA	; 250
    1308:	5a d2       	rcall	.+1204   	; 0x17be <outputS>
    130a:	de c0       	rjmp	.+444    	; 0x14c8 <updateScreen+0x698>
    130c:	81 30       	cpi	r24, 0x01	; 1
    130e:	09 f0       	breq	.+2      	; 0x1312 <updateScreen+0x4e2>
    1310:	6e c0       	rjmp	.+220    	; 0x13ee <updateScreen+0x5be>
    1312:	80 91 05 06 	lds	r24, 0x0605	; 0x800605 <encoderBFlag>
    1316:	88 23       	and	r24, r24
    1318:	b1 f1       	breq	.+108    	; 0x1386 <updateScreen+0x556>
    131a:	80 91 88 06 	lds	r24, 0x0688	; 0x800688 <screen3Index>
    131e:	81 30       	cpi	r24, 0x01	; 1
    1320:	19 f0       	breq	.+6      	; 0x1328 <updateScreen+0x4f8>
    1322:	82 30       	cpi	r24, 0x02	; 2
    1324:	e1 f0       	breq	.+56     	; 0x135e <updateScreen+0x52e>
    1326:	d0 c0       	rjmp	.+416    	; 0x14c8 <updateScreen+0x698>
    1328:	80 91 b2 05 	lds	r24, 0x05B2	; 0x8005b2 <midiChannel>
    132c:	8f 5f       	subi	r24, 0xFF	; 255
    132e:	80 31       	cpi	r24, 0x10	; 16
    1330:	18 f4       	brcc	.+6      	; 0x1338 <updateScreen+0x508>
    1332:	80 93 b2 05 	sts	0x05B2, r24	; 0x8005b2 <midiChannel>
    1336:	03 c0       	rjmp	.+6      	; 0x133e <updateScreen+0x50e>
    1338:	8f e0       	ldi	r24, 0x0F	; 15
    133a:	80 93 b2 05 	sts	0x05B2, r24	; 0x8005b2 <midiChannel>
    133e:	20 91 b2 05 	lds	r18, 0x05B2	; 0x8005b2 <midiChannel>
    1342:	30 e0       	ldi	r19, 0x00	; 0
    1344:	2f 5f       	subi	r18, 0xFF	; 255
    1346:	3f 4f       	sbci	r19, 0xFF	; 255
    1348:	42 e0       	ldi	r20, 0x02	; 2
    134a:	6e e0       	ldi	r22, 0x0E	; 14
    134c:	8c e4       	ldi	r24, 0x4C	; 76
    134e:	96 e0       	ldi	r25, 0x06	; 6
    1350:	4e d2       	rcall	.+1180   	; 0x17ee <numPrinter>
    1352:	61 e0       	ldi	r22, 0x01	; 1
    1354:	70 e0       	ldi	r23, 0x00	; 0
    1356:	8c e4       	ldi	r24, 0x4C	; 76
    1358:	96 e0       	ldi	r25, 0x06	; 6
    135a:	31 d2       	rcall	.+1122   	; 0x17be <outputS>
    135c:	b5 c0       	rjmp	.+362    	; 0x14c8 <updateScreen+0x698>
    135e:	e0 91 37 06 	lds	r30, 0x0637	; 0x800637 <currentTrack>
    1362:	f0 e0       	ldi	r31, 0x00	; 0
    1364:	e1 53       	subi	r30, 0x31	; 49
    1366:	fb 4f       	sbci	r31, 0xFB	; 251
    1368:	20 81       	ld	r18, Z
    136a:	2f 5f       	subi	r18, 0xFF	; 255
    136c:	20 83       	st	Z, r18
    136e:	30 e0       	ldi	r19, 0x00	; 0
    1370:	42 e0       	ldi	r20, 0x02	; 2
    1372:	6e e0       	ldi	r22, 0x0E	; 14
    1374:	80 e6       	ldi	r24, 0x60	; 96
    1376:	96 e0       	ldi	r25, 0x06	; 6
    1378:	3a d2       	rcall	.+1140   	; 0x17ee <numPrinter>
    137a:	62 e0       	ldi	r22, 0x02	; 2
    137c:	70 e0       	ldi	r23, 0x00	; 0
    137e:	80 e6       	ldi	r24, 0x60	; 96
    1380:	96 e0       	ldi	r25, 0x06	; 6
    1382:	1d d2       	rcall	.+1082   	; 0x17be <outputS>
    1384:	a1 c0       	rjmp	.+322    	; 0x14c8 <updateScreen+0x698>
    1386:	80 91 88 06 	lds	r24, 0x0688	; 0x800688 <screen3Index>
    138a:	8f 5f       	subi	r24, 0xFF	; 255
    138c:	83 30       	cpi	r24, 0x03	; 3
    138e:	18 f4       	brcc	.+6      	; 0x1396 <updateScreen+0x566>
    1390:	80 93 88 06 	sts	0x0688, r24	; 0x800688 <screen3Index>
    1394:	03 c0       	rjmp	.+6      	; 0x139c <updateScreen+0x56c>
    1396:	82 e0       	ldi	r24, 0x02	; 2
    1398:	80 93 88 06 	sts	0x0688, r24	; 0x800688 <screen3Index>
    139c:	60 91 88 06 	lds	r22, 0x0688	; 0x800688 <screen3Index>
    13a0:	70 e0       	ldi	r23, 0x00	; 0
    13a2:	c4 e1       	ldi	r28, 0x14	; 20
    13a4:	c6 9f       	mul	r28, r22
    13a6:	c0 01       	movw	r24, r0
    13a8:	c7 9f       	mul	r28, r23
    13aa:	90 0d       	add	r25, r0
    13ac:	11 24       	eor	r1, r1
    13ae:	88 5c       	subi	r24, 0xC8	; 200
    13b0:	99 4f       	sbci	r25, 0xF9	; 249
    13b2:	2c e3       	ldi	r18, 0x3C	; 60
    13b4:	fc 01       	movw	r30, r24
    13b6:	23 8b       	std	Z+19, r18	; 0x13
    13b8:	9b 01       	movw	r18, r22
    13ba:	21 50       	subi	r18, 0x01	; 1
    13bc:	31 09       	sbc	r19, r1
    13be:	c2 9f       	mul	r28, r18
    13c0:	f0 01       	movw	r30, r0
    13c2:	c3 9f       	mul	r28, r19
    13c4:	f0 0d       	add	r31, r0
    13c6:	11 24       	eor	r1, r1
    13c8:	e8 5c       	subi	r30, 0xC8	; 200
    13ca:	f9 4f       	sbci	r31, 0xF9	; 249
    13cc:	20 e2       	ldi	r18, 0x20	; 32
    13ce:	23 8b       	std	Z+19, r18	; 0x13
    13d0:	f6 d1       	rcall	.+1004   	; 0x17be <outputS>
    13d2:	60 91 88 06 	lds	r22, 0x0688	; 0x800688 <screen3Index>
    13d6:	70 e0       	ldi	r23, 0x00	; 0
    13d8:	61 50       	subi	r22, 0x01	; 1
    13da:	71 09       	sbc	r23, r1
    13dc:	c6 9f       	mul	r28, r22
    13de:	c0 01       	movw	r24, r0
    13e0:	c7 9f       	mul	r28, r23
    13e2:	90 0d       	add	r25, r0
    13e4:	11 24       	eor	r1, r1
    13e6:	88 5c       	subi	r24, 0xC8	; 200
    13e8:	99 4f       	sbci	r25, 0xF9	; 249
    13ea:	e9 d1       	rcall	.+978    	; 0x17be <outputS>
    13ec:	6d c0       	rjmp	.+218    	; 0x14c8 <updateScreen+0x698>
    13ee:	80 91 05 06 	lds	r24, 0x0605	; 0x800605 <encoderBFlag>
    13f2:	88 23       	and	r24, r24
    13f4:	a1 f1       	breq	.+104    	; 0x145e <updateScreen+0x62e>
    13f6:	80 91 88 06 	lds	r24, 0x0688	; 0x800688 <screen3Index>
    13fa:	81 30       	cpi	r24, 0x01	; 1
    13fc:	19 f0       	breq	.+6      	; 0x1404 <updateScreen+0x5d4>
    13fe:	82 30       	cpi	r24, 0x02	; 2
    1400:	d1 f0       	breq	.+52     	; 0x1436 <updateScreen+0x606>
    1402:	62 c0       	rjmp	.+196    	; 0x14c8 <updateScreen+0x698>
    1404:	80 91 b2 05 	lds	r24, 0x05B2	; 0x8005b2 <midiChannel>
    1408:	81 50       	subi	r24, 0x01	; 1
    140a:	18 f0       	brcs	.+6      	; 0x1412 <updateScreen+0x5e2>
    140c:	80 93 b2 05 	sts	0x05B2, r24	; 0x8005b2 <midiChannel>
    1410:	02 c0       	rjmp	.+4      	; 0x1416 <updateScreen+0x5e6>
    1412:	10 92 b2 05 	sts	0x05B2, r1	; 0x8005b2 <midiChannel>
    1416:	20 91 b2 05 	lds	r18, 0x05B2	; 0x8005b2 <midiChannel>
    141a:	30 e0       	ldi	r19, 0x00	; 0
    141c:	2f 5f       	subi	r18, 0xFF	; 255
    141e:	3f 4f       	sbci	r19, 0xFF	; 255
    1420:	42 e0       	ldi	r20, 0x02	; 2
    1422:	6e e0       	ldi	r22, 0x0E	; 14
    1424:	8c e4       	ldi	r24, 0x4C	; 76
    1426:	96 e0       	ldi	r25, 0x06	; 6
    1428:	e2 d1       	rcall	.+964    	; 0x17ee <numPrinter>
    142a:	61 e0       	ldi	r22, 0x01	; 1
    142c:	70 e0       	ldi	r23, 0x00	; 0
    142e:	8c e4       	ldi	r24, 0x4C	; 76
    1430:	96 e0       	ldi	r25, 0x06	; 6
    1432:	c5 d1       	rcall	.+906    	; 0x17be <outputS>
    1434:	49 c0       	rjmp	.+146    	; 0x14c8 <updateScreen+0x698>
    1436:	e0 91 37 06 	lds	r30, 0x0637	; 0x800637 <currentTrack>
    143a:	f0 e0       	ldi	r31, 0x00	; 0
    143c:	e1 53       	subi	r30, 0x31	; 49
    143e:	fb 4f       	sbci	r31, 0xFB	; 251
    1440:	20 81       	ld	r18, Z
    1442:	21 50       	subi	r18, 0x01	; 1
    1444:	20 83       	st	Z, r18
    1446:	30 e0       	ldi	r19, 0x00	; 0
    1448:	42 e0       	ldi	r20, 0x02	; 2
    144a:	6e e0       	ldi	r22, 0x0E	; 14
    144c:	80 e6       	ldi	r24, 0x60	; 96
    144e:	96 e0       	ldi	r25, 0x06	; 6
    1450:	ce d1       	rcall	.+924    	; 0x17ee <numPrinter>
    1452:	62 e0       	ldi	r22, 0x02	; 2
    1454:	70 e0       	ldi	r23, 0x00	; 0
    1456:	80 e6       	ldi	r24, 0x60	; 96
    1458:	96 e0       	ldi	r25, 0x06	; 6
    145a:	b1 d1       	rcall	.+866    	; 0x17be <outputS>
    145c:	35 c0       	rjmp	.+106    	; 0x14c8 <updateScreen+0x698>
    145e:	80 91 88 06 	lds	r24, 0x0688	; 0x800688 <screen3Index>
    1462:	9e ef       	ldi	r25, 0xFE	; 254
    1464:	98 0f       	add	r25, r24
    1466:	9a 3f       	cpi	r25, 0xFA	; 250
    1468:	20 f4       	brcc	.+8      	; 0x1472 <updateScreen+0x642>
    146a:	81 50       	subi	r24, 0x01	; 1
    146c:	80 93 88 06 	sts	0x0688, r24	; 0x800688 <screen3Index>
    1470:	03 c0       	rjmp	.+6      	; 0x1478 <updateScreen+0x648>
    1472:	81 e0       	ldi	r24, 0x01	; 1
    1474:	80 93 88 06 	sts	0x0688, r24	; 0x800688 <screen3Index>
    1478:	60 91 88 06 	lds	r22, 0x0688	; 0x800688 <screen3Index>
    147c:	70 e0       	ldi	r23, 0x00	; 0
    147e:	c4 e1       	ldi	r28, 0x14	; 20
    1480:	c6 9f       	mul	r28, r22
    1482:	c0 01       	movw	r24, r0
    1484:	c7 9f       	mul	r28, r23
    1486:	90 0d       	add	r25, r0
    1488:	11 24       	eor	r1, r1
    148a:	88 5c       	subi	r24, 0xC8	; 200
    148c:	99 4f       	sbci	r25, 0xF9	; 249
    148e:	2c e3       	ldi	r18, 0x3C	; 60
    1490:	fc 01       	movw	r30, r24
    1492:	23 8b       	std	Z+19, r18	; 0x13
    1494:	9b 01       	movw	r18, r22
    1496:	2f 5f       	subi	r18, 0xFF	; 255
    1498:	3f 4f       	sbci	r19, 0xFF	; 255
    149a:	c2 9f       	mul	r28, r18
    149c:	f0 01       	movw	r30, r0
    149e:	c3 9f       	mul	r28, r19
    14a0:	f0 0d       	add	r31, r0
    14a2:	11 24       	eor	r1, r1
    14a4:	e8 5c       	subi	r30, 0xC8	; 200
    14a6:	f9 4f       	sbci	r31, 0xF9	; 249
    14a8:	20 e2       	ldi	r18, 0x20	; 32
    14aa:	23 8b       	std	Z+19, r18	; 0x13
    14ac:	88 d1       	rcall	.+784    	; 0x17be <outputS>
    14ae:	60 91 88 06 	lds	r22, 0x0688	; 0x800688 <screen3Index>
    14b2:	70 e0       	ldi	r23, 0x00	; 0
    14b4:	6f 5f       	subi	r22, 0xFF	; 255
    14b6:	7f 4f       	sbci	r23, 0xFF	; 255
    14b8:	c6 9f       	mul	r28, r22
    14ba:	c0 01       	movw	r24, r0
    14bc:	c7 9f       	mul	r28, r23
    14be:	90 0d       	add	r25, r0
    14c0:	11 24       	eor	r1, r1
    14c2:	88 5c       	subi	r24, 0xC8	; 200
    14c4:	99 4f       	sbci	r25, 0xF9	; 249
    14c6:	7b d1       	rcall	.+758    	; 0x17be <outputS>
    14c8:	80 91 8b 06 	lds	r24, 0x068B	; 0x80068b <encoderBValue>
    14cc:	80 93 06 06 	sts	0x0606, r24	; 0x800606 <prevEncoderBValue>
    14d0:	80 91 86 03 	lds	r24, 0x0386	; 0x800386 <encoderAValue>
    14d4:	90 91 e3 04 	lds	r25, 0x04E3	; 0x8004e3 <prevEncoderAValue>
    14d8:	98 17       	cp	r25, r24
    14da:	09 f4       	brne	.+2      	; 0x14de <updateScreen+0x6ae>
    14dc:	6b c0       	rjmp	.+214    	; 0x15b4 <updateScreen+0x784>
    14de:	83 70       	andi	r24, 0x03	; 3
    14e0:	80 93 86 03 	sts	0x0386, r24	; 0x800386 <encoderAValue>
    14e4:	81 30       	cpi	r24, 0x01	; 1
    14e6:	09 f1       	breq	.+66     	; 0x152a <updateScreen+0x6fa>
    14e8:	38 f0       	brcs	.+14     	; 0x14f8 <updateScreen+0x6c8>
    14ea:	82 30       	cpi	r24, 0x02	; 2
    14ec:	09 f4       	brne	.+2      	; 0x14f0 <updateScreen+0x6c0>
    14ee:	3f c0       	rjmp	.+126    	; 0x156e <updateScreen+0x73e>
    14f0:	83 30       	cpi	r24, 0x03	; 3
    14f2:	09 f4       	brne	.+2      	; 0x14f6 <updateScreen+0x6c6>
    14f4:	4c c0       	rjmp	.+152    	; 0x158e <updateScreen+0x75e>
    14f6:	5a c0       	rjmp	.+180    	; 0x15ac <updateScreen+0x77c>
    14f8:	20 91 df 04 	lds	r18, 0x04DF	; 0x8004df <currentPattern+0x158>
    14fc:	30 91 e0 04 	lds	r19, 0x04E0	; 0x8004e0 <currentPattern+0x159>
    1500:	43 e0       	ldi	r20, 0x03	; 3
    1502:	65 e0       	ldi	r22, 0x05	; 5
    1504:	88 e8       	ldi	r24, 0x88	; 136
    1506:	95 e0       	ldi	r25, 0x05	; 5
    1508:	72 d1       	rcall	.+740    	; 0x17ee <numPrinter>
    150a:	00 e6       	ldi	r16, 0x60	; 96
    150c:	15 e0       	ldi	r17, 0x05	; 5
    150e:	c0 e0       	ldi	r28, 0x00	; 0
    1510:	d0 e0       	ldi	r29, 0x00	; 0
    1512:	be 01       	movw	r22, r28
    1514:	c8 01       	movw	r24, r16
    1516:	53 d1       	rcall	.+678    	; 0x17be <outputS>
    1518:	21 96       	adiw	r28, 0x01	; 1
    151a:	0c 5e       	subi	r16, 0xEC	; 236
    151c:	1f 4f       	sbci	r17, 0xFF	; 255
    151e:	c4 30       	cpi	r28, 0x04	; 4
    1520:	d1 05       	cpc	r29, r1
    1522:	b9 f7       	brne	.-18     	; 0x1512 <updateScreen+0x6e2>
    1524:	10 92 8a 06 	sts	0x068A, r1	; 0x80068a <screen0Index>
    1528:	41 c0       	rjmp	.+130    	; 0x15ac <updateScreen+0x77c>
    152a:	20 91 e1 04 	lds	r18, 0x04E1	; 0x8004e1 <currentPattern+0x15a>
    152e:	30 e0       	ldi	r19, 0x00	; 0
    1530:	42 e0       	ldi	r20, 0x02	; 2
    1532:	66 e0       	ldi	r22, 0x06	; 6
    1534:	8c e0       	ldi	r24, 0x0C	; 12
    1536:	95 e0       	ldi	r25, 0x05	; 5
    1538:	5a d1       	rcall	.+692    	; 0x17ee <numPrinter>
    153a:	20 91 8c 06 	lds	r18, 0x068C	; 0x80068c <currentStep>
    153e:	30 e0       	ldi	r19, 0x00	; 0
    1540:	2f 5f       	subi	r18, 0xFF	; 255
    1542:	3f 4f       	sbci	r19, 0xFF	; 255
    1544:	42 e0       	ldi	r20, 0x02	; 2
    1546:	6d e0       	ldi	r22, 0x0D	; 13
    1548:	80 e2       	ldi	r24, 0x20	; 32
    154a:	95 e0       	ldi	r25, 0x05	; 5
    154c:	50 d1       	rcall	.+672    	; 0x17ee <numPrinter>
    154e:	04 ee       	ldi	r16, 0xE4	; 228
    1550:	14 e0       	ldi	r17, 0x04	; 4
    1552:	c0 e0       	ldi	r28, 0x00	; 0
    1554:	d0 e0       	ldi	r29, 0x00	; 0
    1556:	be 01       	movw	r22, r28
    1558:	c8 01       	movw	r24, r16
    155a:	31 d1       	rcall	.+610    	; 0x17be <outputS>
    155c:	21 96       	adiw	r28, 0x01	; 1
    155e:	0c 5e       	subi	r16, 0xEC	; 236
    1560:	1f 4f       	sbci	r17, 0xFF	; 255
    1562:	c4 30       	cpi	r28, 0x04	; 4
    1564:	d1 05       	cpc	r29, r1
    1566:	b9 f7       	brne	.-18     	; 0x1556 <updateScreen+0x726>
    1568:	10 92 b3 05 	sts	0x05B3, r1	; 0x8005b3 <screen1Index>
    156c:	1f c0       	rjmp	.+62     	; 0x15ac <updateScreen+0x77c>
    156e:	04 eb       	ldi	r16, 0xB4	; 180
    1570:	15 e0       	ldi	r17, 0x05	; 5
    1572:	c0 e0       	ldi	r28, 0x00	; 0
    1574:	d0 e0       	ldi	r29, 0x00	; 0
    1576:	be 01       	movw	r22, r28
    1578:	c8 01       	movw	r24, r16
    157a:	21 d1       	rcall	.+578    	; 0x17be <outputS>
    157c:	21 96       	adiw	r28, 0x01	; 1
    157e:	0c 5e       	subi	r16, 0xEC	; 236
    1580:	1f 4f       	sbci	r17, 0xFF	; 255
    1582:	c4 30       	cpi	r28, 0x04	; 4
    1584:	d1 05       	cpc	r29, r1
    1586:	b9 f7       	brne	.-18     	; 0x1576 <updateScreen+0x746>
    1588:	10 92 07 06 	sts	0x0607, r1	; 0x800607 <screen2Index>
    158c:	0f c0       	rjmp	.+30     	; 0x15ac <updateScreen+0x77c>
    158e:	08 e3       	ldi	r16, 0x38	; 56
    1590:	16 e0       	ldi	r17, 0x06	; 6
    1592:	c0 e0       	ldi	r28, 0x00	; 0
    1594:	d0 e0       	ldi	r29, 0x00	; 0
    1596:	be 01       	movw	r22, r28
    1598:	c8 01       	movw	r24, r16
    159a:	11 d1       	rcall	.+546    	; 0x17be <outputS>
    159c:	21 96       	adiw	r28, 0x01	; 1
    159e:	0c 5e       	subi	r16, 0xEC	; 236
    15a0:	1f 4f       	sbci	r17, 0xFF	; 255
    15a2:	c4 30       	cpi	r28, 0x04	; 4
    15a4:	d1 05       	cpc	r29, r1
    15a6:	b9 f7       	brne	.-18     	; 0x1596 <updateScreen+0x766>
    15a8:	10 92 88 06 	sts	0x0688, r1	; 0x800688 <screen3Index>
    15ac:	80 91 86 03 	lds	r24, 0x0386	; 0x800386 <encoderAValue>
    15b0:	80 93 e3 04 	sts	0x04E3, r24	; 0x8004e3 <prevEncoderAValue>
    15b4:	df 91       	pop	r29
    15b6:	cf 91       	pop	r28
    15b8:	1f 91       	pop	r17
    15ba:	0f 91       	pop	r16
    15bc:	08 95       	ret

000015be <listenMidi>:
    15be:	cf 92       	push	r12
    15c0:	df 92       	push	r13
    15c2:	ef 92       	push	r14
    15c4:	ff 92       	push	r15
    15c6:	0f 93       	push	r16
    15c8:	1f 93       	push	r17
    15ca:	cf 93       	push	r28
    15cc:	df 93       	push	r29
    15ce:	80 91 b2 05 	lds	r24, 0x05B2	; 0x8005b2 <midiChannel>
    15d2:	98 2f       	mov	r25, r24
    15d4:	90 69       	ori	r25, 0x90	; 144
    15d6:	90 93 7c 03 	sts	0x037C, r25	; 0x80037c <midiNoteCheck>
    15da:	98 2f       	mov	r25, r24
    15dc:	90 6b       	ori	r25, 0xB0	; 176
    15de:	90 93 7b 03 	sts	0x037B, r25	; 0x80037b <midiCCCheck>
    15e2:	98 2f       	mov	r25, r24
    15e4:	90 6c       	ori	r25, 0xC0	; 192
    15e6:	90 93 7a 03 	sts	0x037A, r25	; 0x80037a <midiPCCheck>
    15ea:	80 68       	ori	r24, 0x80	; 128
    15ec:	80 93 79 03 	sts	0x0379, r24	; 0x800379 <midiOffCheck>
    15f0:	55 d3       	rcall	.+1706   	; 0x1c9c <getChar>
    15f2:	80 93 7d 03 	sts	0x037D, r24	; 0x80037d <currentMidiMessage>
    15f6:	90 91 7c 03 	lds	r25, 0x037C	; 0x80037c <midiNoteCheck>
    15fa:	89 13       	cpse	r24, r25
    15fc:	2d c0       	rjmp	.+90     	; 0x1658 <listenMidi+0x9a>
    15fe:	4e d3       	rcall	.+1692   	; 0x1c9c <getChar>
    1600:	cd e7       	ldi	r28, 0x7D	; 125
    1602:	d3 e0       	ldi	r29, 0x03	; 3
    1604:	89 83       	std	Y+1, r24	; 0x01
    1606:	4a d3       	rcall	.+1684   	; 0x1c9c <getChar>
    1608:	8a 83       	std	Y+2, r24	; 0x02
    160a:	0f ec       	ldi	r16, 0xCF	; 207
    160c:	14 e0       	ldi	r17, 0x04	; 4
    160e:	cf e0       	ldi	r28, 0x0F	; 15
    1610:	d4 e0       	ldi	r29, 0x04	; 4
    1612:	0f 2e       	mov	r0, r31
    1614:	ff e1       	ldi	r31, 0x1F	; 31
    1616:	cf 2e       	mov	r12, r31
    1618:	f4 e0       	ldi	r31, 0x04	; 4
    161a:	df 2e       	mov	r13, r31
    161c:	f0 2d       	mov	r31, r0
    161e:	0f 2e       	mov	r0, r31
    1620:	fd e7       	ldi	r31, 0x7D	; 125
    1622:	ef 2e       	mov	r14, r31
    1624:	f3 e0       	ldi	r31, 0x03	; 3
    1626:	ff 2e       	mov	r15, r31
    1628:	f0 2d       	mov	r31, r0
    162a:	f8 01       	movw	r30, r16
    162c:	91 91       	ld	r25, Z+
    162e:	8f 01       	movw	r16, r30
    1630:	f7 01       	movw	r30, r14
    1632:	81 81       	ldd	r24, Z+1	; 0x01
    1634:	98 13       	cpse	r25, r24
    1636:	0c c0       	rjmp	.+24     	; 0x1650 <listenMidi+0x92>
    1638:	28 81       	ld	r18, Y
    163a:	30 e0       	ldi	r19, 0x00	; 0
    163c:	fe 01       	movw	r30, r28
    163e:	e0 57       	subi	r30, 0x70	; 112
    1640:	f1 09       	sbc	r31, r1
    1642:	40 81       	ld	r20, Z
    1644:	50 e0       	ldi	r21, 0x00	; 0
    1646:	68 89       	ldd	r22, Y+16	; 0x10
    1648:	70 e0       	ldi	r23, 0x00	; 0
    164a:	88 a1       	ldd	r24, Y+32	; 0x20
    164c:	90 e0       	ldi	r25, 0x00	; 0
    164e:	3b d3       	rcall	.+1654   	; 0x1cc6 <trackControl>
    1650:	21 96       	adiw	r28, 0x01	; 1
    1652:	cc 15       	cp	r28, r12
    1654:	dd 05       	cpc	r29, r13
    1656:	49 f7       	brne	.-46     	; 0x162a <listenMidi+0x6c>
    1658:	90 91 7d 03 	lds	r25, 0x037D	; 0x80037d <currentMidiMessage>
    165c:	80 91 7b 03 	lds	r24, 0x037B	; 0x80037b <midiCCCheck>
    1660:	98 13       	cpse	r25, r24
    1662:	0b c0       	rjmp	.+22     	; 0x167a <listenMidi+0xbc>
    1664:	1b d3       	rcall	.+1590   	; 0x1c9c <getChar>
    1666:	cd e7       	ldi	r28, 0x7D	; 125
    1668:	d3 e0       	ldi	r29, 0x03	; 3
    166a:	89 83       	std	Y+1, r24	; 0x01
    166c:	17 d3       	rcall	.+1582   	; 0x1c9c <getChar>
    166e:	8a 83       	std	Y+2, r24	; 0x02
    1670:	63 e0       	ldi	r22, 0x03	; 3
    1672:	70 e0       	ldi	r23, 0x00	; 0
    1674:	8e e8       	ldi	r24, 0x8E	; 142
    1676:	92 e0       	ldi	r25, 0x02	; 2
    1678:	a2 d0       	rcall	.+324    	; 0x17be <outputS>
    167a:	90 91 7d 03 	lds	r25, 0x037D	; 0x80037d <currentMidiMessage>
    167e:	80 91 7a 03 	lds	r24, 0x037A	; 0x80037a <midiPCCheck>
    1682:	98 13       	cpse	r25, r24
    1684:	08 c0       	rjmp	.+16     	; 0x1696 <listenMidi+0xd8>
    1686:	0a d3       	rcall	.+1556   	; 0x1c9c <getChar>
    1688:	80 93 7e 03 	sts	0x037E, r24	; 0x80037e <currentMidiMessage+0x1>
    168c:	63 e0       	ldi	r22, 0x03	; 3
    168e:	70 e0       	ldi	r23, 0x00	; 0
    1690:	8a e7       	ldi	r24, 0x7A	; 122
    1692:	92 e0       	ldi	r25, 0x02	; 2
    1694:	94 d0       	rcall	.+296    	; 0x17be <outputS>
    1696:	90 91 7d 03 	lds	r25, 0x037D	; 0x80037d <currentMidiMessage>
    169a:	80 91 79 03 	lds	r24, 0x0379	; 0x800379 <midiOffCheck>
    169e:	98 13       	cpse	r25, r24
    16a0:	0b c0       	rjmp	.+22     	; 0x16b8 <listenMidi+0xfa>
    16a2:	fc d2       	rcall	.+1528   	; 0x1c9c <getChar>
    16a4:	cd e7       	ldi	r28, 0x7D	; 125
    16a6:	d3 e0       	ldi	r29, 0x03	; 3
    16a8:	89 83       	std	Y+1, r24	; 0x01
    16aa:	f8 d2       	rcall	.+1520   	; 0x1c9c <getChar>
    16ac:	8a 83       	std	Y+2, r24	; 0x02
    16ae:	63 e0       	ldi	r22, 0x03	; 3
    16b0:	70 e0       	ldi	r23, 0x00	; 0
    16b2:	86 e6       	ldi	r24, 0x66	; 102
    16b4:	92 e0       	ldi	r25, 0x02	; 2
    16b6:	83 d0       	rcall	.+262    	; 0x17be <outputS>
    16b8:	df 91       	pop	r29
    16ba:	cf 91       	pop	r28
    16bc:	1f 91       	pop	r17
    16be:	0f 91       	pop	r16
    16c0:	ff 90       	pop	r15
    16c2:	ef 90       	pop	r14
    16c4:	df 90       	pop	r13
    16c6:	cf 90       	pop	r12
    16c8:	08 95       	ret

000016ca <enableCycle>:
    16ca:	e5 e0       	ldi	r30, 0x05	; 5
    16cc:	f1 e0       	ldi	r31, 0x01	; 1
    16ce:	80 81       	ld	r24, Z
    16d0:	82 60       	ori	r24, 0x02	; 2
    16d2:	80 83       	st	Z, r24
    16d4:	85 e0       	ldi	r24, 0x05	; 5
    16d6:	8a 95       	dec	r24
    16d8:	f1 f7       	brne	.-4      	; 0x16d6 <enableCycle+0xc>
    16da:	00 00       	nop
    16dc:	80 81       	ld	r24, Z
    16de:	8d 7f       	andi	r24, 0xFD	; 253
    16e0:	80 83       	st	Z, r24
    16e2:	08 95       	ret

000016e4 <command>:
    16e4:	e5 e0       	ldi	r30, 0x05	; 5
    16e6:	f1 e0       	ldi	r31, 0x01	; 1
    16e8:	90 81       	ld	r25, Z
    16ea:	9e 7f       	andi	r25, 0xFE	; 254
    16ec:	90 83       	st	Z, r25
    16ee:	88 b9       	out	0x08, r24	; 8
    16f0:	ec cf       	rjmp	.-40     	; 0x16ca <enableCycle>
    16f2:	08 95       	ret

000016f4 <data>:
    16f4:	e5 e0       	ldi	r30, 0x05	; 5
    16f6:	f1 e0       	ldi	r31, 0x01	; 1
    16f8:	90 81       	ld	r25, Z
    16fa:	91 60       	ori	r25, 0x01	; 1
    16fc:	90 83       	st	Z, r25
    16fe:	88 b9       	out	0x08, r24	; 8
    1700:	e4 cf       	rjmp	.-56     	; 0x16ca <enableCycle>
    1702:	08 95       	ret

00001704 <initScreen>:
    1704:	83 e0       	ldi	r24, 0x03	; 3
    1706:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <__TEXT_REGION_LENGTH__+0x700104>
    170a:	8f ef       	ldi	r24, 0xFF	; 255
    170c:	87 b9       	out	0x07, r24	; 7
    170e:	e5 e0       	ldi	r30, 0x05	; 5
    1710:	f1 e0       	ldi	r31, 0x01	; 1
    1712:	80 81       	ld	r24, Z
    1714:	8c 7f       	andi	r24, 0xFC	; 252
    1716:	80 83       	st	Z, r24
    1718:	18 b8       	out	0x08, r1	; 8
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
    171a:	8f e1       	ldi	r24, 0x1F	; 31
    171c:	93 e0       	ldi	r25, 0x03	; 3
    171e:	01 97       	sbiw	r24, 0x01	; 1
    1720:	f1 f7       	brne	.-4      	; 0x171e <initScreen+0x1a>
    1722:	00 c0       	rjmp	.+0      	; 0x1724 <initScreen+0x20>
    1724:	00 00       	nop
    1726:	8a e2       	ldi	r24, 0x2A	; 42
    1728:	dd df       	rcall	.-70     	; 0x16e4 <command>
    172a:	81 e7       	ldi	r24, 0x71	; 113
    172c:	db df       	rcall	.-74     	; 0x16e4 <command>
    172e:	8c e5       	ldi	r24, 0x5C	; 92
    1730:	e1 df       	rcall	.-62     	; 0x16f4 <data>
    1732:	88 e2       	ldi	r24, 0x28	; 40
    1734:	d7 df       	rcall	.-82     	; 0x16e4 <command>
    1736:	88 e0       	ldi	r24, 0x08	; 8
    1738:	d5 df       	rcall	.-86     	; 0x16e4 <command>
    173a:	8a e2       	ldi	r24, 0x2A	; 42
    173c:	d3 df       	rcall	.-90     	; 0x16e4 <command>
    173e:	89 e7       	ldi	r24, 0x79	; 121
    1740:	d1 df       	rcall	.-94     	; 0x16e4 <command>
    1742:	85 ed       	ldi	r24, 0xD5	; 213
    1744:	cf df       	rcall	.-98     	; 0x16e4 <command>
    1746:	80 e7       	ldi	r24, 0x70	; 112
    1748:	cd df       	rcall	.-102    	; 0x16e4 <command>
    174a:	88 e7       	ldi	r24, 0x78	; 120
    174c:	cb df       	rcall	.-106    	; 0x16e4 <command>
    174e:	89 e0       	ldi	r24, 0x09	; 9
    1750:	c9 df       	rcall	.-110    	; 0x16e4 <command>
    1752:	86 e0       	ldi	r24, 0x06	; 6
    1754:	c7 df       	rcall	.-114    	; 0x16e4 <command>
    1756:	82 e7       	ldi	r24, 0x72	; 114
    1758:	c5 df       	rcall	.-118    	; 0x16e4 <command>
    175a:	8a e0       	ldi	r24, 0x0A	; 10
    175c:	cb df       	rcall	.-106    	; 0x16f4 <data>
    175e:	89 e7       	ldi	r24, 0x79	; 121
    1760:	c1 df       	rcall	.-126    	; 0x16e4 <command>
    1762:	8a ed       	ldi	r24, 0xDA	; 218
    1764:	bf df       	rcall	.-130    	; 0x16e4 <command>
    1766:	80 e1       	ldi	r24, 0x10	; 16
    1768:	bd df       	rcall	.-134    	; 0x16e4 <command>
    176a:	8c ed       	ldi	r24, 0xDC	; 220
    176c:	bb df       	rcall	.-138    	; 0x16e4 <command>
    176e:	80 e0       	ldi	r24, 0x00	; 0
    1770:	b9 df       	rcall	.-142    	; 0x16e4 <command>
    1772:	81 e8       	ldi	r24, 0x81	; 129
    1774:	b7 df       	rcall	.-146    	; 0x16e4 <command>
    1776:	8f e7       	ldi	r24, 0x7F	; 127
    1778:	b5 df       	rcall	.-150    	; 0x16e4 <command>
    177a:	89 ed       	ldi	r24, 0xD9	; 217
    177c:	b3 df       	rcall	.-154    	; 0x16e4 <command>
    177e:	81 ef       	ldi	r24, 0xF1	; 241
    1780:	b1 df       	rcall	.-158    	; 0x16e4 <command>
    1782:	8b ed       	ldi	r24, 0xDB	; 219
    1784:	af df       	rcall	.-162    	; 0x16e4 <command>
    1786:	80 e4       	ldi	r24, 0x40	; 64
    1788:	ad df       	rcall	.-166    	; 0x16e4 <command>
    178a:	88 e7       	ldi	r24, 0x78	; 120
    178c:	ab df       	rcall	.-170    	; 0x16e4 <command>
    178e:	88 e2       	ldi	r24, 0x28	; 40
    1790:	a9 df       	rcall	.-174    	; 0x16e4 <command>
    1792:	81 e0       	ldi	r24, 0x01	; 1
    1794:	a7 df       	rcall	.-178    	; 0x16e4 <command>
    1796:	8f e3       	ldi	r24, 0x3F	; 63
    1798:	9f e1       	ldi	r25, 0x1F	; 31
    179a:	01 97       	sbiw	r24, 0x01	; 1
    179c:	f1 f7       	brne	.-4      	; 0x179a <initScreen+0x96>
    179e:	00 c0       	rjmp	.+0      	; 0x17a0 <initScreen+0x9c>
    17a0:	00 00       	nop
    17a2:	80 e8       	ldi	r24, 0x80	; 128
    17a4:	9f df       	rcall	.-194    	; 0x16e4 <command>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
    17a6:	8c e0       	ldi	r24, 0x0C	; 12
    17a8:	9d df       	rcall	.-198    	; 0x16e4 <command>
    17aa:	9f ef       	ldi	r25, 0xFF	; 255
    17ac:	24 e3       	ldi	r18, 0x34	; 52
    17ae:	8c e0       	ldi	r24, 0x0C	; 12
    17b0:	91 50       	subi	r25, 0x01	; 1
    17b2:	20 40       	sbci	r18, 0x00	; 0
    17b4:	80 40       	sbci	r24, 0x00	; 0
    17b6:	e1 f7       	brne	.-8      	; 0x17b0 <initScreen+0xac>
    17b8:	00 c0       	rjmp	.+0      	; 0x17ba <initScreen+0xb6>
    17ba:	00 00       	nop
    17bc:	08 95       	ret

000017be <outputS>:
    17be:	0f 93       	push	r16
    17c0:	1f 93       	push	r17
    17c2:	cf 93       	push	r28
    17c4:	df 93       	push	r29
    17c6:	8c 01       	movw	r16, r24
    17c8:	fb 01       	movw	r30, r22
    17ca:	ff 27       	eor	r31, r31
    17cc:	ee 55       	subi	r30, 0x5E	; 94
    17ce:	fd 4f       	sbci	r31, 0xFD	; 253
    17d0:	80 81       	ld	r24, Z
    17d2:	88 df       	rcall	.-240    	; 0x16e4 <command>
    17d4:	e8 01       	movw	r28, r16
    17d6:	0c 5e       	subi	r16, 0xEC	; 236
    17d8:	1f 4f       	sbci	r17, 0xFF	; 255
    17da:	89 91       	ld	r24, Y+
    17dc:	8b df       	rcall	.-234    	; 0x16f4 <data>
    17de:	c0 17       	cp	r28, r16
    17e0:	d1 07       	cpc	r29, r17
    17e2:	d9 f7       	brne	.-10     	; 0x17da <outputS+0x1c>
    17e4:	df 91       	pop	r29
    17e6:	cf 91       	pop	r28
    17e8:	1f 91       	pop	r17
    17ea:	0f 91       	pop	r16
    17ec:	08 95       	ret

000017ee <numPrinter>:
    17ee:	cf 93       	push	r28
    17f0:	df 93       	push	r29
    17f2:	f9 01       	movw	r30, r18
    17f4:	43 30       	cpi	r20, 0x03	; 3
    17f6:	09 f4       	brne	.+2      	; 0x17fa <numPrinter+0xc>
    17f8:	51 c0       	rjmp	.+162    	; 0x189c <numPrinter+0xae>
    17fa:	28 f4       	brcc	.+10     	; 0x1806 <numPrinter+0x18>
    17fc:	41 30       	cpi	r20, 0x01	; 1
    17fe:	51 f0       	breq	.+20     	; 0x1814 <numPrinter+0x26>
    1800:	42 30       	cpi	r20, 0x02	; 2
    1802:	21 f1       	breq	.+72     	; 0x184c <numPrinter+0x5e>
    1804:	a2 c1       	rjmp	.+836    	; 0x1b4a <numPrinter+0x35c>
    1806:	44 30       	cpi	r20, 0x04	; 4
    1808:	09 f4       	brne	.+2      	; 0x180c <numPrinter+0x1e>
    180a:	8e c0       	rjmp	.+284    	; 0x1928 <numPrinter+0x13a>
    180c:	45 30       	cpi	r20, 0x05	; 5
    180e:	09 f4       	brne	.+2      	; 0x1812 <numPrinter+0x24>
    1810:	fd c0       	rjmp	.+506    	; 0x1a0c <numPrinter+0x21e>
    1812:	9b c1       	rjmp	.+822    	; 0x1b4a <numPrinter+0x35c>
    1814:	ec 01       	movw	r28, r24
    1816:	c6 0f       	add	r28, r22
    1818:	d1 1d       	adc	r29, r1
    181a:	ad ec       	ldi	r26, 0xCD	; 205
    181c:	bc ec       	ldi	r27, 0xCC	; 204
    181e:	81 d4       	rcall	.+2306   	; 0x2122 <__umulhisi3>
    1820:	96 95       	lsr	r25
    1822:	87 95       	ror	r24
    1824:	96 95       	lsr	r25
    1826:	87 95       	ror	r24
    1828:	96 95       	lsr	r25
    182a:	87 95       	ror	r24
    182c:	9c 01       	movw	r18, r24
    182e:	22 0f       	add	r18, r18
    1830:	33 1f       	adc	r19, r19
    1832:	88 0f       	add	r24, r24
    1834:	99 1f       	adc	r25, r25
    1836:	88 0f       	add	r24, r24
    1838:	99 1f       	adc	r25, r25
    183a:	88 0f       	add	r24, r24
    183c:	99 1f       	adc	r25, r25
    183e:	82 0f       	add	r24, r18
    1840:	93 1f       	adc	r25, r19
    1842:	e8 1b       	sub	r30, r24
    1844:	f9 0b       	sbc	r31, r25
    1846:	e0 5d       	subi	r30, 0xD0	; 208
    1848:	e8 83       	st	Y, r30
    184a:	7f c1       	rjmp	.+766    	; 0x1b4a <numPrinter+0x35c>
    184c:	ec 01       	movw	r28, r24
    184e:	c6 0f       	add	r28, r22
    1850:	d1 1d       	adc	r29, r1
    1852:	ad ec       	ldi	r26, 0xCD	; 205
    1854:	bc ec       	ldi	r27, 0xCC	; 204
    1856:	65 d4       	rcall	.+2250   	; 0x2122 <__umulhisi3>
    1858:	96 95       	lsr	r25
    185a:	87 95       	ror	r24
    185c:	96 95       	lsr	r25
    185e:	87 95       	ror	r24
    1860:	96 95       	lsr	r25
    1862:	87 95       	ror	r24
    1864:	9c 01       	movw	r18, r24
    1866:	22 0f       	add	r18, r18
    1868:	33 1f       	adc	r19, r19
    186a:	88 0f       	add	r24, r24
    186c:	99 1f       	adc	r25, r25
    186e:	88 0f       	add	r24, r24
    1870:	99 1f       	adc	r25, r25
    1872:	88 0f       	add	r24, r24
    1874:	99 1f       	adc	r25, r25
    1876:	82 0f       	add	r24, r18
    1878:	93 1f       	adc	r25, r19
    187a:	9f 01       	movw	r18, r30
    187c:	28 1b       	sub	r18, r24
    187e:	39 0b       	sbc	r19, r25
    1880:	c9 01       	movw	r24, r18
    1882:	80 5d       	subi	r24, 0xD0	; 208
    1884:	89 83       	std	Y+1, r24	; 0x01
    1886:	9f 01       	movw	r18, r30
    1888:	4c d4       	rcall	.+2200   	; 0x2122 <__umulhisi3>
    188a:	96 95       	lsr	r25
    188c:	87 95       	ror	r24
    188e:	96 95       	lsr	r25
    1890:	87 95       	ror	r24
    1892:	96 95       	lsr	r25
    1894:	87 95       	ror	r24
    1896:	80 5d       	subi	r24, 0xD0	; 208
    1898:	88 83       	st	Y, r24
    189a:	57 c1       	rjmp	.+686    	; 0x1b4a <numPrinter+0x35c>
    189c:	ec 01       	movw	r28, r24
    189e:	c6 0f       	add	r28, r22
    18a0:	d1 1d       	adc	r29, r1
    18a2:	ad ec       	ldi	r26, 0xCD	; 205
    18a4:	bc ec       	ldi	r27, 0xCC	; 204
    18a6:	3d d4       	rcall	.+2170   	; 0x2122 <__umulhisi3>
    18a8:	96 95       	lsr	r25
    18aa:	87 95       	ror	r24
    18ac:	96 95       	lsr	r25
    18ae:	87 95       	ror	r24
    18b0:	96 95       	lsr	r25
    18b2:	87 95       	ror	r24
    18b4:	9c 01       	movw	r18, r24
    18b6:	22 0f       	add	r18, r18
    18b8:	33 1f       	adc	r19, r19
    18ba:	88 0f       	add	r24, r24
    18bc:	99 1f       	adc	r25, r25
    18be:	88 0f       	add	r24, r24
    18c0:	99 1f       	adc	r25, r25
    18c2:	88 0f       	add	r24, r24
    18c4:	99 1f       	adc	r25, r25
    18c6:	82 0f       	add	r24, r18
    18c8:	93 1f       	adc	r25, r19
    18ca:	9f 01       	movw	r18, r30
    18cc:	28 1b       	sub	r18, r24
    18ce:	39 0b       	sbc	r19, r25
    18d0:	c9 01       	movw	r24, r18
    18d2:	80 5d       	subi	r24, 0xD0	; 208
    18d4:	8a 83       	std	Y+2, r24	; 0x02
    18d6:	af 01       	movw	r20, r30
    18d8:	56 95       	lsr	r21
    18da:	47 95       	ror	r20
    18dc:	56 95       	lsr	r21
    18de:	47 95       	ror	r20
    18e0:	9a 01       	movw	r18, r20
    18e2:	ab e7       	ldi	r26, 0x7B	; 123
    18e4:	b4 e1       	ldi	r27, 0x14	; 20
    18e6:	1d d4       	rcall	.+2106   	; 0x2122 <__umulhisi3>
    18e8:	96 95       	lsr	r25
    18ea:	87 95       	ror	r24
    18ec:	64 e6       	ldi	r22, 0x64	; 100
    18ee:	68 9f       	mul	r22, r24
    18f0:	90 01       	movw	r18, r0
    18f2:	69 9f       	mul	r22, r25
    18f4:	30 0d       	add	r19, r0
    18f6:	11 24       	eor	r1, r1
    18f8:	cf 01       	movw	r24, r30
    18fa:	82 1b       	sub	r24, r18
    18fc:	93 0b       	sbc	r25, r19
    18fe:	9c 01       	movw	r18, r24
    1900:	ad ec       	ldi	r26, 0xCD	; 205
    1902:	bc ec       	ldi	r27, 0xCC	; 204
    1904:	0e d4       	rcall	.+2076   	; 0x2122 <__umulhisi3>
    1906:	96 95       	lsr	r25
    1908:	87 95       	ror	r24
    190a:	96 95       	lsr	r25
    190c:	87 95       	ror	r24
    190e:	96 95       	lsr	r25
    1910:	87 95       	ror	r24
    1912:	80 5d       	subi	r24, 0xD0	; 208
    1914:	89 83       	std	Y+1, r24	; 0x01
    1916:	9a 01       	movw	r18, r20
    1918:	ab e7       	ldi	r26, 0x7B	; 123
    191a:	b4 e1       	ldi	r27, 0x14	; 20
    191c:	02 d4       	rcall	.+2052   	; 0x2122 <__umulhisi3>
    191e:	96 95       	lsr	r25
    1920:	87 95       	ror	r24
    1922:	80 5d       	subi	r24, 0xD0	; 208
    1924:	88 83       	st	Y, r24
    1926:	11 c1       	rjmp	.+546    	; 0x1b4a <numPrinter+0x35c>
    1928:	ec 01       	movw	r28, r24
    192a:	c6 0f       	add	r28, r22
    192c:	d1 1d       	adc	r29, r1
    192e:	ad ec       	ldi	r26, 0xCD	; 205
    1930:	bc ec       	ldi	r27, 0xCC	; 204
    1932:	f7 d3       	rcall	.+2030   	; 0x2122 <__umulhisi3>
    1934:	96 95       	lsr	r25
    1936:	87 95       	ror	r24
    1938:	96 95       	lsr	r25
    193a:	87 95       	ror	r24
    193c:	96 95       	lsr	r25
    193e:	87 95       	ror	r24
    1940:	9c 01       	movw	r18, r24
    1942:	22 0f       	add	r18, r18
    1944:	33 1f       	adc	r19, r19
    1946:	88 0f       	add	r24, r24
    1948:	99 1f       	adc	r25, r25
    194a:	88 0f       	add	r24, r24
    194c:	99 1f       	adc	r25, r25
    194e:	88 0f       	add	r24, r24
    1950:	99 1f       	adc	r25, r25
    1952:	82 0f       	add	r24, r18
    1954:	93 1f       	adc	r25, r19
    1956:	9f 01       	movw	r18, r30
    1958:	28 1b       	sub	r18, r24
    195a:	39 0b       	sbc	r19, r25
    195c:	c9 01       	movw	r24, r18
    195e:	80 5d       	subi	r24, 0xD0	; 208
    1960:	8b 83       	std	Y+3, r24	; 0x03
    1962:	9f 01       	movw	r18, r30
    1964:	36 95       	lsr	r19
    1966:	27 95       	ror	r18
    1968:	36 95       	lsr	r19
    196a:	27 95       	ror	r18
    196c:	ab e7       	ldi	r26, 0x7B	; 123
    196e:	b4 e1       	ldi	r27, 0x14	; 20
    1970:	d8 d3       	rcall	.+1968   	; 0x2122 <__umulhisi3>
    1972:	96 95       	lsr	r25
    1974:	87 95       	ror	r24
    1976:	44 e6       	ldi	r20, 0x64	; 100
    1978:	48 9f       	mul	r20, r24
    197a:	90 01       	movw	r18, r0
    197c:	49 9f       	mul	r20, r25
    197e:	30 0d       	add	r19, r0
    1980:	11 24       	eor	r1, r1
    1982:	cf 01       	movw	r24, r30
    1984:	82 1b       	sub	r24, r18
    1986:	93 0b       	sbc	r25, r19
    1988:	9c 01       	movw	r18, r24
    198a:	ad ec       	ldi	r26, 0xCD	; 205
    198c:	bc ec       	ldi	r27, 0xCC	; 204
    198e:	c9 d3       	rcall	.+1938   	; 0x2122 <__umulhisi3>
    1990:	96 95       	lsr	r25
    1992:	87 95       	ror	r24
    1994:	96 95       	lsr	r25
    1996:	87 95       	ror	r24
    1998:	96 95       	lsr	r25
    199a:	87 95       	ror	r24
    199c:	80 5d       	subi	r24, 0xD0	; 208
    199e:	8a 83       	std	Y+2, r24	; 0x02
    19a0:	af 01       	movw	r20, r30
    19a2:	56 95       	lsr	r21
    19a4:	47 95       	ror	r20
    19a6:	56 95       	lsr	r21
    19a8:	47 95       	ror	r20
    19aa:	56 95       	lsr	r21
    19ac:	47 95       	ror	r20
    19ae:	9a 01       	movw	r18, r20
    19b0:	a5 ec       	ldi	r26, 0xC5	; 197
    19b2:	b0 e2       	ldi	r27, 0x20	; 32
    19b4:	b6 d3       	rcall	.+1900   	; 0x2122 <__umulhisi3>
    19b6:	92 95       	swap	r25
    19b8:	82 95       	swap	r24
    19ba:	8f 70       	andi	r24, 0x0F	; 15
    19bc:	89 27       	eor	r24, r25
    19be:	9f 70       	andi	r25, 0x0F	; 15
    19c0:	89 27       	eor	r24, r25
    19c2:	68 ee       	ldi	r22, 0xE8	; 232
    19c4:	73 e0       	ldi	r23, 0x03	; 3
    19c6:	86 9f       	mul	r24, r22
    19c8:	90 01       	movw	r18, r0
    19ca:	87 9f       	mul	r24, r23
    19cc:	30 0d       	add	r19, r0
    19ce:	96 9f       	mul	r25, r22
    19d0:	30 0d       	add	r19, r0
    19d2:	11 24       	eor	r1, r1
    19d4:	cf 01       	movw	r24, r30
    19d6:	82 1b       	sub	r24, r18
    19d8:	93 0b       	sbc	r25, r19
    19da:	9c 01       	movw	r18, r24
    19dc:	36 95       	lsr	r19
    19de:	27 95       	ror	r18
    19e0:	36 95       	lsr	r19
    19e2:	27 95       	ror	r18
    19e4:	ab e7       	ldi	r26, 0x7B	; 123
    19e6:	b4 e1       	ldi	r27, 0x14	; 20
    19e8:	9c d3       	rcall	.+1848   	; 0x2122 <__umulhisi3>
    19ea:	96 95       	lsr	r25
    19ec:	87 95       	ror	r24
    19ee:	80 5d       	subi	r24, 0xD0	; 208
    19f0:	89 83       	std	Y+1, r24	; 0x01
    19f2:	9a 01       	movw	r18, r20
    19f4:	a5 ec       	ldi	r26, 0xC5	; 197
    19f6:	b0 e2       	ldi	r27, 0x20	; 32
    19f8:	94 d3       	rcall	.+1832   	; 0x2122 <__umulhisi3>
    19fa:	92 95       	swap	r25
    19fc:	82 95       	swap	r24
    19fe:	8f 70       	andi	r24, 0x0F	; 15
    1a00:	89 27       	eor	r24, r25
    1a02:	9f 70       	andi	r25, 0x0F	; 15
    1a04:	89 27       	eor	r24, r25
    1a06:	80 5d       	subi	r24, 0xD0	; 208
    1a08:	88 83       	st	Y, r24
    1a0a:	9f c0       	rjmp	.+318    	; 0x1b4a <numPrinter+0x35c>
    1a0c:	ec 01       	movw	r28, r24
    1a0e:	c6 0f       	add	r28, r22
    1a10:	d1 1d       	adc	r29, r1
    1a12:	ad ec       	ldi	r26, 0xCD	; 205
    1a14:	bc ec       	ldi	r27, 0xCC	; 204
    1a16:	85 d3       	rcall	.+1802   	; 0x2122 <__umulhisi3>
    1a18:	96 95       	lsr	r25
    1a1a:	87 95       	ror	r24
    1a1c:	96 95       	lsr	r25
    1a1e:	87 95       	ror	r24
    1a20:	96 95       	lsr	r25
    1a22:	87 95       	ror	r24
    1a24:	9c 01       	movw	r18, r24
    1a26:	22 0f       	add	r18, r18
    1a28:	33 1f       	adc	r19, r19
    1a2a:	88 0f       	add	r24, r24
    1a2c:	99 1f       	adc	r25, r25
    1a2e:	88 0f       	add	r24, r24
    1a30:	99 1f       	adc	r25, r25
    1a32:	88 0f       	add	r24, r24
    1a34:	99 1f       	adc	r25, r25
    1a36:	82 0f       	add	r24, r18
    1a38:	93 1f       	adc	r25, r19
    1a3a:	9f 01       	movw	r18, r30
    1a3c:	28 1b       	sub	r18, r24
    1a3e:	39 0b       	sbc	r19, r25
    1a40:	c9 01       	movw	r24, r18
    1a42:	80 5d       	subi	r24, 0xD0	; 208
    1a44:	8c 83       	std	Y+4, r24	; 0x04
    1a46:	9f 01       	movw	r18, r30
    1a48:	36 95       	lsr	r19
    1a4a:	27 95       	ror	r18
    1a4c:	36 95       	lsr	r19
    1a4e:	27 95       	ror	r18
    1a50:	ab e7       	ldi	r26, 0x7B	; 123
    1a52:	b4 e1       	ldi	r27, 0x14	; 20
    1a54:	66 d3       	rcall	.+1740   	; 0x2122 <__umulhisi3>
    1a56:	96 95       	lsr	r25
    1a58:	87 95       	ror	r24
    1a5a:	44 e6       	ldi	r20, 0x64	; 100
    1a5c:	48 9f       	mul	r20, r24
    1a5e:	90 01       	movw	r18, r0
    1a60:	49 9f       	mul	r20, r25
    1a62:	30 0d       	add	r19, r0
    1a64:	11 24       	eor	r1, r1
    1a66:	cf 01       	movw	r24, r30
    1a68:	82 1b       	sub	r24, r18
    1a6a:	93 0b       	sbc	r25, r19
    1a6c:	9c 01       	movw	r18, r24
    1a6e:	ad ec       	ldi	r26, 0xCD	; 205
    1a70:	bc ec       	ldi	r27, 0xCC	; 204
    1a72:	57 d3       	rcall	.+1710   	; 0x2122 <__umulhisi3>
    1a74:	96 95       	lsr	r25
    1a76:	87 95       	ror	r24
    1a78:	96 95       	lsr	r25
    1a7a:	87 95       	ror	r24
    1a7c:	96 95       	lsr	r25
    1a7e:	87 95       	ror	r24
    1a80:	80 5d       	subi	r24, 0xD0	; 208
    1a82:	8b 83       	std	Y+3, r24	; 0x03
    1a84:	9f 01       	movw	r18, r30
    1a86:	36 95       	lsr	r19
    1a88:	27 95       	ror	r18
    1a8a:	36 95       	lsr	r19
    1a8c:	27 95       	ror	r18
    1a8e:	36 95       	lsr	r19
    1a90:	27 95       	ror	r18
    1a92:	a5 ec       	ldi	r26, 0xC5	; 197
    1a94:	b0 e2       	ldi	r27, 0x20	; 32
    1a96:	45 d3       	rcall	.+1674   	; 0x2122 <__umulhisi3>
    1a98:	92 95       	swap	r25
    1a9a:	82 95       	swap	r24
    1a9c:	8f 70       	andi	r24, 0x0F	; 15
    1a9e:	89 27       	eor	r24, r25
    1aa0:	9f 70       	andi	r25, 0x0F	; 15
    1aa2:	89 27       	eor	r24, r25
    1aa4:	48 ee       	ldi	r20, 0xE8	; 232
    1aa6:	53 e0       	ldi	r21, 0x03	; 3
    1aa8:	84 9f       	mul	r24, r20
    1aaa:	90 01       	movw	r18, r0
    1aac:	85 9f       	mul	r24, r21
    1aae:	30 0d       	add	r19, r0
    1ab0:	94 9f       	mul	r25, r20
    1ab2:	30 0d       	add	r19, r0
    1ab4:	11 24       	eor	r1, r1
    1ab6:	cf 01       	movw	r24, r30
    1ab8:	82 1b       	sub	r24, r18
    1aba:	93 0b       	sbc	r25, r19
    1abc:	9c 01       	movw	r18, r24
    1abe:	36 95       	lsr	r19
    1ac0:	27 95       	ror	r18
    1ac2:	36 95       	lsr	r19
    1ac4:	27 95       	ror	r18
    1ac6:	ab e7       	ldi	r26, 0x7B	; 123
    1ac8:	b4 e1       	ldi	r27, 0x14	; 20
    1aca:	2b d3       	rcall	.+1622   	; 0x2122 <__umulhisi3>
    1acc:	96 95       	lsr	r25
    1ace:	87 95       	ror	r24
    1ad0:	80 5d       	subi	r24, 0xD0	; 208
    1ad2:	8a 83       	std	Y+2, r24	; 0x02
    1ad4:	af 01       	movw	r20, r30
    1ad6:	52 95       	swap	r21
    1ad8:	42 95       	swap	r20
    1ada:	4f 70       	andi	r20, 0x0F	; 15
    1adc:	45 27       	eor	r20, r21
    1ade:	5f 70       	andi	r21, 0x0F	; 15
    1ae0:	45 27       	eor	r20, r21
    1ae2:	9a 01       	movw	r18, r20
    1ae4:	a7 e4       	ldi	r26, 0x47	; 71
    1ae6:	b3 e0       	ldi	r27, 0x03	; 3
    1ae8:	1c d3       	rcall	.+1592   	; 0x2122 <__umulhisi3>
    1aea:	96 95       	lsr	r25
    1aec:	87 95       	ror	r24
    1aee:	96 95       	lsr	r25
    1af0:	87 95       	ror	r24
    1af2:	96 95       	lsr	r25
    1af4:	87 95       	ror	r24
    1af6:	60 e1       	ldi	r22, 0x10	; 16
    1af8:	77 e2       	ldi	r23, 0x27	; 39
    1afa:	86 9f       	mul	r24, r22
    1afc:	90 01       	movw	r18, r0
    1afe:	87 9f       	mul	r24, r23
    1b00:	30 0d       	add	r19, r0
    1b02:	96 9f       	mul	r25, r22
    1b04:	30 0d       	add	r19, r0
    1b06:	11 24       	eor	r1, r1
    1b08:	cf 01       	movw	r24, r30
    1b0a:	82 1b       	sub	r24, r18
    1b0c:	93 0b       	sbc	r25, r19
    1b0e:	9c 01       	movw	r18, r24
    1b10:	36 95       	lsr	r19
    1b12:	27 95       	ror	r18
    1b14:	36 95       	lsr	r19
    1b16:	27 95       	ror	r18
    1b18:	36 95       	lsr	r19
    1b1a:	27 95       	ror	r18
    1b1c:	a5 ec       	ldi	r26, 0xC5	; 197
    1b1e:	b0 e2       	ldi	r27, 0x20	; 32
    1b20:	00 d3       	rcall	.+1536   	; 0x2122 <__umulhisi3>
    1b22:	92 95       	swap	r25
    1b24:	82 95       	swap	r24
    1b26:	8f 70       	andi	r24, 0x0F	; 15
    1b28:	89 27       	eor	r24, r25
    1b2a:	9f 70       	andi	r25, 0x0F	; 15
    1b2c:	89 27       	eor	r24, r25
    1b2e:	80 5d       	subi	r24, 0xD0	; 208
    1b30:	89 83       	std	Y+1, r24	; 0x01
    1b32:	9a 01       	movw	r18, r20
    1b34:	a7 e4       	ldi	r26, 0x47	; 71
    1b36:	b3 e0       	ldi	r27, 0x03	; 3
    1b38:	f4 d2       	rcall	.+1512   	; 0x2122 <__umulhisi3>
    1b3a:	96 95       	lsr	r25
    1b3c:	87 95       	ror	r24
    1b3e:	96 95       	lsr	r25
    1b40:	87 95       	ror	r24
    1b42:	96 95       	lsr	r25
    1b44:	87 95       	ror	r24
    1b46:	80 5d       	subi	r24, 0xD0	; 208
    1b48:	88 83       	st	Y, r24
    1b4a:	df 91       	pop	r29
    1b4c:	cf 91       	pop	r28
    1b4e:	08 95       	ret

00001b50 <__vector_27>:
    1b50:	1f 92       	push	r1
    1b52:	0f 92       	push	r0
    1b54:	0f b6       	in	r0, 0x3f	; 63
    1b56:	0f 92       	push	r0
    1b58:	11 24       	eor	r1, r1
    1b5a:	0b b6       	in	r0, 0x3b	; 59
    1b5c:	0f 92       	push	r0
    1b5e:	2f 93       	push	r18
    1b60:	3f 93       	push	r19
    1b62:	8f 93       	push	r24
    1b64:	9f 93       	push	r25
    1b66:	ef 93       	push	r30
    1b68:	ff 93       	push	r31
    1b6a:	80 91 84 03 	lds	r24, 0x0384	; 0x800384 <serialReadPos>
    1b6e:	90 91 85 03 	lds	r25, 0x0385	; 0x800385 <serialReadPos+0x1>
    1b72:	20 91 82 03 	lds	r18, 0x0382	; 0x800382 <serialWritePos>
    1b76:	30 91 83 03 	lds	r19, 0x0383	; 0x800383 <serialWritePos+0x1>
    1b7a:	82 17       	cp	r24, r18
    1b7c:	93 07       	cpc	r25, r19
    1b7e:	b9 f0       	breq	.+46     	; 0x1bae <__vector_27+0x5e>
    1b80:	fc 01       	movw	r30, r24
    1b82:	e2 57       	subi	r30, 0x72	; 114
    1b84:	f9 4f       	sbci	r31, 0xF9	; 249
    1b86:	80 81       	ld	r24, Z
    1b88:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7000c6>
    1b8c:	80 91 84 03 	lds	r24, 0x0384	; 0x800384 <serialReadPos>
    1b90:	90 91 85 03 	lds	r25, 0x0385	; 0x800385 <serialReadPos+0x1>
    1b94:	01 96       	adiw	r24, 0x01	; 1
    1b96:	80 38       	cpi	r24, 0x80	; 128
    1b98:	91 05       	cpc	r25, r1
    1b9a:	2c f4       	brge	.+10     	; 0x1ba6 <__vector_27+0x56>
    1b9c:	90 93 85 03 	sts	0x0385, r25	; 0x800385 <serialReadPos+0x1>
    1ba0:	80 93 84 03 	sts	0x0384, r24	; 0x800384 <serialReadPos>
    1ba4:	04 c0       	rjmp	.+8      	; 0x1bae <__vector_27+0x5e>
    1ba6:	10 92 85 03 	sts	0x0385, r1	; 0x800385 <serialReadPos+0x1>
    1baa:	10 92 84 03 	sts	0x0384, r1	; 0x800384 <serialReadPos>
    1bae:	ff 91       	pop	r31
    1bb0:	ef 91       	pop	r30
    1bb2:	9f 91       	pop	r25
    1bb4:	8f 91       	pop	r24
    1bb6:	3f 91       	pop	r19
    1bb8:	2f 91       	pop	r18
    1bba:	0f 90       	pop	r0
    1bbc:	0b be       	out	0x3b, r0	; 59
    1bbe:	0f 90       	pop	r0
    1bc0:	0f be       	out	0x3f, r0	; 63
    1bc2:	0f 90       	pop	r0
    1bc4:	1f 90       	pop	r1
    1bc6:	18 95       	reti

00001bc8 <__vector_36>:
    1bc8:	1f 92       	push	r1
    1bca:	0f 92       	push	r0
    1bcc:	0f b6       	in	r0, 0x3f	; 63
    1bce:	0f 92       	push	r0
    1bd0:	11 24       	eor	r1, r1
    1bd2:	0b b6       	in	r0, 0x3b	; 59
    1bd4:	0f 92       	push	r0
    1bd6:	8f 93       	push	r24
    1bd8:	9f 93       	push	r25
    1bda:	ef 93       	push	r30
    1bdc:	ff 93       	push	r31
    1bde:	80 91 80 03 	lds	r24, 0x0380	; 0x800380 <rxWritePosition>
    1be2:	90 91 ce 00 	lds	r25, 0x00CE	; 0x8000ce <__TEXT_REGION_LENGTH__+0x7000ce>
    1be6:	e8 2f       	mov	r30, r24
    1be8:	f0 e0       	ldi	r31, 0x00	; 0
    1bea:	e2 5f       	subi	r30, 0xF2	; 242
    1bec:	f8 4f       	sbci	r31, 0xF8	; 248
    1bee:	90 83       	st	Z, r25
    1bf0:	8f 5f       	subi	r24, 0xFF	; 255
    1bf2:	1a f0       	brmi	.+6      	; 0x1bfa <__vector_36+0x32>
    1bf4:	80 93 80 03 	sts	0x0380, r24	; 0x800380 <rxWritePosition>
    1bf8:	02 c0       	rjmp	.+4      	; 0x1bfe <__vector_36+0x36>
    1bfa:	10 92 80 03 	sts	0x0380, r1	; 0x800380 <rxWritePosition>
    1bfe:	ff 91       	pop	r31
    1c00:	ef 91       	pop	r30
    1c02:	9f 91       	pop	r25
    1c04:	8f 91       	pop	r24
    1c06:	0f 90       	pop	r0
    1c08:	0b be       	out	0x3b, r0	; 59
    1c0a:	0f 90       	pop	r0
    1c0c:	0f be       	out	0x3f, r0	; 63
    1c0e:	0f 90       	pop	r0
    1c10:	1f 90       	pop	r1
    1c12:	18 95       	reti

00001c14 <appendSerial0>:
    1c14:	20 91 82 03 	lds	r18, 0x0382	; 0x800382 <serialWritePos>
    1c18:	30 91 83 03 	lds	r19, 0x0383	; 0x800383 <serialWritePos+0x1>
    1c1c:	f9 01       	movw	r30, r18
    1c1e:	e2 57       	subi	r30, 0x72	; 114
    1c20:	f9 4f       	sbci	r31, 0xF9	; 249
    1c22:	80 83       	st	Z, r24
    1c24:	2f 5f       	subi	r18, 0xFF	; 255
    1c26:	3f 4f       	sbci	r19, 0xFF	; 255
    1c28:	20 38       	cpi	r18, 0x80	; 128
    1c2a:	31 05       	cpc	r19, r1
    1c2c:	2c f4       	brge	.+10     	; 0x1c38 <appendSerial0+0x24>
    1c2e:	30 93 83 03 	sts	0x0383, r19	; 0x800383 <serialWritePos+0x1>
    1c32:	20 93 82 03 	sts	0x0382, r18	; 0x800382 <serialWritePos>
    1c36:	08 95       	ret
    1c38:	10 92 83 03 	sts	0x0383, r1	; 0x800383 <serialWritePos+0x1>
    1c3c:	10 92 82 03 	sts	0x0382, r1	; 0x800382 <serialWritePos>
    1c40:	08 95       	ret

00001c42 <serialWrite0>:
    1c42:	0f 93       	push	r16
    1c44:	1f 93       	push	r17
    1c46:	cf 93       	push	r28
    1c48:	df 93       	push	r29
    1c4a:	ec 01       	movw	r28, r24
    1c4c:	8c 01       	movw	r16, r24
    1c4e:	06 5f       	subi	r16, 0xF6	; 246
    1c50:	1f 4f       	sbci	r17, 0xFF	; 255
    1c52:	89 91       	ld	r24, Y+
    1c54:	df df       	rcall	.-66     	; 0x1c14 <appendSerial0>
    1c56:	c0 17       	cp	r28, r16
    1c58:	d1 07       	cpc	r29, r17
    1c5a:	d9 f7       	brne	.-10     	; 0x1c52 <serialWrite0+0x10>
    1c5c:	80 91 c0 00 	lds	r24, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7000c0>
    1c60:	85 fd       	sbrc	r24, 5
    1c62:	10 92 c6 00 	sts	0x00C6, r1	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7000c6>
    1c66:	df 91       	pop	r29
    1c68:	cf 91       	pop	r28
    1c6a:	1f 91       	pop	r17
    1c6c:	0f 91       	pop	r16
    1c6e:	08 95       	ret

00001c70 <serialInit0>:
    1c70:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7000c5>
    1c74:	80 e1       	ldi	r24, 0x10	; 16
    1c76:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7000c4>
    1c7a:	10 92 cd 00 	sts	0x00CD, r1	; 0x8000cd <__TEXT_REGION_LENGTH__+0x7000cd>
    1c7e:	8f e1       	ldi	r24, 0x1F	; 31
    1c80:	80 93 cc 00 	sts	0x00CC, r24	; 0x8000cc <__TEXT_REGION_LENGTH__+0x7000cc>
    1c84:	88 e4       	ldi	r24, 0x48	; 72
    1c86:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7000c1>
    1c8a:	86 e0       	ldi	r24, 0x06	; 6
    1c8c:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7000c2>
    1c90:	90 e9       	ldi	r25, 0x90	; 144
    1c92:	90 93 c9 00 	sts	0x00C9, r25	; 0x8000c9 <__TEXT_REGION_LENGTH__+0x7000c9>
    1c96:	80 93 ca 00 	sts	0x00CA, r24	; 0x8000ca <__TEXT_REGION_LENGTH__+0x7000ca>
    1c9a:	08 95       	ret

00001c9c <getChar>:
    1c9c:	90 91 81 03 	lds	r25, 0x0381	; 0x800381 <rxReadPosition>
    1ca0:	80 91 80 03 	lds	r24, 0x0380	; 0x800380 <rxWritePosition>
    1ca4:	98 17       	cp	r25, r24
    1ca6:	69 f0       	breq	.+26     	; 0x1cc2 <getChar+0x26>
    1ca8:	e9 2f       	mov	r30, r25
    1caa:	f0 e0       	ldi	r31, 0x00	; 0
    1cac:	e2 5f       	subi	r30, 0xF2	; 242
    1cae:	f8 4f       	sbci	r31, 0xF8	; 248
    1cb0:	80 81       	ld	r24, Z
    1cb2:	9f 5f       	subi	r25, 0xFF	; 255
    1cb4:	1a f0       	brmi	.+6      	; 0x1cbc <getChar+0x20>
    1cb6:	90 93 81 03 	sts	0x0381, r25	; 0x800381 <rxReadPosition>
    1cba:	08 95       	ret
    1cbc:	10 92 81 03 	sts	0x0381, r1	; 0x800381 <rxReadPosition>
    1cc0:	08 95       	ret
    1cc2:	80 e0       	ldi	r24, 0x00	; 0
    1cc4:	08 95       	ret

00001cc6 <trackControl>:
    1cc6:	cf 93       	push	r28
    1cc8:	df 93       	push	r29
    1cca:	cd b7       	in	r28, 0x3d	; 61
    1ccc:	de b7       	in	r29, 0x3e	; 62
    1cce:	2a 97       	sbiw	r28, 0x0a	; 10
    1cd0:	0f b6       	in	r0, 0x3f	; 63
    1cd2:	f8 94       	cli
    1cd4:	de bf       	out	0x3e, r29	; 62
    1cd6:	0f be       	out	0x3f, r0	; 63
    1cd8:	cd bf       	out	0x3d, r28	; 61
    1cda:	90 ef       	ldi	r25, 0xF0	; 240
    1cdc:	99 83       	std	Y+1, r25	; 0x01
    1cde:	9a ea       	ldi	r25, 0xAA	; 170
    1ce0:	9a 83       	std	Y+2, r25	; 0x02
    1ce2:	9a e0       	ldi	r25, 0x0A	; 10
    1ce4:	9b 83       	std	Y+3, r25	; 0x03
    1ce6:	93 e0       	ldi	r25, 0x03	; 3
    1ce8:	9c 83       	std	Y+4, r25	; 0x04
    1cea:	2d 83       	std	Y+5, r18	; 0x05
    1cec:	8e 83       	std	Y+6, r24	; 0x06
    1cee:	6f 83       	std	Y+7, r22	; 0x07
    1cf0:	48 87       	std	Y+8, r20	; 0x08
    1cf2:	19 86       	std	Y+9, r1	; 0x09
    1cf4:	85 e5       	ldi	r24, 0x55	; 85
    1cf6:	8a 87       	std	Y+10, r24	; 0x0a
    1cf8:	ce 01       	movw	r24, r28
    1cfa:	01 96       	adiw	r24, 0x01	; 1
    1cfc:	a2 df       	rcall	.-188    	; 0x1c42 <serialWrite0>
    1cfe:	2a 96       	adiw	r28, 0x0a	; 10
    1d00:	0f b6       	in	r0, 0x3f	; 63
    1d02:	f8 94       	cli
    1d04:	de bf       	out	0x3e, r29	; 62
    1d06:	0f be       	out	0x3f, r0	; 63
    1d08:	cd bf       	out	0x3d, r28	; 61
    1d0a:	df 91       	pop	r29
    1d0c:	cf 91       	pop	r28
    1d0e:	08 95       	ret

00001d10 <setOutputVolume>:
    1d10:	cf 93       	push	r28
    1d12:	df 93       	push	r29
    1d14:	cd b7       	in	r28, 0x3d	; 61
    1d16:	de b7       	in	r29, 0x3e	; 62
    1d18:	28 97       	sbiw	r28, 0x08	; 8
    1d1a:	0f b6       	in	r0, 0x3f	; 63
    1d1c:	f8 94       	cli
    1d1e:	de bf       	out	0x3e, r29	; 62
    1d20:	0f be       	out	0x3f, r0	; 63
    1d22:	cd bf       	out	0x3d, r28	; 61
    1d24:	90 ef       	ldi	r25, 0xF0	; 240
    1d26:	99 83       	std	Y+1, r25	; 0x01
    1d28:	9a ea       	ldi	r25, 0xAA	; 170
    1d2a:	9a 83       	std	Y+2, r25	; 0x02
    1d2c:	98 e0       	ldi	r25, 0x08	; 8
    1d2e:	9b 83       	std	Y+3, r25	; 0x03
    1d30:	95 e0       	ldi	r25, 0x05	; 5
    1d32:	9c 83       	std	Y+4, r25	; 0x04
    1d34:	4d 83       	std	Y+5, r20	; 0x05
    1d36:	8e 83       	std	Y+6, r24	; 0x06
    1d38:	6f 83       	std	Y+7, r22	; 0x07
    1d3a:	85 e5       	ldi	r24, 0x55	; 85
    1d3c:	88 87       	std	Y+8, r24	; 0x08
    1d3e:	ce 01       	movw	r24, r28
    1d40:	01 96       	adiw	r24, 0x01	; 1
    1d42:	7f df       	rcall	.-258    	; 0x1c42 <serialWrite0>
    1d44:	28 96       	adiw	r28, 0x08	; 8
    1d46:	0f b6       	in	r0, 0x3f	; 63
    1d48:	f8 94       	cli
    1d4a:	de bf       	out	0x3e, r29	; 62
    1d4c:	0f be       	out	0x3f, r0	; 63
    1d4e:	cd bf       	out	0x3d, r28	; 61
    1d50:	df 91       	pop	r29
    1d52:	cf 91       	pop	r28
    1d54:	08 95       	ret

00001d56 <setTrackVolume>:
    1d56:	cf 93       	push	r28
    1d58:	df 93       	push	r29
    1d5a:	cd b7       	in	r28, 0x3d	; 61
    1d5c:	de b7       	in	r29, 0x3e	; 62
    1d5e:	29 97       	sbiw	r28, 0x09	; 9
    1d60:	0f b6       	in	r0, 0x3f	; 63
    1d62:	f8 94       	cli
    1d64:	de bf       	out	0x3e, r29	; 62
    1d66:	0f be       	out	0x3f, r0	; 63
    1d68:	cd bf       	out	0x3d, r28	; 61
    1d6a:	90 ef       	ldi	r25, 0xF0	; 240
    1d6c:	99 83       	std	Y+1, r25	; 0x01
    1d6e:	9a ea       	ldi	r25, 0xAA	; 170
    1d70:	9a 83       	std	Y+2, r25	; 0x02
    1d72:	99 e0       	ldi	r25, 0x09	; 9
    1d74:	9b 83       	std	Y+3, r25	; 0x03
    1d76:	98 e0       	ldi	r25, 0x08	; 8
    1d78:	9c 83       	std	Y+4, r25	; 0x04
    1d7a:	8d 83       	std	Y+5, r24	; 0x05
    1d7c:	6e 83       	std	Y+6, r22	; 0x06
    1d7e:	4f 83       	std	Y+7, r20	; 0x07
    1d80:	28 87       	std	Y+8, r18	; 0x08
    1d82:	85 e5       	ldi	r24, 0x55	; 85
    1d84:	89 87       	std	Y+9, r24	; 0x09
    1d86:	ce 01       	movw	r24, r28
    1d88:	01 96       	adiw	r24, 0x01	; 1
    1d8a:	5b df       	rcall	.-330    	; 0x1c42 <serialWrite0>
    1d8c:	29 96       	adiw	r28, 0x09	; 9
    1d8e:	0f b6       	in	r0, 0x3f	; 63
    1d90:	f8 94       	cli
    1d92:	de bf       	out	0x3e, r29	; 62
    1d94:	0f be       	out	0x3f, r0	; 63
    1d96:	cd bf       	out	0x3d, r28	; 61
    1d98:	df 91       	pop	r29
    1d9a:	cf 91       	pop	r28
    1d9c:	08 95       	ret

00001d9e <outputSampleRate>:
    1d9e:	cf 93       	push	r28
    1da0:	df 93       	push	r29
    1da2:	cd b7       	in	r28, 0x3d	; 61
    1da4:	de b7       	in	r29, 0x3e	; 62
    1da6:	28 97       	sbiw	r28, 0x08	; 8
    1da8:	0f b6       	in	r0, 0x3f	; 63
    1daa:	f8 94       	cli
    1dac:	de bf       	out	0x3e, r29	; 62
    1dae:	0f be       	out	0x3f, r0	; 63
    1db0:	cd bf       	out	0x3d, r28	; 61
    1db2:	90 ef       	ldi	r25, 0xF0	; 240
    1db4:	99 83       	std	Y+1, r25	; 0x01
    1db6:	9a ea       	ldi	r25, 0xAA	; 170
    1db8:	9a 83       	std	Y+2, r25	; 0x02
    1dba:	98 e0       	ldi	r25, 0x08	; 8
    1dbc:	9b 83       	std	Y+3, r25	; 0x03
    1dbe:	9c e0       	ldi	r25, 0x0C	; 12
    1dc0:	9c 83       	std	Y+4, r25	; 0x04
    1dc2:	8d 83       	std	Y+5, r24	; 0x05
    1dc4:	6e 83       	std	Y+6, r22	; 0x06
    1dc6:	4f 83       	std	Y+7, r20	; 0x07
    1dc8:	85 e5       	ldi	r24, 0x55	; 85
    1dca:	88 87       	std	Y+8, r24	; 0x08
    1dcc:	ce 01       	movw	r24, r28
    1dce:	01 96       	adiw	r24, 0x01	; 1
    1dd0:	38 df       	rcall	.-400    	; 0x1c42 <serialWrite0>
    1dd2:	28 96       	adiw	r28, 0x08	; 8
    1dd4:	0f b6       	in	r0, 0x3f	; 63
    1dd6:	f8 94       	cli
    1dd8:	de bf       	out	0x3e, r29	; 62
    1dda:	0f be       	out	0x3f, r0	; 63
    1ddc:	cd bf       	out	0x3d, r28	; 61
    1dde:	df 91       	pop	r29
    1de0:	cf 91       	pop	r28
    1de2:	08 95       	ret

00001de4 <__subsf3>:
    1de4:	50 58       	subi	r21, 0x80	; 128

00001de6 <__addsf3>:
    1de6:	bb 27       	eor	r27, r27
    1de8:	aa 27       	eor	r26, r26
    1dea:	0e d0       	rcall	.+28     	; 0x1e08 <__addsf3x>
    1dec:	4d c1       	rjmp	.+666    	; 0x2088 <__fp_round>
    1dee:	3e d1       	rcall	.+636    	; 0x206c <__fp_pscA>
    1df0:	30 f0       	brcs	.+12     	; 0x1dfe <__addsf3+0x18>
    1df2:	43 d1       	rcall	.+646    	; 0x207a <__fp_pscB>
    1df4:	20 f0       	brcs	.+8      	; 0x1dfe <__addsf3+0x18>
    1df6:	31 f4       	brne	.+12     	; 0x1e04 <__addsf3+0x1e>
    1df8:	9f 3f       	cpi	r25, 0xFF	; 255
    1dfa:	11 f4       	brne	.+4      	; 0x1e00 <__addsf3+0x1a>
    1dfc:	1e f4       	brtc	.+6      	; 0x1e04 <__addsf3+0x1e>
    1dfe:	33 c1       	rjmp	.+614    	; 0x2066 <__fp_nan>
    1e00:	0e f4       	brtc	.+2      	; 0x1e04 <__addsf3+0x1e>
    1e02:	e0 95       	com	r30
    1e04:	e7 fb       	bst	r30, 7
    1e06:	29 c1       	rjmp	.+594    	; 0x205a <__fp_inf>

00001e08 <__addsf3x>:
    1e08:	e9 2f       	mov	r30, r25
    1e0a:	4f d1       	rcall	.+670    	; 0x20aa <__fp_split3>
    1e0c:	80 f3       	brcs	.-32     	; 0x1dee <__addsf3+0x8>
    1e0e:	ba 17       	cp	r27, r26
    1e10:	62 07       	cpc	r22, r18
    1e12:	73 07       	cpc	r23, r19
    1e14:	84 07       	cpc	r24, r20
    1e16:	95 07       	cpc	r25, r21
    1e18:	18 f0       	brcs	.+6      	; 0x1e20 <__addsf3x+0x18>
    1e1a:	71 f4       	brne	.+28     	; 0x1e38 <__addsf3x+0x30>
    1e1c:	9e f5       	brtc	.+102    	; 0x1e84 <__addsf3x+0x7c>
    1e1e:	67 c1       	rjmp	.+718    	; 0x20ee <__fp_zero>
    1e20:	0e f4       	brtc	.+2      	; 0x1e24 <__addsf3x+0x1c>
    1e22:	e0 95       	com	r30
    1e24:	0b 2e       	mov	r0, r27
    1e26:	ba 2f       	mov	r27, r26
    1e28:	a0 2d       	mov	r26, r0
    1e2a:	0b 01       	movw	r0, r22
    1e2c:	b9 01       	movw	r22, r18
    1e2e:	90 01       	movw	r18, r0
    1e30:	0c 01       	movw	r0, r24
    1e32:	ca 01       	movw	r24, r20
    1e34:	a0 01       	movw	r20, r0
    1e36:	11 24       	eor	r1, r1
    1e38:	ff 27       	eor	r31, r31
    1e3a:	59 1b       	sub	r21, r25
    1e3c:	99 f0       	breq	.+38     	; 0x1e64 <__addsf3x+0x5c>
    1e3e:	59 3f       	cpi	r21, 0xF9	; 249
    1e40:	50 f4       	brcc	.+20     	; 0x1e56 <__addsf3x+0x4e>
    1e42:	50 3e       	cpi	r21, 0xE0	; 224
    1e44:	68 f1       	brcs	.+90     	; 0x1ea0 <__addsf3x+0x98>
    1e46:	1a 16       	cp	r1, r26
    1e48:	f0 40       	sbci	r31, 0x00	; 0
    1e4a:	a2 2f       	mov	r26, r18
    1e4c:	23 2f       	mov	r18, r19
    1e4e:	34 2f       	mov	r19, r20
    1e50:	44 27       	eor	r20, r20
    1e52:	58 5f       	subi	r21, 0xF8	; 248
    1e54:	f3 cf       	rjmp	.-26     	; 0x1e3c <__addsf3x+0x34>
    1e56:	46 95       	lsr	r20
    1e58:	37 95       	ror	r19
    1e5a:	27 95       	ror	r18
    1e5c:	a7 95       	ror	r26
    1e5e:	f0 40       	sbci	r31, 0x00	; 0
    1e60:	53 95       	inc	r21
    1e62:	c9 f7       	brne	.-14     	; 0x1e56 <__addsf3x+0x4e>
    1e64:	7e f4       	brtc	.+30     	; 0x1e84 <__addsf3x+0x7c>
    1e66:	1f 16       	cp	r1, r31
    1e68:	ba 0b       	sbc	r27, r26
    1e6a:	62 0b       	sbc	r22, r18
    1e6c:	73 0b       	sbc	r23, r19
    1e6e:	84 0b       	sbc	r24, r20
    1e70:	ba f0       	brmi	.+46     	; 0x1ea0 <__addsf3x+0x98>
    1e72:	91 50       	subi	r25, 0x01	; 1
    1e74:	a1 f0       	breq	.+40     	; 0x1e9e <__addsf3x+0x96>
    1e76:	ff 0f       	add	r31, r31
    1e78:	bb 1f       	adc	r27, r27
    1e7a:	66 1f       	adc	r22, r22
    1e7c:	77 1f       	adc	r23, r23
    1e7e:	88 1f       	adc	r24, r24
    1e80:	c2 f7       	brpl	.-16     	; 0x1e72 <__addsf3x+0x6a>
    1e82:	0e c0       	rjmp	.+28     	; 0x1ea0 <__addsf3x+0x98>
    1e84:	ba 0f       	add	r27, r26
    1e86:	62 1f       	adc	r22, r18
    1e88:	73 1f       	adc	r23, r19
    1e8a:	84 1f       	adc	r24, r20
    1e8c:	48 f4       	brcc	.+18     	; 0x1ea0 <__addsf3x+0x98>
    1e8e:	87 95       	ror	r24
    1e90:	77 95       	ror	r23
    1e92:	67 95       	ror	r22
    1e94:	b7 95       	ror	r27
    1e96:	f7 95       	ror	r31
    1e98:	9e 3f       	cpi	r25, 0xFE	; 254
    1e9a:	08 f0       	brcs	.+2      	; 0x1e9e <__addsf3x+0x96>
    1e9c:	b3 cf       	rjmp	.-154    	; 0x1e04 <__addsf3+0x1e>
    1e9e:	93 95       	inc	r25
    1ea0:	88 0f       	add	r24, r24
    1ea2:	08 f0       	brcs	.+2      	; 0x1ea6 <__addsf3x+0x9e>
    1ea4:	99 27       	eor	r25, r25
    1ea6:	ee 0f       	add	r30, r30
    1ea8:	97 95       	ror	r25
    1eaa:	87 95       	ror	r24
    1eac:	08 95       	ret

00001eae <__divsf3>:
    1eae:	0c d0       	rcall	.+24     	; 0x1ec8 <__divsf3x>
    1eb0:	eb c0       	rjmp	.+470    	; 0x2088 <__fp_round>
    1eb2:	e3 d0       	rcall	.+454    	; 0x207a <__fp_pscB>
    1eb4:	40 f0       	brcs	.+16     	; 0x1ec6 <__divsf3+0x18>
    1eb6:	da d0       	rcall	.+436    	; 0x206c <__fp_pscA>
    1eb8:	30 f0       	brcs	.+12     	; 0x1ec6 <__divsf3+0x18>
    1eba:	21 f4       	brne	.+8      	; 0x1ec4 <__divsf3+0x16>
    1ebc:	5f 3f       	cpi	r21, 0xFF	; 255
    1ebe:	19 f0       	breq	.+6      	; 0x1ec6 <__divsf3+0x18>
    1ec0:	cc c0       	rjmp	.+408    	; 0x205a <__fp_inf>
    1ec2:	51 11       	cpse	r21, r1
    1ec4:	15 c1       	rjmp	.+554    	; 0x20f0 <__fp_szero>
    1ec6:	cf c0       	rjmp	.+414    	; 0x2066 <__fp_nan>

00001ec8 <__divsf3x>:
    1ec8:	f0 d0       	rcall	.+480    	; 0x20aa <__fp_split3>
    1eca:	98 f3       	brcs	.-26     	; 0x1eb2 <__divsf3+0x4>

00001ecc <__divsf3_pse>:
    1ecc:	99 23       	and	r25, r25
    1ece:	c9 f3       	breq	.-14     	; 0x1ec2 <__divsf3+0x14>
    1ed0:	55 23       	and	r21, r21
    1ed2:	b1 f3       	breq	.-20     	; 0x1ec0 <__divsf3+0x12>
    1ed4:	95 1b       	sub	r25, r21
    1ed6:	55 0b       	sbc	r21, r21
    1ed8:	bb 27       	eor	r27, r27
    1eda:	aa 27       	eor	r26, r26
    1edc:	62 17       	cp	r22, r18
    1ede:	73 07       	cpc	r23, r19
    1ee0:	84 07       	cpc	r24, r20
    1ee2:	38 f0       	brcs	.+14     	; 0x1ef2 <__divsf3_pse+0x26>
    1ee4:	9f 5f       	subi	r25, 0xFF	; 255
    1ee6:	5f 4f       	sbci	r21, 0xFF	; 255
    1ee8:	22 0f       	add	r18, r18
    1eea:	33 1f       	adc	r19, r19
    1eec:	44 1f       	adc	r20, r20
    1eee:	aa 1f       	adc	r26, r26
    1ef0:	a9 f3       	breq	.-22     	; 0x1edc <__divsf3_pse+0x10>
    1ef2:	33 d0       	rcall	.+102    	; 0x1f5a <__divsf3_pse+0x8e>
    1ef4:	0e 2e       	mov	r0, r30
    1ef6:	3a f0       	brmi	.+14     	; 0x1f06 <__divsf3_pse+0x3a>
    1ef8:	e0 e8       	ldi	r30, 0x80	; 128
    1efa:	30 d0       	rcall	.+96     	; 0x1f5c <__divsf3_pse+0x90>
    1efc:	91 50       	subi	r25, 0x01	; 1
    1efe:	50 40       	sbci	r21, 0x00	; 0
    1f00:	e6 95       	lsr	r30
    1f02:	00 1c       	adc	r0, r0
    1f04:	ca f7       	brpl	.-14     	; 0x1ef8 <__divsf3_pse+0x2c>
    1f06:	29 d0       	rcall	.+82     	; 0x1f5a <__divsf3_pse+0x8e>
    1f08:	fe 2f       	mov	r31, r30
    1f0a:	27 d0       	rcall	.+78     	; 0x1f5a <__divsf3_pse+0x8e>
    1f0c:	66 0f       	add	r22, r22
    1f0e:	77 1f       	adc	r23, r23
    1f10:	88 1f       	adc	r24, r24
    1f12:	bb 1f       	adc	r27, r27
    1f14:	26 17       	cp	r18, r22
    1f16:	37 07       	cpc	r19, r23
    1f18:	48 07       	cpc	r20, r24
    1f1a:	ab 07       	cpc	r26, r27
    1f1c:	b0 e8       	ldi	r27, 0x80	; 128
    1f1e:	09 f0       	breq	.+2      	; 0x1f22 <__divsf3_pse+0x56>
    1f20:	bb 0b       	sbc	r27, r27
    1f22:	80 2d       	mov	r24, r0
    1f24:	bf 01       	movw	r22, r30
    1f26:	ff 27       	eor	r31, r31
    1f28:	93 58       	subi	r25, 0x83	; 131
    1f2a:	5f 4f       	sbci	r21, 0xFF	; 255
    1f2c:	2a f0       	brmi	.+10     	; 0x1f38 <__divsf3_pse+0x6c>
    1f2e:	9e 3f       	cpi	r25, 0xFE	; 254
    1f30:	51 05       	cpc	r21, r1
    1f32:	68 f0       	brcs	.+26     	; 0x1f4e <__divsf3_pse+0x82>
    1f34:	92 c0       	rjmp	.+292    	; 0x205a <__fp_inf>
    1f36:	dc c0       	rjmp	.+440    	; 0x20f0 <__fp_szero>
    1f38:	5f 3f       	cpi	r21, 0xFF	; 255
    1f3a:	ec f3       	brlt	.-6      	; 0x1f36 <__divsf3_pse+0x6a>
    1f3c:	98 3e       	cpi	r25, 0xE8	; 232
    1f3e:	dc f3       	brlt	.-10     	; 0x1f36 <__divsf3_pse+0x6a>
    1f40:	86 95       	lsr	r24
    1f42:	77 95       	ror	r23
    1f44:	67 95       	ror	r22
    1f46:	b7 95       	ror	r27
    1f48:	f7 95       	ror	r31
    1f4a:	9f 5f       	subi	r25, 0xFF	; 255
    1f4c:	c9 f7       	brne	.-14     	; 0x1f40 <__divsf3_pse+0x74>
    1f4e:	88 0f       	add	r24, r24
    1f50:	91 1d       	adc	r25, r1
    1f52:	96 95       	lsr	r25
    1f54:	87 95       	ror	r24
    1f56:	97 f9       	bld	r25, 7
    1f58:	08 95       	ret
    1f5a:	e1 e0       	ldi	r30, 0x01	; 1
    1f5c:	66 0f       	add	r22, r22
    1f5e:	77 1f       	adc	r23, r23
    1f60:	88 1f       	adc	r24, r24
    1f62:	bb 1f       	adc	r27, r27
    1f64:	62 17       	cp	r22, r18
    1f66:	73 07       	cpc	r23, r19
    1f68:	84 07       	cpc	r24, r20
    1f6a:	ba 07       	cpc	r27, r26
    1f6c:	20 f0       	brcs	.+8      	; 0x1f76 <__divsf3_pse+0xaa>
    1f6e:	62 1b       	sub	r22, r18
    1f70:	73 0b       	sbc	r23, r19
    1f72:	84 0b       	sbc	r24, r20
    1f74:	ba 0b       	sbc	r27, r26
    1f76:	ee 1f       	adc	r30, r30
    1f78:	88 f7       	brcc	.-30     	; 0x1f5c <__divsf3_pse+0x90>
    1f7a:	e0 95       	com	r30
    1f7c:	08 95       	ret

00001f7e <__fixsfsi>:
    1f7e:	04 d0       	rcall	.+8      	; 0x1f88 <__fixunssfsi>
    1f80:	68 94       	set
    1f82:	b1 11       	cpse	r27, r1
    1f84:	b5 c0       	rjmp	.+362    	; 0x20f0 <__fp_szero>
    1f86:	08 95       	ret

00001f88 <__fixunssfsi>:
    1f88:	98 d0       	rcall	.+304    	; 0x20ba <__fp_splitA>
    1f8a:	88 f0       	brcs	.+34     	; 0x1fae <__fixunssfsi+0x26>
    1f8c:	9f 57       	subi	r25, 0x7F	; 127
    1f8e:	90 f0       	brcs	.+36     	; 0x1fb4 <__fixunssfsi+0x2c>
    1f90:	b9 2f       	mov	r27, r25
    1f92:	99 27       	eor	r25, r25
    1f94:	b7 51       	subi	r27, 0x17	; 23
    1f96:	a0 f0       	brcs	.+40     	; 0x1fc0 <__fixunssfsi+0x38>
    1f98:	d1 f0       	breq	.+52     	; 0x1fce <__fixunssfsi+0x46>
    1f9a:	66 0f       	add	r22, r22
    1f9c:	77 1f       	adc	r23, r23
    1f9e:	88 1f       	adc	r24, r24
    1fa0:	99 1f       	adc	r25, r25
    1fa2:	1a f0       	brmi	.+6      	; 0x1faa <__fixunssfsi+0x22>
    1fa4:	ba 95       	dec	r27
    1fa6:	c9 f7       	brne	.-14     	; 0x1f9a <__fixunssfsi+0x12>
    1fa8:	12 c0       	rjmp	.+36     	; 0x1fce <__fixunssfsi+0x46>
    1faa:	b1 30       	cpi	r27, 0x01	; 1
    1fac:	81 f0       	breq	.+32     	; 0x1fce <__fixunssfsi+0x46>
    1fae:	9f d0       	rcall	.+318    	; 0x20ee <__fp_zero>
    1fb0:	b1 e0       	ldi	r27, 0x01	; 1
    1fb2:	08 95       	ret
    1fb4:	9c c0       	rjmp	.+312    	; 0x20ee <__fp_zero>
    1fb6:	67 2f       	mov	r22, r23
    1fb8:	78 2f       	mov	r23, r24
    1fba:	88 27       	eor	r24, r24
    1fbc:	b8 5f       	subi	r27, 0xF8	; 248
    1fbe:	39 f0       	breq	.+14     	; 0x1fce <__fixunssfsi+0x46>
    1fc0:	b9 3f       	cpi	r27, 0xF9	; 249
    1fc2:	cc f3       	brlt	.-14     	; 0x1fb6 <__fixunssfsi+0x2e>
    1fc4:	86 95       	lsr	r24
    1fc6:	77 95       	ror	r23
    1fc8:	67 95       	ror	r22
    1fca:	b3 95       	inc	r27
    1fcc:	d9 f7       	brne	.-10     	; 0x1fc4 <__fixunssfsi+0x3c>
    1fce:	3e f4       	brtc	.+14     	; 0x1fde <__fixunssfsi+0x56>
    1fd0:	90 95       	com	r25
    1fd2:	80 95       	com	r24
    1fd4:	70 95       	com	r23
    1fd6:	61 95       	neg	r22
    1fd8:	7f 4f       	sbci	r23, 0xFF	; 255
    1fda:	8f 4f       	sbci	r24, 0xFF	; 255
    1fdc:	9f 4f       	sbci	r25, 0xFF	; 255
    1fde:	08 95       	ret

00001fe0 <__floatunsisf>:
    1fe0:	e8 94       	clt
    1fe2:	09 c0       	rjmp	.+18     	; 0x1ff6 <__floatsisf+0x12>

00001fe4 <__floatsisf>:
    1fe4:	97 fb       	bst	r25, 7
    1fe6:	3e f4       	brtc	.+14     	; 0x1ff6 <__floatsisf+0x12>
    1fe8:	90 95       	com	r25
    1fea:	80 95       	com	r24
    1fec:	70 95       	com	r23
    1fee:	61 95       	neg	r22
    1ff0:	7f 4f       	sbci	r23, 0xFF	; 255
    1ff2:	8f 4f       	sbci	r24, 0xFF	; 255
    1ff4:	9f 4f       	sbci	r25, 0xFF	; 255
    1ff6:	99 23       	and	r25, r25
    1ff8:	a9 f0       	breq	.+42     	; 0x2024 <__floatsisf+0x40>
    1ffa:	f9 2f       	mov	r31, r25
    1ffc:	96 e9       	ldi	r25, 0x96	; 150
    1ffe:	bb 27       	eor	r27, r27
    2000:	93 95       	inc	r25
    2002:	f6 95       	lsr	r31
    2004:	87 95       	ror	r24
    2006:	77 95       	ror	r23
    2008:	67 95       	ror	r22
    200a:	b7 95       	ror	r27
    200c:	f1 11       	cpse	r31, r1
    200e:	f8 cf       	rjmp	.-16     	; 0x2000 <__floatsisf+0x1c>
    2010:	fa f4       	brpl	.+62     	; 0x2050 <__floatsisf+0x6c>
    2012:	bb 0f       	add	r27, r27
    2014:	11 f4       	brne	.+4      	; 0x201a <__floatsisf+0x36>
    2016:	60 ff       	sbrs	r22, 0
    2018:	1b c0       	rjmp	.+54     	; 0x2050 <__floatsisf+0x6c>
    201a:	6f 5f       	subi	r22, 0xFF	; 255
    201c:	7f 4f       	sbci	r23, 0xFF	; 255
    201e:	8f 4f       	sbci	r24, 0xFF	; 255
    2020:	9f 4f       	sbci	r25, 0xFF	; 255
    2022:	16 c0       	rjmp	.+44     	; 0x2050 <__floatsisf+0x6c>
    2024:	88 23       	and	r24, r24
    2026:	11 f0       	breq	.+4      	; 0x202c <__floatsisf+0x48>
    2028:	96 e9       	ldi	r25, 0x96	; 150
    202a:	11 c0       	rjmp	.+34     	; 0x204e <__floatsisf+0x6a>
    202c:	77 23       	and	r23, r23
    202e:	21 f0       	breq	.+8      	; 0x2038 <__floatsisf+0x54>
    2030:	9e e8       	ldi	r25, 0x8E	; 142
    2032:	87 2f       	mov	r24, r23
    2034:	76 2f       	mov	r23, r22
    2036:	05 c0       	rjmp	.+10     	; 0x2042 <__floatsisf+0x5e>
    2038:	66 23       	and	r22, r22
    203a:	71 f0       	breq	.+28     	; 0x2058 <__floatsisf+0x74>
    203c:	96 e8       	ldi	r25, 0x86	; 134
    203e:	86 2f       	mov	r24, r22
    2040:	70 e0       	ldi	r23, 0x00	; 0
    2042:	60 e0       	ldi	r22, 0x00	; 0
    2044:	2a f0       	brmi	.+10     	; 0x2050 <__floatsisf+0x6c>
    2046:	9a 95       	dec	r25
    2048:	66 0f       	add	r22, r22
    204a:	77 1f       	adc	r23, r23
    204c:	88 1f       	adc	r24, r24
    204e:	da f7       	brpl	.-10     	; 0x2046 <__floatsisf+0x62>
    2050:	88 0f       	add	r24, r24
    2052:	96 95       	lsr	r25
    2054:	87 95       	ror	r24
    2056:	97 f9       	bld	r25, 7
    2058:	08 95       	ret

0000205a <__fp_inf>:
    205a:	97 f9       	bld	r25, 7
    205c:	9f 67       	ori	r25, 0x7F	; 127
    205e:	80 e8       	ldi	r24, 0x80	; 128
    2060:	70 e0       	ldi	r23, 0x00	; 0
    2062:	60 e0       	ldi	r22, 0x00	; 0
    2064:	08 95       	ret

00002066 <__fp_nan>:
    2066:	9f ef       	ldi	r25, 0xFF	; 255
    2068:	80 ec       	ldi	r24, 0xC0	; 192
    206a:	08 95       	ret

0000206c <__fp_pscA>:
    206c:	00 24       	eor	r0, r0
    206e:	0a 94       	dec	r0
    2070:	16 16       	cp	r1, r22
    2072:	17 06       	cpc	r1, r23
    2074:	18 06       	cpc	r1, r24
    2076:	09 06       	cpc	r0, r25
    2078:	08 95       	ret

0000207a <__fp_pscB>:
    207a:	00 24       	eor	r0, r0
    207c:	0a 94       	dec	r0
    207e:	12 16       	cp	r1, r18
    2080:	13 06       	cpc	r1, r19
    2082:	14 06       	cpc	r1, r20
    2084:	05 06       	cpc	r0, r21
    2086:	08 95       	ret

00002088 <__fp_round>:
    2088:	09 2e       	mov	r0, r25
    208a:	03 94       	inc	r0
    208c:	00 0c       	add	r0, r0
    208e:	11 f4       	brne	.+4      	; 0x2094 <__fp_round+0xc>
    2090:	88 23       	and	r24, r24
    2092:	52 f0       	brmi	.+20     	; 0x20a8 <__fp_round+0x20>
    2094:	bb 0f       	add	r27, r27
    2096:	40 f4       	brcc	.+16     	; 0x20a8 <__fp_round+0x20>
    2098:	bf 2b       	or	r27, r31
    209a:	11 f4       	brne	.+4      	; 0x20a0 <__fp_round+0x18>
    209c:	60 ff       	sbrs	r22, 0
    209e:	04 c0       	rjmp	.+8      	; 0x20a8 <__fp_round+0x20>
    20a0:	6f 5f       	subi	r22, 0xFF	; 255
    20a2:	7f 4f       	sbci	r23, 0xFF	; 255
    20a4:	8f 4f       	sbci	r24, 0xFF	; 255
    20a6:	9f 4f       	sbci	r25, 0xFF	; 255
    20a8:	08 95       	ret

000020aa <__fp_split3>:
    20aa:	57 fd       	sbrc	r21, 7
    20ac:	90 58       	subi	r25, 0x80	; 128
    20ae:	44 0f       	add	r20, r20
    20b0:	55 1f       	adc	r21, r21
    20b2:	59 f0       	breq	.+22     	; 0x20ca <__fp_splitA+0x10>
    20b4:	5f 3f       	cpi	r21, 0xFF	; 255
    20b6:	71 f0       	breq	.+28     	; 0x20d4 <__fp_splitA+0x1a>
    20b8:	47 95       	ror	r20

000020ba <__fp_splitA>:
    20ba:	88 0f       	add	r24, r24
    20bc:	97 fb       	bst	r25, 7
    20be:	99 1f       	adc	r25, r25
    20c0:	61 f0       	breq	.+24     	; 0x20da <__fp_splitA+0x20>
    20c2:	9f 3f       	cpi	r25, 0xFF	; 255
    20c4:	79 f0       	breq	.+30     	; 0x20e4 <__fp_splitA+0x2a>
    20c6:	87 95       	ror	r24
    20c8:	08 95       	ret
    20ca:	12 16       	cp	r1, r18
    20cc:	13 06       	cpc	r1, r19
    20ce:	14 06       	cpc	r1, r20
    20d0:	55 1f       	adc	r21, r21
    20d2:	f2 cf       	rjmp	.-28     	; 0x20b8 <__fp_split3+0xe>
    20d4:	46 95       	lsr	r20
    20d6:	f1 df       	rcall	.-30     	; 0x20ba <__fp_splitA>
    20d8:	08 c0       	rjmp	.+16     	; 0x20ea <__fp_splitA+0x30>
    20da:	16 16       	cp	r1, r22
    20dc:	17 06       	cpc	r1, r23
    20de:	18 06       	cpc	r1, r24
    20e0:	99 1f       	adc	r25, r25
    20e2:	f1 cf       	rjmp	.-30     	; 0x20c6 <__fp_splitA+0xc>
    20e4:	86 95       	lsr	r24
    20e6:	71 05       	cpc	r23, r1
    20e8:	61 05       	cpc	r22, r1
    20ea:	08 94       	sec
    20ec:	08 95       	ret

000020ee <__fp_zero>:
    20ee:	e8 94       	clt

000020f0 <__fp_szero>:
    20f0:	bb 27       	eor	r27, r27
    20f2:	66 27       	eor	r22, r22
    20f4:	77 27       	eor	r23, r23
    20f6:	cb 01       	movw	r24, r22
    20f8:	97 f9       	bld	r25, 7
    20fa:	08 95       	ret

000020fc <__divmodhi4>:
    20fc:	97 fb       	bst	r25, 7
    20fe:	07 2e       	mov	r0, r23
    2100:	16 f4       	brtc	.+4      	; 0x2106 <__divmodhi4+0xa>
    2102:	00 94       	com	r0
    2104:	06 d0       	rcall	.+12     	; 0x2112 <__divmodhi4_neg1>
    2106:	77 fd       	sbrc	r23, 7
    2108:	08 d0       	rcall	.+16     	; 0x211a <__divmodhi4_neg2>
    210a:	1a d0       	rcall	.+52     	; 0x2140 <__udivmodhi4>
    210c:	07 fc       	sbrc	r0, 7
    210e:	05 d0       	rcall	.+10     	; 0x211a <__divmodhi4_neg2>
    2110:	3e f4       	brtc	.+14     	; 0x2120 <__divmodhi4_exit>

00002112 <__divmodhi4_neg1>:
    2112:	90 95       	com	r25
    2114:	81 95       	neg	r24
    2116:	9f 4f       	sbci	r25, 0xFF	; 255
    2118:	08 95       	ret

0000211a <__divmodhi4_neg2>:
    211a:	70 95       	com	r23
    211c:	61 95       	neg	r22
    211e:	7f 4f       	sbci	r23, 0xFF	; 255

00002120 <__divmodhi4_exit>:
    2120:	08 95       	ret

00002122 <__umulhisi3>:
    2122:	a2 9f       	mul	r26, r18
    2124:	b0 01       	movw	r22, r0
    2126:	b3 9f       	mul	r27, r19
    2128:	c0 01       	movw	r24, r0
    212a:	a3 9f       	mul	r26, r19
    212c:	70 0d       	add	r23, r0
    212e:	81 1d       	adc	r24, r1
    2130:	11 24       	eor	r1, r1
    2132:	91 1d       	adc	r25, r1
    2134:	b2 9f       	mul	r27, r18
    2136:	70 0d       	add	r23, r0
    2138:	81 1d       	adc	r24, r1
    213a:	11 24       	eor	r1, r1
    213c:	91 1d       	adc	r25, r1
    213e:	08 95       	ret

00002140 <__udivmodhi4>:
    2140:	aa 1b       	sub	r26, r26
    2142:	bb 1b       	sub	r27, r27
    2144:	51 e1       	ldi	r21, 0x11	; 17
    2146:	07 c0       	rjmp	.+14     	; 0x2156 <__udivmodhi4_ep>

00002148 <__udivmodhi4_loop>:
    2148:	aa 1f       	adc	r26, r26
    214a:	bb 1f       	adc	r27, r27
    214c:	a6 17       	cp	r26, r22
    214e:	b7 07       	cpc	r27, r23
    2150:	10 f0       	brcs	.+4      	; 0x2156 <__udivmodhi4_ep>
    2152:	a6 1b       	sub	r26, r22
    2154:	b7 0b       	sbc	r27, r23

00002156 <__udivmodhi4_ep>:
    2156:	88 1f       	adc	r24, r24
    2158:	99 1f       	adc	r25, r25
    215a:	5a 95       	dec	r21
    215c:	a9 f7       	brne	.-22     	; 0x2148 <__udivmodhi4_loop>
    215e:	80 95       	com	r24
    2160:	90 95       	com	r25
    2162:	bc 01       	movw	r22, r24
    2164:	cd 01       	movw	r24, r26
    2166:	08 95       	ret

00002168 <_exit>:
    2168:	f8 94       	cli

0000216a <__stop_program>:
    216a:	ff cf       	rjmp	.-2      	; 0x216a <__stop_program>
